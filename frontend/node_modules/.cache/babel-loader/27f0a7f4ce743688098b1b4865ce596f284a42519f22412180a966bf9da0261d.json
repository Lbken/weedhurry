{"ast":null,"code":"import React,{useEffect,useState,useCallback}from'react';import{useNavigate}from'react-router-dom';import DeliveryPickupWrapper from'../components/DeliveryPickupWrapper';import api from'../api/api';import'./DeliveryPickupPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DeliveryPickupPage=()=>{const[vendors,setVendors]=useState([]);const[parsedAddress,setParsedAddress]=useState({street:'',city:'',stateAbbreviation:''});const[animate,setAnimate]=useState(false);const navigate=useNavigate();useEffect(()=>{setAnimate(true);const savedAddress=localStorage.getItem('userAddress');if(savedAddress){var _parts$,_parts$2,_parts$3;const parts=savedAddress.split(',');setParsedAddress({street:((_parts$=parts[0])===null||_parts$===void 0?void 0:_parts$.trim())||'',city:((_parts$2=parts[1])===null||_parts$2===void 0?void 0:_parts$2.trim())||'',stateAbbreviation:((_parts$3=parts[2])===null||_parts$3===void 0?void 0:_parts$3.trim().split(' ')[0])||''});}},[]);const calculateDistance=(lat1,lng1,lat2,lng2)=>{const toRadians=degree=>degree*Math.PI/180;const R=3958.8;// Radius of Earth in miles\nconst dLat=toRadians(lat2-lat1);const dLng=toRadians(lng2-lng1);const a=Math.sin(dLat/2)*Math.sin(dLat/2)+Math.cos(toRadians(lat1))*Math.cos(toRadians(lat2))*Math.sin(dLng/2)*Math.sin(dLng/2);const c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));return R*c;};const fetchVendors=useCallback(async()=>{const address=localStorage.getItem('userAddress');if(!address){console.log('No address found in localStorage');return;}try{// Get coordinates from Google Geocoding API\nconst geocodeResponse=await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(address)}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`);const geocodeData=await geocodeResponse.json();if(geocodeData.status!=='OK'){console.error('Geocoding failed:',geocodeData.status);return;}const{lat,lng}=geocodeData.results[0].geometry.location;console.log('User coordinates:',{lat,lng});// Fetch vendors using configured axios instance\nconst{data:vendorsData}=await api.get('/api/map/map-vendors',{params:{lat,lng}});if(!(vendorsData!==null&&vendorsData!==void 0&&vendorsData.vendors)||!Array.isArray(vendorsData.vendors)){console.log('No vendors found or invalid response format');return;}const vendorsWithDistance=vendorsData.vendors.map(vendor=>{var _vendor$deliveryZone,_vendor$storefrontAdd;let coordinates=null;if((_vendor$deliveryZone=vendor.deliveryZone)!==null&&_vendor$deliveryZone!==void 0&&_vendor$deliveryZone.coordinates){coordinates=vendor.deliveryZone.coordinates;}else if((_vendor$storefrontAdd=vendor.storefrontAddress)!==null&&_vendor$storefrontAdd!==void 0&&_vendor$storefrontAdd.coordinates){coordinates=vendor.storefrontAddress.coordinates;}if(!coordinates||!Array.isArray(coordinates)||coordinates.length!==2){console.warn(`Vendor ${vendor.dispensaryName} has invalid coordinates`);return null;}const[vLng,vLat]=coordinates.map(coord=>typeof coord==='object'?parseFloat(coord.$numberDouble||coord.$numberInt):parseFloat(coord));if(isNaN(vLat)||isNaN(vLng)){console.warn(`Invalid coordinate values for vendor ${vendor.dispensaryName}`);return null;}const milesAway=calculateDistance(lat,lng,vLat,vLng);return{...vendor,coordinates:[vLng,vLat],milesAway:milesAway.toFixed(1)};}).filter(Boolean);console.log(`Found ${vendorsWithDistance.length} valid vendors`);setVendors(vendorsWithDistance);}catch(error){var _error$response,_error$response2;console.error('Error fetching vendors:',{message:error.message,response:(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data,status:(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status});}},[]);useEffect(()=>{fetchVendors();},[fetchVendors]);if(!parsedAddress.street&&!parsedAddress.city&&!parsedAddress.stateAbbreviation){return/*#__PURE__*/_jsxs(\"p\",{className:\"mt-4\",children:[\"No address set. Please go back and \",/*#__PURE__*/_jsx(\"a\",{href:\"/\",children:\"enter your address\"}),\".\"]});}return/*#__PURE__*/_jsx(\"div\",{className:`delivery-pickup-page ${animate?'slide-in':''}`,style:{minHeight:'100vh',overflowX:'visible',backgroundColor:'#F8F9FA'},children:/*#__PURE__*/_jsx(DeliveryPickupWrapper,{vendors:vendors,onNavigate:navigate})});};export default DeliveryPickupPage;","map":{"version":3,"names":["React","useEffect","useState","useCallback","useNavigate","DeliveryPickupWrapper","api","jsx","_jsx","jsxs","_jsxs","DeliveryPickupPage","vendors","setVendors","parsedAddress","setParsedAddress","street","city","stateAbbreviation","animate","setAnimate","navigate","savedAddress","localStorage","getItem","_parts$","_parts$2","_parts$3","parts","split","trim","calculateDistance","lat1","lng1","lat2","lng2","toRadians","degree","Math","PI","R","dLat","dLng","a","sin","cos","c","atan2","sqrt","fetchVendors","address","console","log","geocodeResponse","fetch","encodeURIComponent","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","geocodeData","json","status","error","lat","lng","results","geometry","location","data","vendorsData","get","params","Array","isArray","vendorsWithDistance","map","vendor","_vendor$deliveryZone","_vendor$storefrontAdd","coordinates","deliveryZone","storefrontAddress","length","warn","dispensaryName","vLng","vLat","coord","parseFloat","$numberDouble","$numberInt","isNaN","milesAway","toFixed","filter","Boolean","_error$response","_error$response2","message","response","className","children","href","style","minHeight","overflowX","backgroundColor","onNavigate"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/pages/DeliveryPickupPage.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DeliveryPickupWrapper from '../components/DeliveryPickupWrapper';\nimport api from '../api/api';\nimport './DeliveryPickupPage.css';\n\nconst DeliveryPickupPage = () => {\n  const [vendors, setVendors] = useState([]);\n  const [parsedAddress, setParsedAddress] = useState({ street: '', city: '', stateAbbreviation: '' });\n  const [animate, setAnimate] = useState(false);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setAnimate(true);\n\n    const savedAddress = localStorage.getItem('userAddress');\n    if (savedAddress) {\n      const parts = savedAddress.split(',');\n      setParsedAddress({\n        street: parts[0]?.trim() || '',\n        city: parts[1]?.trim() || '',\n        stateAbbreviation: parts[2]?.trim().split(' ')[0] || '',\n      });\n    }\n  }, []);\n\n  const calculateDistance = (lat1, lng1, lat2, lng2) => {\n    const toRadians = (degree) => (degree * Math.PI) / 180;\n    const R = 3958.8; // Radius of Earth in miles\n    const dLat = toRadians(lat2 - lat1);\n    const dLng = toRadians(lng2 - lng1);\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(toRadians(lat1)) * Math.cos(toRadians(lat2)) *\n      Math.sin(dLng / 2) * Math.sin(dLng / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n  };\n\n  const fetchVendors = useCallback(async () => {\n    const address = localStorage.getItem('userAddress');\n    if (!address) {\n      console.log('No address found in localStorage');\n      return;\n    }\n\n    try {\n      // Get coordinates from Google Geocoding API\n      const geocodeResponse = await fetch(\n        `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(\n          address\n        )}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`\n      );\n      const geocodeData = await geocodeResponse.json();\n      \n      if (geocodeData.status !== 'OK') {\n        console.error('Geocoding failed:', geocodeData.status);\n        return;\n      }\n\n      const { lat, lng } = geocodeData.results[0].geometry.location;\n      console.log('User coordinates:', { lat, lng });\n\n      // Fetch vendors using configured axios instance\n      const { data: vendorsData } = await api.get('/api/map/map-vendors', {\n        params: { lat, lng }\n      });\n\n      if (!vendorsData?.vendors || !Array.isArray(vendorsData.vendors)) {\n        console.log('No vendors found or invalid response format');\n        return;\n      }\n\n      const vendorsWithDistance = vendorsData.vendors.map((vendor) => {\n        let coordinates = null;\n        if (vendor.deliveryZone?.coordinates) {\n          coordinates = vendor.deliveryZone.coordinates;\n        } else if (vendor.storefrontAddress?.coordinates) {\n          coordinates = vendor.storefrontAddress.coordinates;\n        }\n\n        if (!coordinates || !Array.isArray(coordinates) || coordinates.length !== 2) {\n          console.warn(`Vendor ${vendor.dispensaryName} has invalid coordinates`);\n          return null;\n        }\n\n        const [vLng, vLat] = coordinates.map(coord => \n          typeof coord === 'object' ? parseFloat(coord.$numberDouble || coord.$numberInt) : parseFloat(coord)\n        );\n\n        if (isNaN(vLat) || isNaN(vLng)) {\n          console.warn(`Invalid coordinate values for vendor ${vendor.dispensaryName}`);\n          return null;\n        }\n\n        const milesAway = calculateDistance(lat, lng, vLat, vLng);\n        return {\n          ...vendor,\n          coordinates: [vLng, vLat],\n          milesAway: milesAway.toFixed(1)\n        };\n      }).filter(Boolean);\n\n      console.log(`Found ${vendorsWithDistance.length} valid vendors`);\n      setVendors(vendorsWithDistance);\n\n    } catch (error) {\n      console.error('Error fetching vendors:', {\n        message: error.message,\n        response: error.response?.data,\n        status: error.response?.status\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchVendors();\n  }, [fetchVendors]);\n\n  if (!parsedAddress.street && !parsedAddress.city && !parsedAddress.stateAbbreviation) {\n    return <p className='mt-4'>No address set. Please go back and <a href=\"/\">enter your address</a>.</p>;\n  }\n\n  return (\n    <div\n      className={`delivery-pickup-page ${animate ? 'slide-in' : ''}`}\n      style={{\n        minHeight: '100vh',\n        overflowX: 'visible',\n        backgroundColor: '#F8F9FA',\n      }}\n    >\n      <DeliveryPickupWrapper \n        vendors={vendors}\n        onNavigate={navigate}\n      />\n    </div>\n  );\n};\n\nexport default DeliveryPickupPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}