{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/NearbyVendorsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport VendorCard from './VendorCard';\nimport Footer from './Footer';\nimport api from '../api/api';\nimport { geocodeAddress } from '../utils/googleMapsLoader';\nimport { processVendorCoordinates } from '../utils/coordinateUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NearbyVendorsPage = ({\n  searchQuery\n}) => {\n  _s();\n  const [vendors, setVendors] = useState([]);\n  const [parsedAddress, setParsedAddress] = useState({\n    street: '',\n    city: '',\n    stateAbbreviation: ''\n  });\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Calculate distance between two points\n  const calculateDistance = (lat1, lng1, lat2, lng2) => {\n    const toRadians = degree => degree * Math.PI / 180;\n    const R = 3963; // Earth's radius in miles\n    const dLat = toRadians(lat2 - lat1);\n    const dLng = toRadians(lng2 - lng1);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(toRadians(lat1)) * Math.cos(toRadians(lat2)) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n  };\n\n  // Process saved address when component mounts\n  useEffect(() => {\n    const savedAddress = localStorage.getItem('userAddress');\n    if (savedAddress) {\n      var _parts$, _parts$2, _parts$3;\n      const parts = savedAddress.split(',');\n      setParsedAddress({\n        street: ((_parts$ = parts[0]) === null || _parts$ === void 0 ? void 0 : _parts$.trim()) || '',\n        city: ((_parts$2 = parts[1]) === null || _parts$2 === void 0 ? void 0 : _parts$2.trim()) || '',\n        stateAbbreviation: ((_parts$3 = parts[2]) === null || _parts$3 === void 0 ? void 0 : _parts$3.trim().split(' ')[0]) || ''\n      });\n    }\n  }, []);\n\n  // Fetch and process vendors\n  const fetchVendors = async () => {\n    try {\n      const savedAddress = localStorage.getItem('userAddress');\n      if (!savedAddress) {\n        throw new Error('No address found');\n      }\n\n      // Get coordinates using geocoding\n      const geocodeResponse = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(savedAddress)}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`);\n      const geocodeData = await geocodeResponse.json();\n      if (geocodeData.status !== 'OK') {\n        throw new Error('Could not find location');\n      }\n      const {\n        lat,\n        lng\n      } = geocodeData.results[0].geometry.location;\n      console.log('User location:', {\n        lat,\n        lng\n      });\n\n      // Fetch nearby vendors\n      const {\n        data: vendorsData\n      } = await api.get('/api/vendors/nearby', {\n        params: {\n          lat,\n          lng\n        }\n      });\n      if (!(vendorsData !== null && vendorsData !== void 0 && vendorsData.vendors) || !Array.isArray(vendorsData.vendors)) {\n        throw new Error('No vendors found near your location');\n      }\n      console.log('Total vendors found:', vendorsData.vendors.length);\n\n      // Process vendors and their coordinates\n      const processedVendors = vendorsData.vendors.filter(vendor => ['Delivery', 'Pickup & Delivery'].includes(vendor.dispensaryType)).map(vendor => {\n        var _vendor$storefrontAdd, _vendor$deliveryZone;\n        // Extract and validate coordinates\n        let coordinates = null;\n\n        // For Pickup & Delivery vendors, try storefront first\n        if (vendor.dispensaryType === 'Pickup & Delivery' && (_vendor$storefrontAdd = vendor.storefrontAddress) !== null && _vendor$storefrontAdd !== void 0 && _vendor$storefrontAdd.coordinates) {\n          coordinates = processVendorCoordinates(vendor);\n        }\n\n        // If no valid coordinates yet, try delivery zone\n        if (!coordinates && (_vendor$deliveryZone = vendor.deliveryZone) !== null && _vendor$deliveryZone !== void 0 && _vendor$deliveryZone.coordinates) {\n          coordinates = vendor.deliveryZone.coordinates.map(coord => {\n            if (coord && typeof coord === 'object' && coord.$numberDouble !== undefined) {\n              return parseFloat(coord.$numberDouble);\n            }\n            return parseFloat(coord);\n          });\n        }\n        if (!coordinates || coordinates.length !== 2) {\n          console.warn(`Invalid coordinates for vendor ${vendor.dispensaryName}`);\n          return null;\n        }\n        const [vLng, vLat] = coordinates;\n\n        // Calculate distance from user location\n        const milesAway = parseFloat(calculateDistance(lat, lng, vLat, vLng).toFixed(1));\n        return {\n          ...vendor,\n          coordinates,\n          milesAway\n        };\n      }).filter(Boolean) // Remove null entries\n      .sort((a, b) => a.milesAway - b.milesAway); // Sort by distance\n\n      console.log('Processed vendors:', processedVendors.length);\n      setVendors(processedVendors);\n    } catch (error) {\n      console.error('Error fetching vendors:', error);\n      setError(error.message || 'Failed to load vendors');\n    }\n  };\n\n  // Initial load of vendors\n  useEffect(() => {\n    const loadVendors = async () => {\n      setLoading(true);\n      try {\n        await fetchVendors();\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadVendors();\n  }, []);\n\n  // Filter vendors based on search query\n  const filteredVendors = vendors.map(vendor => {\n    var _vendor$products;\n    const filteredProducts = ((_vendor$products = vendor.products) === null || _vendor$products === void 0 ? void 0 : _vendor$products.filter(product => {\n      var _product$name, _product$brand, _product$strain;\n      const query = searchQuery.trim().toLowerCase();\n      return ((_product$name = product.name) === null || _product$name === void 0 ? void 0 : _product$name.toLowerCase().includes(query)) || ((_product$brand = product.brand) === null || _product$brand === void 0 ? void 0 : _product$brand.toLowerCase().includes(query)) || ((_product$strain = product.strain) === null || _product$strain === void 0 ? void 0 : _product$strain.toLowerCase().includes(query));\n    })) || [];\n    return {\n      ...vendor,\n      products: filteredProducts\n    };\n  });\n\n  // Render component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid p-0\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vendor-list\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading vendors...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this) : filteredVendors.length ? filteredVendors.map(vendor => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vendors-page vendor-card-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(VendorCard, {\n          vendor: vendor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this)\n      }, vendor._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this)) : searchQuery ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-muted my-4\",\n        children: \"No vendors match your search.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-muted my-4\",\n        children: \"No vendors found in your area.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(NearbyVendorsPage, \"QWULWMAPUft8ZY1TuJTvUunTWeQ=\");\n_c = NearbyVendorsPage;\nexport default NearbyVendorsPage;\nvar _c;\n$RefreshReg$(_c, \"NearbyVendorsPage\");","map":{"version":3,"names":["React","useEffect","useState","VendorCard","Footer","api","geocodeAddress","processVendorCoordinates","jsxDEV","_jsxDEV","NearbyVendorsPage","searchQuery","_s","vendors","setVendors","parsedAddress","setParsedAddress","street","city","stateAbbreviation","error","setError","loading","setLoading","calculateDistance","lat1","lng1","lat2","lng2","toRadians","degree","Math","PI","R","dLat","dLng","a","sin","cos","c","atan2","sqrt","savedAddress","localStorage","getItem","_parts$","_parts$2","_parts$3","parts","split","trim","fetchVendors","Error","geocodeResponse","fetch","encodeURIComponent","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","geocodeData","json","status","lat","lng","results","geometry","location","console","log","data","vendorsData","get","params","Array","isArray","length","processedVendors","filter","vendor","includes","dispensaryType","map","_vendor$storefrontAdd","_vendor$deliveryZone","coordinates","storefrontAddress","deliveryZone","coord","$numberDouble","undefined","parseFloat","warn","dispensaryName","vLng","vLat","milesAway","toFixed","Boolean","sort","b","message","loadVendors","filteredVendors","_vendor$products","filteredProducts","products","product","_product$name","_product$brand","_product$strain","query","toLowerCase","name","brand","strain","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_id","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/NearbyVendorsPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport VendorCard from './VendorCard';\nimport Footer from './Footer';\nimport api from '../api/api';\nimport { geocodeAddress } from '../utils/googleMapsLoader';\nimport { processVendorCoordinates } from '../utils/coordinateUtils';\n\nconst NearbyVendorsPage = ({ searchQuery }) => {\n  const [vendors, setVendors] = useState([]);\n  const [parsedAddress, setParsedAddress] = useState({ \n    street: '', \n    city: '', \n    stateAbbreviation: '' \n  });\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Calculate distance between two points\n  const calculateDistance = (lat1, lng1, lat2, lng2) => {\n    const toRadians = (degree) => (degree * Math.PI) / 180;\n    const R = 3963; // Earth's radius in miles\n    const dLat = toRadians(lat2 - lat1);\n    const dLng = toRadians(lng2 - lng1);\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(toRadians(lat1)) * Math.cos(toRadians(lat2)) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n  };\n\n  // Process saved address when component mounts\n  useEffect(() => {\n    const savedAddress = localStorage.getItem('userAddress');\n    if (savedAddress) {\n      const parts = savedAddress.split(',');\n      setParsedAddress({\n        street: parts[0]?.trim() || '',\n        city: parts[1]?.trim() || '',\n        stateAbbreviation: parts[2]?.trim().split(' ')[0] || '',\n      });\n    }\n  }, []);\n\n  // Fetch and process vendors\n  const fetchVendors = async () => {\n    try {\n      const savedAddress = localStorage.getItem('userAddress');\n      if (!savedAddress) {\n        throw new Error('No address found');\n      }\n\n      // Get coordinates using geocoding\n      const geocodeResponse = await fetch(\n        `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(\n          savedAddress\n        )}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`\n      );\n      const geocodeData = await geocodeResponse.json();\n      \n      if (geocodeData.status !== 'OK') {\n        throw new Error('Could not find location');\n      }\n\n      const { lat, lng } = geocodeData.results[0].geometry.location;\n      console.log('User location:', { lat, lng });\n\n      // Fetch nearby vendors\n      const { data: vendorsData } = await api.get('/api/vendors/nearby', {\n        params: { lat, lng }\n      });\n\n      if (!vendorsData?.vendors || !Array.isArray(vendorsData.vendors)) {\n        throw new Error('No vendors found near your location');\n      }\n\n      console.log('Total vendors found:', vendorsData.vendors.length);\n\n      // Process vendors and their coordinates\n      const processedVendors = vendorsData.vendors\n        .filter(vendor => ['Delivery', 'Pickup & Delivery'].includes(vendor.dispensaryType))\n        .map(vendor => {\n          // Extract and validate coordinates\n          let coordinates = null;\n          \n          // For Pickup & Delivery vendors, try storefront first\n          if (vendor.dispensaryType === 'Pickup & Delivery' && vendor.storefrontAddress?.coordinates) {\n            coordinates = processVendorCoordinates(vendor);\n          }\n          \n          // If no valid coordinates yet, try delivery zone\n          if (!coordinates && vendor.deliveryZone?.coordinates) {\n            coordinates = vendor.deliveryZone.coordinates.map(coord => {\n              if (coord && typeof coord === 'object' && coord.$numberDouble !== undefined) {\n                return parseFloat(coord.$numberDouble);\n              }\n              return parseFloat(coord);\n            });\n          }\n\n          if (!coordinates || coordinates.length !== 2) {\n            console.warn(`Invalid coordinates for vendor ${vendor.dispensaryName}`);\n            return null;\n          }\n\n          const [vLng, vLat] = coordinates;\n\n          // Calculate distance from user location\n          const milesAway = parseFloat(calculateDistance(\n            lat,\n            lng,\n            vLat,\n            vLng\n          ).toFixed(1));\n\n          return {\n            ...vendor,\n            coordinates,\n            milesAway\n          };\n        })\n        .filter(Boolean) // Remove null entries\n        .sort((a, b) => a.milesAway - b.milesAway); // Sort by distance\n\n      console.log('Processed vendors:', processedVendors.length);\n      setVendors(processedVendors);\n\n    } catch (error) {\n      console.error('Error fetching vendors:', error);\n      setError(error.message || 'Failed to load vendors');\n    }\n  };\n\n  // Initial load of vendors\n  useEffect(() => {\n    const loadVendors = async () => {\n      setLoading(true);\n      try {\n        await fetchVendors();\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadVendors();\n  }, []);\n\n  // Filter vendors based on search query\n  const filteredVendors = vendors.map((vendor) => {\n    const filteredProducts = vendor.products?.filter((product) => {\n      const query = searchQuery.trim().toLowerCase();\n      return (\n        product.name?.toLowerCase().includes(query) ||\n        product.brand?.toLowerCase().includes(query) ||\n        product.strain?.toLowerCase().includes(query)\n      );\n    }) || [];\n\n    return { ...vendor, products: filteredProducts };\n  });\n\n  // Render component\n  return (\n    <div className=\"container-fluid p-0\">\n      <div className=\"vendor-list\">\n        {loading ? (\n          <p>Loading vendors...</p>\n        ) : error ? (\n          <p className=\"text-danger\">{error}</p>\n        ) : filteredVendors.length ? (\n          filteredVendors.map((vendor) => (\n            <div key={vendor._id} className=\"vendors-page vendor-card-wrapper\">\n              <VendorCard vendor={vendor} />\n            </div>\n          ))\n        ) : searchQuery ? (\n          <p className=\"text-center text-muted my-4\">No vendors match your search.</p>\n        ) : (\n          <p className=\"text-center text-muted my-4\">No vendors found in your area.</p>\n        )}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default NearbyVendorsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}