{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nconst publicRoutes = ['/', '/nearby', '/login', '/register', '/add-strain'];\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [auth, setAuth] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Helper function to clear auth state and cookies\n  const clearAuthState = () => {\n    setAuth(null);\n    // Clear cookies with all necessary attributes\n    document.cookie = 'accessToken=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT; Domain=.weedhurry.com; Secure; SameSite=None';\n    document.cookie = 'refreshToken=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT; Domain=.weedhurry.com; Secure; SameSite=None';\n  };\n\n  // Function to log in the user\n  const login = async vendorId => {\n    setAuth({\n      vendorId\n    });\n  };\n\n  // Function to log out the user\n  const logout = async () => {\n    try {\n      console.log('Starting logout process...');\n      await api.post('/auth/logout');\n      console.log('Logout API call successful');\n      clearAuthState();\n      console.log('Auth state and cookies cleared');\n      return true;\n    } catch (error) {\n      console.error('Logout failed:', error);\n      clearAuthState();\n      throw error;\n    }\n  };\n\n  // Function to check authentication status\n  const checkAuthStatus = async () => {\n    // Skip auth check for public routes\n    if (publicRoutes.includes(window.location.pathname)) {\n      setLoading(false);\n      return;\n    }\n    try {\n      var _response$data;\n      const response = await api.get('/auth/validate', {\n        withCredentials: true\n      });\n      if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.success) {\n        setAuth({\n          vendorId: response.data.vendorId\n        });\n      } else {\n        try {\n          var _validationResponse$d;\n          await api.post('/auth/refresh-token');\n          const validationResponse = await api.get('/auth/validate');\n          if ((_validationResponse$d = validationResponse.data) !== null && _validationResponse$d !== void 0 && _validationResponse$d.success) {\n            setAuth({\n              vendorId: validationResponse.data.vendorId\n            });\n          } else {\n            clearAuthState();\n          }\n        } catch (refreshError) {\n          console.error('Token refresh failed:', refreshError);\n          clearAuthState();\n        }\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      clearAuthState();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check auth status on mount and route change\n  useEffect(() => {\n    const handleRouteChange = () => {\n      checkAuthStatus();\n    };\n\n    // Initial check\n    checkAuthStatus();\n\n    // Listen for route changes\n    window.addEventListener('popstate', handleRouteChange);\n    return () => {\n      window.removeEventListener('popstate', handleRouteChange);\n    };\n  }, []);\n  const contextValue = {\n    auth,\n    login,\n    logout,\n    loading,\n    checkAuthStatus\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 24\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"1M3j6YOcUIG6FlGAoQ0D+5QxHCI=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","publicRoutes","AuthProvider","children","_s","auth","setAuth","loading","setLoading","clearAuthState","document","cookie","login","vendorId","logout","console","log","post","error","checkAuthStatus","includes","window","location","pathname","_response$data","response","get","withCredentials","data","success","_validationResponse$d","validationResponse","refreshError","handleRouteChange","addEventListener","removeEventListener","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../utils/api';\n\nexport const AuthContext = createContext();\n\nconst publicRoutes = ['/', '/nearby', '/login', '/register', '/add-strain'];\n\nexport const AuthProvider = ({ children }) => {\n    const [auth, setAuth] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    // Helper function to clear auth state and cookies\n    const clearAuthState = () => {\n        setAuth(null);\n        // Clear cookies with all necessary attributes\n        document.cookie = 'accessToken=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT; Domain=.weedhurry.com; Secure; SameSite=None';\n        document.cookie = 'refreshToken=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT; Domain=.weedhurry.com; Secure; SameSite=None';\n    };\n\n    // Function to log in the user\n    const login = async (vendorId) => {\n        setAuth({ vendorId });\n    };\n\n    // Function to log out the user\n    const logout = async () => {\n        try {\n            console.log('Starting logout process...');\n            await api.post('/auth/logout');\n            console.log('Logout API call successful');\n            \n            clearAuthState();\n            console.log('Auth state and cookies cleared');\n            \n            return true;\n        } catch (error) {\n            console.error('Logout failed:', error);\n            clearAuthState();\n            throw error;\n        }\n    };\n\n    // Function to check authentication status\n    const checkAuthStatus = async () => {\n        // Skip auth check for public routes\n        if (publicRoutes.includes(window.location.pathname)) {\n            setLoading(false);\n            return;\n        }\n\n        try {\n            const response = await api.get('/auth/validate', {\n                withCredentials: true\n            });\n\n            if (response.data?.success) {\n                setAuth({ vendorId: response.data.vendorId });\n            } else {\n                try {\n                    await api.post('/auth/refresh-token');\n                    const validationResponse = await api.get('/auth/validate');\n                    if (validationResponse.data?.success) {\n                        setAuth({ vendorId: validationResponse.data.vendorId });\n                    } else {\n                        clearAuthState();\n                    }\n                } catch (refreshError) {\n                    console.error('Token refresh failed:', refreshError);\n                    clearAuthState();\n                }\n            }\n        } catch (error) {\n            console.error('Auth check failed:', error);\n            clearAuthState();\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Check auth status on mount and route change\n    useEffect(() => {\n        const handleRouteChange = () => {\n            checkAuthStatus();\n        };\n\n        // Initial check\n        checkAuthStatus();\n\n        // Listen for route changes\n        window.addEventListener('popstate', handleRouteChange);\n\n        return () => {\n            window.removeEventListener('popstate', handleRouteChange);\n        };\n    }, []);\n\n    const contextValue = {\n        auth,\n        login,\n        logout,\n        loading,\n        checkAuthStatus\n    };\n\n    return (\n        <AuthContext.Provider value={contextValue}>\n            {loading ? <div>Loading...</div> : children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (!context) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}