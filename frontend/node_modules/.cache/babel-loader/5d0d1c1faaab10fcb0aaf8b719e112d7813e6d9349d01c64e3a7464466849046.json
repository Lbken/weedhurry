{"ast":null,"code":"// Inside the fetchVendors function in VendorMapNew.js\nuseEffect(() => {\n  const fetchVendors = async () => {\n    try {\n      const response = await fetch('/api/vendors/nearby');\n      const data = await response.json();\n      if (data.success && data.vendors) {\n        const formattedVendors = data.vendors.filter(vendor => {\n          var _vendor$storefrontAdd, _vendor$storefrontAdd2;\n          return vendor._id && ((_vendor$storefrontAdd = vendor.storefrontAddress) === null || _vendor$storefrontAdd === void 0 ? void 0 : (_vendor$storefrontAdd2 = _vendor$storefrontAdd.coordinates) === null || _vendor$storefrontAdd2 === void 0 ? void 0 : _vendor$storefrontAdd2.length) === 2;\n        }).map(vendor => ({\n          ...vendor,\n          // Handle potential MongoDB Extended JSON format\n          _id: typeof vendor._id === 'object' ? vendor._id.$oid || vendor._id.toString() : vendor._id.toString(),\n          coordinates: {\n            lat: parseFloat(vendor.storefrontAddress.coordinates[1]),\n            lng: parseFloat(vendor.storefrontAddress.coordinates[0])\n          }\n        }));\n        setVendors(formattedVendors);\n      }\n    } catch (error) {\n      console.error('Error fetching vendors:', error);\n    }\n  };\n  fetchVendors();\n}, []);","map":{"version":3,"names":["useEffect","fetchVendors","response","fetch","data","json","success","vendors","formattedVendors","filter","vendor","_vendor$storefrontAdd","_vendor$storefrontAdd2","_id","storefrontAddress","coordinates","length","map","$oid","toString","lat","parseFloat","lng","setVendors","error","console"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/VendorMapNew.js"],"sourcesContent":["// Inside the fetchVendors function in VendorMapNew.js\nuseEffect(() => {\n    const fetchVendors = async () => {\n      try {\n        const response = await fetch('/api/vendors/nearby');\n        const data = await response.json();\n        \n        if (data.success && data.vendors) {\n          const formattedVendors = data.vendors\n            .filter(vendor => \n              vendor._id && \n              vendor.storefrontAddress?.coordinates?.length === 2\n            )\n            .map(vendor => ({\n              ...vendor,\n              // Handle potential MongoDB Extended JSON format\n              _id: typeof vendor._id === 'object' ? \n                   vendor._id.$oid || vendor._id.toString() : \n                   vendor._id.toString(),\n              coordinates: {\n                lat: parseFloat(vendor.storefrontAddress.coordinates[1]),\n                lng: parseFloat(vendor.storefrontAddress.coordinates[0])\n              }\n            }));\n\n          setVendors(formattedVendors);\n        }\n      } catch (error) {\n        console.error('Error fetching vendors:', error);\n      }\n    };\n\n    fetchVendors();\n}, []);"],"mappings":"AAAA;AACAA,SAAS,CAAC,MAAM;EACZ,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qBAAqB,CAAC;MACnD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,OAAO,IAAIF,IAAI,CAACG,OAAO,EAAE;QAChC,MAAMC,gBAAgB,GAAGJ,IAAI,CAACG,OAAO,CAClCE,MAAM,CAACC,MAAM;UAAA,IAAAC,qBAAA,EAAAC,sBAAA;UAAA,OACZF,MAAM,CAACG,GAAG,IACV,EAAAF,qBAAA,GAAAD,MAAM,CAACI,iBAAiB,cAAAH,qBAAA,wBAAAC,sBAAA,GAAxBD,qBAAA,CAA0BI,WAAW,cAAAH,sBAAA,uBAArCA,sBAAA,CAAuCI,MAAM,MAAK,CAAC;QAAA,CACrD,CAAC,CACAC,GAAG,CAACP,MAAM,KAAK;UACd,GAAGA,MAAM;UACT;UACAG,GAAG,EAAE,OAAOH,MAAM,CAACG,GAAG,KAAK,QAAQ,GAC9BH,MAAM,CAACG,GAAG,CAACK,IAAI,IAAIR,MAAM,CAACG,GAAG,CAACM,QAAQ,CAAC,CAAC,GACxCT,MAAM,CAACG,GAAG,CAACM,QAAQ,CAAC,CAAC;UAC1BJ,WAAW,EAAE;YACXK,GAAG,EAAEC,UAAU,CAACX,MAAM,CAACI,iBAAiB,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;YACxDO,GAAG,EAAED,UAAU,CAACX,MAAM,CAACI,iBAAiB,CAACC,WAAW,CAAC,CAAC,CAAC;UACzD;QACF,CAAC,CAAC,CAAC;QAELQ,UAAU,CAACf,gBAAgB,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAEDvB,YAAY,CAAC,CAAC;AAClB,CAAC,EAAE,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}