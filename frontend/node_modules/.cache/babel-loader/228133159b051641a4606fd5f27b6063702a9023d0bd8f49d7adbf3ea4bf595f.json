{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:5001/api',\n  withCredentials: true\n});\n\n// Interceptor to handle 401 errors and refresh tokens\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true; // Prevent infinite loop\n    try {\n      const storedAuth = JSON.parse(localStorage.getItem('auth'));\n      const refreshToken = storedAuth === null || storedAuth === void 0 ? void 0 : storedAuth.refreshToken;\n\n      // Attempt to refresh the token\n      const refreshResponse = await axios.post('/api/auth/refresh-token', {}, {\n        headers: {\n          Authorization: `Bearer ${refreshToken}`\n        }\n      });\n      const newAuth = {\n        token: refreshResponse.data.accessToken,\n        refreshToken: refreshResponse.data.refreshToken,\n        vendorId: storedAuth.vendorId\n      };\n      localStorage.setItem('auth', JSON.stringify(newAuth));\n      api.defaults.headers.common['Authorization'] = `Bearer ${newAuth.token}`;\n      originalRequest.headers['Authorization'] = `Bearer ${newAuth.token}`;\n      return api(originalRequest); // Retry the original request\n    } catch (refreshError) {\n      console.error('Token refresh failed:', refreshError);\n      localStorage.removeItem('auth');\n      window.location.href = '/login'; // Redirect to login\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","withCredentials","interceptors","response","use","error","_error$response","originalRequest","config","status","_retry","storedAuth","JSON","parse","localStorage","getItem","refreshToken","refreshResponse","post","headers","Authorization","newAuth","token","data","accessToken","vendorId","setItem","stringify","defaults","common","refreshError","console","removeItem","window","location","href","Promise","reject"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/api/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'http://localhost:5001/api',\n    withCredentials: true,\n});\n\n// Interceptor to handle 401 errors and refresh tokens\napi.interceptors.response.use(\n    (response) => response,\n    async (error) => {\n        const originalRequest = error.config;\n\n        if (error.response?.status === 401 && !originalRequest._retry) {\n            originalRequest._retry = true; // Prevent infinite loop\n            try {\n                const storedAuth = JSON.parse(localStorage.getItem('auth'));\n                const refreshToken = storedAuth?.refreshToken;\n\n                // Attempt to refresh the token\n                const refreshResponse = await axios.post('/api/auth/refresh-token', {}, {\n                    headers: { Authorization: `Bearer ${refreshToken}` },\n                });\n\n                const newAuth = {\n                    token: refreshResponse.data.accessToken,\n                    refreshToken: refreshResponse.data.refreshToken,\n                    vendorId: storedAuth.vendorId,\n                };\n\n                localStorage.setItem('auth', JSON.stringify(newAuth));\n                api.defaults.headers.common['Authorization'] = `Bearer ${newAuth.token}`;\n                originalRequest.headers['Authorization'] = `Bearer ${newAuth.token}`;\n\n                return api(originalRequest); // Retry the original request\n            } catch (refreshError) {\n                console.error('Token refresh failed:', refreshError);\n                localStorage.removeItem('auth');\n                window.location.href = '/login'; // Redirect to login\n            }\n        }\n\n        return Promise.reject(error);\n    }\n);\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAE,2BAA2B;EACpCC,eAAe,EAAE;AACrB,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CACxBD,QAAQ,IAAKA,QAAQ,EACtB,MAAOE,KAAK,IAAK;EAAA,IAAAC,eAAA;EACb,MAAMC,eAAe,GAAGF,KAAK,CAACG,MAAM;EAEpC,IAAI,EAAAF,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBG,MAAM,MAAK,GAAG,IAAI,CAACF,eAAe,CAACG,MAAM,EAAE;IAC3DH,eAAe,CAACG,MAAM,GAAG,IAAI,CAAC,CAAC;IAC/B,IAAI;MACA,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;MAC3D,MAAMC,YAAY,GAAGL,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEK,YAAY;;MAE7C;MACA,MAAMC,eAAe,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,yBAAyB,EAAE,CAAC,CAAC,EAAE;QACpEC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUJ,YAAY;QAAG;MACvD,CAAC,CAAC;MAEF,MAAMK,OAAO,GAAG;QACZC,KAAK,EAAEL,eAAe,CAACM,IAAI,CAACC,WAAW;QACvCR,YAAY,EAAEC,eAAe,CAACM,IAAI,CAACP,YAAY;QAC/CS,QAAQ,EAAEd,UAAU,CAACc;MACzB,CAAC;MAEDX,YAAY,CAACY,OAAO,CAAC,MAAM,EAAEd,IAAI,CAACe,SAAS,CAACN,OAAO,CAAC,CAAC;MACrDvB,GAAG,CAAC8B,QAAQ,CAACT,OAAO,CAACU,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUR,OAAO,CAACC,KAAK,EAAE;MACxEf,eAAe,CAACY,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUE,OAAO,CAACC,KAAK,EAAE;MAEpE,OAAOxB,GAAG,CAACS,eAAe,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,OAAOuB,YAAY,EAAE;MACnBC,OAAO,CAAC1B,KAAK,CAAC,uBAAuB,EAAEyB,YAAY,CAAC;MACpDhB,YAAY,CAACkB,UAAU,CAAC,MAAM,CAAC;MAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAC;IACrC;EACJ;EAEA,OAAOC,OAAO,CAACC,MAAM,CAAChC,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAeP,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}