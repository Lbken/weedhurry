{"ast":null,"code":"// src/utils/googleMapsLoader.js\n\nlet loadingPromise = null;\nexport const loadGoogleMapsScript = () => {\n  if (loadingPromise) {\n    return loadingPromise;\n  }\n  loadingPromise = new Promise((resolve, reject) => {\n    var _window$google;\n    // If script is already loaded, resolve immediately\n    if ((_window$google = window.google) !== null && _window$google !== void 0 && _window$google.maps) {\n      resolve(window.google.maps);\n      return;\n    }\n\n    // Create script element\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}&libraries=places`;\n    script.async = true;\n    script.defer = true;\n\n    // Setup load and error handlers\n    script.addEventListener('load', () => {\n      var _window$google2;\n      if ((_window$google2 = window.google) !== null && _window$google2 !== void 0 && _window$google2.maps) {\n        resolve(window.google.maps);\n      } else {\n        reject(new Error('Google Maps SDK loaded but maps not available'));\n      }\n    });\n    script.addEventListener('error', () => {\n      reject(new Error('Failed to load Google Maps SDK'));\n    });\n\n    // Add script to document\n    document.head.appendChild(script);\n  });\n  return loadingPromise;\n};","map":{"version":3,"names":["loadingPromise","loadGoogleMapsScript","Promise","resolve","reject","_window$google","window","google","maps","script","document","createElement","src","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","async","defer","addEventListener","_window$google2","Error","head","appendChild"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/utils/googleMapsLoader.js"],"sourcesContent":["// src/utils/googleMapsLoader.js\n\nlet loadingPromise = null;\n\nexport const loadGoogleMapsScript = () => {\n  if (loadingPromise) {\n    return loadingPromise;\n  }\n\n  loadingPromise = new Promise((resolve, reject) => {\n    // If script is already loaded, resolve immediately\n    if (window.google?.maps) {\n      resolve(window.google.maps);\n      return;\n    }\n\n    // Create script element\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}&libraries=places`;\n    script.async = true;\n    script.defer = true;\n\n    // Setup load and error handlers\n    script.addEventListener('load', () => {\n      if (window.google?.maps) {\n        resolve(window.google.maps);\n      } else {\n        reject(new Error('Google Maps SDK loaded but maps not available'));\n      }\n    });\n\n    script.addEventListener('error', () => {\n      reject(new Error('Failed to load Google Maps SDK'));\n    });\n\n    // Add script to document\n    document.head.appendChild(script);\n  });\n\n  return loadingPromise;\n};"],"mappings":"AAAA;;AAEA,IAAIA,cAAc,GAAG,IAAI;AAEzB,OAAO,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EACxC,IAAID,cAAc,EAAE;IAClB,OAAOA,cAAc;EACvB;EAEAA,cAAc,GAAG,IAAIE,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IAAA,IAAAC,cAAA;IAChD;IACA,KAAAA,cAAA,GAAIC,MAAM,CAACC,MAAM,cAAAF,cAAA,eAAbA,cAAA,CAAeG,IAAI,EAAE;MACvBL,OAAO,CAACG,MAAM,CAACC,MAAM,CAACC,IAAI,CAAC;MAC3B;IACF;;IAEA;IACA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,GAAG,GAAG,+CAA+CC,OAAO,CAACC,GAAG,CAACC,6BAA6B,mBAAmB;IACxHN,MAAM,CAACO,KAAK,GAAG,IAAI;IACnBP,MAAM,CAACQ,KAAK,GAAG,IAAI;;IAEnB;IACAR,MAAM,CAACS,gBAAgB,CAAC,MAAM,EAAE,MAAM;MAAA,IAAAC,eAAA;MACpC,KAAAA,eAAA,GAAIb,MAAM,CAACC,MAAM,cAAAY,eAAA,eAAbA,eAAA,CAAeX,IAAI,EAAE;QACvBL,OAAO,CAACG,MAAM,CAACC,MAAM,CAACC,IAAI,CAAC;MAC7B,CAAC,MAAM;QACLJ,MAAM,CAAC,IAAIgB,KAAK,CAAC,+CAA+C,CAAC,CAAC;MACpE;IACF,CAAC,CAAC;IAEFX,MAAM,CAACS,gBAAgB,CAAC,OAAO,EAAE,MAAM;MACrCd,MAAM,CAAC,IAAIgB,KAAK,CAAC,gCAAgC,CAAC,CAAC;IACrD,CAAC,CAAC;;IAEF;IACAV,QAAQ,CAACW,IAAI,CAACC,WAAW,CAACb,MAAM,CAAC;EACnC,CAAC,CAAC;EAEF,OAAOT,cAAc;AACvB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}