{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/AddressInput.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddressInput = ({\n  onAddressSelect\n}) => {\n  _s();\n  const inputRef = useRef(null);\n  useEffect(() => {\n    if (!window.google) {\n      console.error('Google Maps API is not loaded');\n      return;\n    }\n    const autocomplete = new window.google.maps.places.Autocomplete(inputRef.current, {\n      types: ['geocode'] // Restrict results to address types\n    });\n    autocomplete.addListener('place_changed', () => {\n      const place = autocomplete.getPlace();\n      if (place && place.formatted_address) {\n        onAddressSelect(place.formatted_address);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: inputRef,\n      placeholder: \"Enter your address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(AddressInput, \"cBQ6FQ+sf5H+lvNONLKqtm4aeQ8=\");\n_c = AddressInput;\nexport default AddressInput;\nvar _c;\n$RefreshReg$(_c, \"AddressInput\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","AddressInput","onAddressSelect","_s","inputRef","window","google","console","error","autocomplete","maps","places","Autocomplete","current","types","addListener","place","getPlace","formatted_address","children","type","ref","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/AddressInput.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nconst AddressInput = ({ onAddressSelect }) => {\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    if (!window.google) {\n      console.error('Google Maps API is not loaded');\n      return;\n    }\n\n    const autocomplete = new window.google.maps.places.Autocomplete(inputRef.current, {\n      types: ['geocode'], // Restrict results to address types\n    });\n\n    autocomplete.addListener('place_changed', () => {\n      const place = autocomplete.getPlace();\n      if (place && place.formatted_address) {\n        onAddressSelect(place.formatted_address);\n      }\n    });\n  }, []);\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        ref={inputRef}\n        placeholder=\"Enter your address\"\n      />\n    </div>\n  );\n};\n\nexport default AddressInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,IAAI,CAACQ,MAAM,CAACC,MAAM,EAAE;MAClBC,OAAO,CAACC,KAAK,CAAC,+BAA+B,CAAC;MAC9C;IACF;IAEA,MAAMC,YAAY,GAAG,IAAIJ,MAAM,CAACC,MAAM,CAACI,IAAI,CAACC,MAAM,CAACC,YAAY,CAACR,QAAQ,CAACS,OAAO,EAAE;MAChFC,KAAK,EAAE,CAAC,SAAS,CAAC,CAAE;IACtB,CAAC,CAAC;IAEFL,YAAY,CAACM,WAAW,CAAC,eAAe,EAAE,MAAM;MAC9C,MAAMC,KAAK,GAAGP,YAAY,CAACQ,QAAQ,CAAC,CAAC;MACrC,IAAID,KAAK,IAAIA,KAAK,CAACE,iBAAiB,EAAE;QACpChB,eAAe,CAACc,KAAK,CAACE,iBAAiB,CAAC;MAC1C;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IAAAmB,QAAA,eACEnB,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXC,GAAG,EAAEjB,QAAS;MACdkB,WAAW,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACvB,EAAA,CA9BIF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAgClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}