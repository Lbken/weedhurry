{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import api from'../utils/api';import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[auth,setAuth]=useState(null);const[loading,setLoading]=useState(true);// Helper function to clear auth state and cookies\nconst clearAuthState=()=>{setAuth(null);// Clear cookies with all necessary attributes\ndocument.cookie='accessToken=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT; Domain=.weedhurry.com; Secure; SameSite=None';document.cookie='refreshToken=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT; Domain=.weedhurry.com; Secure; SameSite=None';};// Function to log in the user\nconst login=async vendorId=>{setAuth({vendorId});};// Function to log out the user\nconst logout=async()=>{try{console.log('Starting logout process...');await api.post('/auth/logout');console.log('Logout API call successful');clearAuthState();console.log('Auth state and cookies cleared');return true;// Return success status for the component to handle navigation\n}catch(error){console.error('Logout failed:',error);clearAuthState();// Still clear state even if API fails\nthrow error;}};// Function to check authentication status\nconst checkAuthStatus=async()=>{try{var _response$data;const response=await api.get('/auth/validate',{withCredentials:true});if((_response$data=response.data)!==null&&_response$data!==void 0&&_response$data.success){setAuth({vendorId:response.data.vendorId});}else{try{var _validationResponse$d;await api.post('/auth/refresh-token');const validationResponse=await api.get('/auth/validate');if((_validationResponse$d=validationResponse.data)!==null&&_validationResponse$d!==void 0&&_validationResponse$d.success){setAuth({vendorId:validationResponse.data.vendorId});}else{clearAuthState();}}catch(refreshError){console.error('Token refresh failed:',refreshError);clearAuthState();}}}catch(error){console.error('Auth check failed:',error);clearAuthState();}finally{setLoading(false);}};// Check auth status on mount\nuseEffect(()=>{checkAuthStatus();},[]);// Create the context value object\nconst contextValue={auth,login,logout,loading,checkAuthStatus// Expose this to allow manual auth checks if needed\n};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:contextValue,children:loading?/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"}):children});};// Custom hook for using auth context\nexport const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsx","_jsx","AuthContext","AuthProvider","_ref","children","auth","setAuth","loading","setLoading","clearAuthState","document","cookie","login","vendorId","logout","console","log","post","error","checkAuthStatus","_response$data","response","get","withCredentials","data","success","_validationResponse$d","validationResponse","refreshError","contextValue","Provider","value","useAuth","context","Error"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../utils/api';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [auth, setAuth] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    // Helper function to clear auth state and cookies\n    const clearAuthState = () => {\n        setAuth(null);\n        // Clear cookies with all necessary attributes\n        document.cookie = 'accessToken=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT; Domain=.weedhurry.com; Secure; SameSite=None';\n        document.cookie = 'refreshToken=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT; Domain=.weedhurry.com; Secure; SameSite=None';\n    };\n\n    // Function to log in the user\n    const login = async (vendorId) => {\n        setAuth({ vendorId });\n    };\n\n    // Function to log out the user\n    const logout = async () => {\n        try {\n            console.log('Starting logout process...');\n            await api.post('/auth/logout');\n            console.log('Logout API call successful');\n            \n            clearAuthState();\n            console.log('Auth state and cookies cleared');\n            \n            return true; // Return success status for the component to handle navigation\n        } catch (error) {\n            console.error('Logout failed:', error);\n            clearAuthState(); // Still clear state even if API fails\n            throw error;\n        }\n    };\n\n    // Function to check authentication status\n    const checkAuthStatus = async () => {\n        try {\n            const response = await api.get('/auth/validate', {\n                withCredentials: true\n            });\n\n            if (response.data?.success) {\n                setAuth({ vendorId: response.data.vendorId });\n            } else {\n                try {\n                    await api.post('/auth/refresh-token');\n                    const validationResponse = await api.get('/auth/validate');\n                    if (validationResponse.data?.success) {\n                        setAuth({ vendorId: validationResponse.data.vendorId });\n                    } else {\n                        clearAuthState();\n                    }\n                } catch (refreshError) {\n                    console.error('Token refresh failed:', refreshError);\n                    clearAuthState();\n                }\n            }\n        } catch (error) {\n            console.error('Auth check failed:', error);\n            clearAuthState();\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Check auth status on mount\n    useEffect(() => {\n        checkAuthStatus();\n    }, []);\n\n    // Create the context value object\n    const contextValue = {\n        auth,\n        login,\n        logout,\n        loading,\n        checkAuthStatus // Expose this to allow manual auth checks if needed\n    };\n\n    return (\n        <AuthContext.Provider value={contextValue}>\n            {loading ? <div>Loading...</div> : children}\n        </AuthContext.Provider>\n    );\n};\n\n// Custom hook for using auth context\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (!context) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}