{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/LogoutButton.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogoutButton = () => {\n  _s();\n  const {\n    logout\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [isLoggingOut, setIsLoggingOut] = useState(false);\n  const handleLogout = async () => {\n    if (isLoggingOut) return;\n    setIsLoggingOut(true);\n    try {\n      await logout();\n      navigate('/login', {\n        replace: true\n      }); // Use replace to prevent back navigation\n    } catch (error) {\n      console.error('Error during logout:', error);\n    } finally {\n      setIsLoggingOut(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleLogout,\n    disabled: isLoggingOut,\n    className: \"btn btn-outline-secondary btn-sm rounded-pill\",\n    children: isLoggingOut ? 'Logging out...' : 'Logout'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(LogoutButton, \"fvhfpRWBf2E5TVXREu6ZwCX3aXQ=\", false, function () {\n  return [useNavigate];\n});\n_c = LogoutButton;\nexport default LogoutButton;\nvar _c;\n$RefreshReg$(_c, \"LogoutButton\");","map":{"version":3,"names":["React","useContext","useState","AuthContext","useNavigate","jsxDEV","_jsxDEV","LogoutButton","_s","logout","navigate","isLoggingOut","setIsLoggingOut","handleLogout","replace","error","console","onClick","disabled","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/LogoutButton.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\n\nconst LogoutButton = () => {\n    const { logout } = useContext(AuthContext);\n    const navigate = useNavigate();\n    const [isLoggingOut, setIsLoggingOut] = useState(false);\n\n    const handleLogout = async () => {\n        if (isLoggingOut) return;\n        \n        setIsLoggingOut(true);\n        try {\n            await logout();\n            navigate('/login', { replace: true }); // Use replace to prevent back navigation\n        } catch (error) {\n            console.error('Error during logout:', error);\n        } finally {\n            setIsLoggingOut(false);\n        }\n    };\n\n    return (\n        <button \n            onClick={handleLogout} \n            disabled={isLoggingOut}\n            className=\"btn btn-outline-secondary btn-sm rounded-pill\"\n        >\n            {isLoggingOut ? 'Logging out...' : 'Logout'}\n        </button>\n    );\n};\n\nexport default LogoutButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAO,CAAC,GAAGR,UAAU,CAACE,WAAW,CAAC;EAC1C,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAIF,YAAY,EAAE;IAElBC,eAAe,CAAC,IAAI,CAAC;IACrB,IAAI;MACA,MAAMH,MAAM,CAAC,CAAC;MACdC,QAAQ,CAAC,QAAQ,EAAE;QAAEI,OAAO,EAAE;MAAK,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD,CAAC,SAAS;MACNH,eAAe,CAAC,KAAK,CAAC;IAC1B;EACJ,CAAC;EAED,oBACIN,OAAA;IACIW,OAAO,EAAEJ,YAAa;IACtBK,QAAQ,EAAEP,YAAa;IACvBQ,SAAS,EAAC,+CAA+C;IAAAC,QAAA,EAExDT,YAAY,GAAG,gBAAgB,GAAG;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEjB,CAAC;AAAChB,EAAA,CA5BID,YAAY;EAAA,QAEGH,WAAW;AAAA;AAAAqB,EAAA,GAF1BlB,YAAY;AA8BlB,eAAeA,YAAY;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}