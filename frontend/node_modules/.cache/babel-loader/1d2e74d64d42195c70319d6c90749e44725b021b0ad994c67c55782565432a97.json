{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/NearbyVendorsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ChangeAddressLink from './ChangeAddressLink';\nimport VendorCard from './VendorCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NearbyVendorsPage = () => {\n  _s();\n  const [vendors, setVendors] = useState([]);\n  const [address] = useState(localStorage.getItem('userAddress') || ''); // Address from localStorage\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Base API URL from environment variables\n  const BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api';\n  const fetchVendors = async () => {\n    if (!address) {\n      setError('Please provide a valid address.');\n      return;\n    }\n    setLoading(true); // Start loading\n    setError(null); // Reset previous errors\n\n    try {\n      // Step 1: Geocode the address\n      const geocodeResponse = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(address)}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`);\n      const geocodeData = await geocodeResponse.json();\n      if (geocodeData.status !== 'OK') {\n        throw new Error('Could not fetch location for the given address.');\n      }\n      const {\n        lat,\n        lng\n      } = geocodeData.results[0].geometry.location;\n\n      // Step 2: Fetch nearby vendors using geocoded location\n      const vendorsResponse = await fetch(`${BASE_URL}/vendors/nearby?lat=${lat}&lng=${lng}`);\n      const vendorsData = await vendorsResponse.json();\n      if (!vendorsData.vendors || vendorsData.vendors.length === 0) {\n        throw new Error('No vendors found near your location.');\n      }\n      setVendors(vendorsData.vendors); // Set fetched vendors\n    } catch (err) {\n      console.error('Error fetching vendors:', err);\n      setError(err.message || 'Failed to load vendors. Please try again later.');\n    } finally {\n      setLoading(false); // Stop loading\n    }\n  };\n\n  // Fetch vendors on component mount\n  useEffect(() => {\n    fetchVendors();\n  }, [address]); // Re-run if address changes\n\n  // Component Rendering\n  if (!address) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No address set. Please go back and enter your address.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Vendors Near You\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChangeAddressLink, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading vendors...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : vendors.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vendor-list\",\n      children: vendors.map(vendor => /*#__PURE__*/_jsxDEV(VendorCard, {\n        vendor: vendor\n      }, vendor._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No vendors found near your address.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(NearbyVendorsPage, \"JKyWEsMACqNzoEp1tj31jIN0yjs=\");\n_c = NearbyVendorsPage;\nexport default NearbyVendorsPage;\nvar _c;\n$RefreshReg$(_c, \"NearbyVendorsPage\");","map":{"version":3,"names":["React","useEffect","useState","ChangeAddressLink","VendorCard","jsxDEV","_jsxDEV","NearbyVendorsPage","_s","vendors","setVendors","address","localStorage","getItem","error","setError","loading","setLoading","BASE_URL","process","env","REACT_APP_API_BASE_URL","fetchVendors","geocodeResponse","fetch","encodeURIComponent","REACT_APP_GOOGLE_MAPS_API_KEY","geocodeData","json","status","Error","lat","lng","results","geometry","location","vendorsResponse","vendorsData","length","err","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","vendor","_id","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/NearbyVendorsPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ChangeAddressLink from './ChangeAddressLink';\nimport VendorCard from './VendorCard';\n\nconst NearbyVendorsPage = () => {\n  const [vendors, setVendors] = useState([]);\n  const [address] = useState(localStorage.getItem('userAddress') || ''); // Address from localStorage\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Base API URL from environment variables\n  const BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api';\n\n  const fetchVendors = async () => {\n    if (!address) {\n      setError('Please provide a valid address.');\n      return;\n    }\n\n    setLoading(true); // Start loading\n    setError(null); // Reset previous errors\n\n    try {\n      // Step 1: Geocode the address\n      const geocodeResponse = await fetch(\n        `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(\n          address\n        )}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`\n      );\n\n      const geocodeData = await geocodeResponse.json();\n\n      if (geocodeData.status !== 'OK') {\n        throw new Error('Could not fetch location for the given address.');\n      }\n\n      const { lat, lng } = geocodeData.results[0].geometry.location;\n\n      // Step 2: Fetch nearby vendors using geocoded location\n      const vendorsResponse = await fetch(`${BASE_URL}/vendors/nearby?lat=${lat}&lng=${lng}`);\n      const vendorsData = await vendorsResponse.json();\n\n      if (!vendorsData.vendors || vendorsData.vendors.length === 0) {\n        throw new Error('No vendors found near your location.');\n      }\n\n      setVendors(vendorsData.vendors); // Set fetched vendors\n    } catch (err) {\n      console.error('Error fetching vendors:', err);\n      setError(err.message || 'Failed to load vendors. Please try again later.');\n    } finally {\n      setLoading(false); // Stop loading\n    }\n  };\n\n  // Fetch vendors on component mount\n  useEffect(() => {\n    fetchVendors();\n  }, [address]); // Re-run if address changes\n\n  // Component Rendering\n  if (!address) {\n    return <p>No address set. Please go back and enter your address.</p>;\n  }\n\n  return (\n    <div className=\"container-fluid mt-3\">\n      <h1>Vendors Near You</h1>\n      <ChangeAddressLink />\n      {loading ? (\n        <p>Loading vendors...</p>\n      ) : error ? (\n        <p className=\"text-danger\">{error}</p>\n      ) : vendors.length ? (\n        <div className=\"vendor-list\">\n          {vendors.map((vendor) => (\n            <VendorCard key={vendor._id} vendor={vendor} />\n          ))}\n        </div>\n      ) : (\n        <p>No vendors found near your address.</p>\n      )}\n    </div>\n  );\n};\n\nexport default NearbyVendorsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,OAAO,CAAC,GAAGT,QAAQ,CAACU,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;EACvE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAMgB,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,2BAA2B;EAElF,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACX,OAAO,EAAE;MACZI,QAAQ,CAAC,iCAAiC,CAAC;MAC3C;IACF;IAEAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;IAEhB,IAAI;MACF;MACA,MAAMQ,eAAe,GAAG,MAAMC,KAAK,CACjC,6DAA6DC,kBAAkB,CAC7Ed,OACF,CAAC,QAAQQ,OAAO,CAACC,GAAG,CAACM,6BAA6B,EACpD,CAAC;MAED,MAAMC,WAAW,GAAG,MAAMJ,eAAe,CAACK,IAAI,CAAC,CAAC;MAEhD,IAAID,WAAW,CAACE,MAAM,KAAK,IAAI,EAAE;QAC/B,MAAM,IAAIC,KAAK,CAAC,iDAAiD,CAAC;MACpE;MAEA,MAAM;QAAEC,GAAG;QAAEC;MAAI,CAAC,GAAGL,WAAW,CAACM,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACC,QAAQ;;MAE7D;MACA,MAAMC,eAAe,GAAG,MAAMZ,KAAK,CAAC,GAAGN,QAAQ,uBAAuBa,GAAG,QAAQC,GAAG,EAAE,CAAC;MACvF,MAAMK,WAAW,GAAG,MAAMD,eAAe,CAACR,IAAI,CAAC,CAAC;MAEhD,IAAI,CAACS,WAAW,CAAC5B,OAAO,IAAI4B,WAAW,CAAC5B,OAAO,CAAC6B,MAAM,KAAK,CAAC,EAAE;QAC5D,MAAM,IAAIR,KAAK,CAAC,sCAAsC,CAAC;MACzD;MAEApB,UAAU,CAAC2B,WAAW,CAAC5B,OAAO,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,OAAO8B,GAAG,EAAE;MACZC,OAAO,CAAC1B,KAAK,CAAC,yBAAyB,EAAEyB,GAAG,CAAC;MAC7CxB,QAAQ,CAACwB,GAAG,CAACE,OAAO,IAAI,iDAAiD,CAAC;IAC5E,CAAC,SAAS;MACRxB,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB;EACF,CAAC;;EAED;EACAhB,SAAS,CAAC,MAAM;IACdqB,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACX,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEf;EACA,IAAI,CAACA,OAAO,EAAE;IACZ,oBAAOL,OAAA;MAAAoC,QAAA,EAAG;IAAsD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACtE;EAEA,oBACExC,OAAA;IAAKyC,SAAS,EAAC,sBAAsB;IAAAL,QAAA,gBACnCpC,OAAA;MAAAoC,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBxC,OAAA,CAACH,iBAAiB;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACpB9B,OAAO,gBACNV,OAAA;MAAAoC,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACvBhC,KAAK,gBACPR,OAAA;MAAGyC,SAAS,EAAC,aAAa;MAAAL,QAAA,EAAE5B;IAAK;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,GACpCrC,OAAO,CAAC6B,MAAM,gBAChBhC,OAAA;MAAKyC,SAAS,EAAC,aAAa;MAAAL,QAAA,EACzBjC,OAAO,CAACuC,GAAG,CAAEC,MAAM,iBAClB3C,OAAA,CAACF,UAAU;QAAkB6C,MAAM,EAAEA;MAAO,GAA3BA,MAAM,CAACC,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAC/C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAENxC,OAAA;MAAAoC,QAAA,EAAG;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC1C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtC,EAAA,CAhFID,iBAAiB;AAAA4C,EAAA,GAAjB5C,iBAAiB;AAkFvB,eAAeA,iBAAiB;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}