{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/PlaceOrder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, Row, Col, Form, Card, Container } from 'react-bootstrap';\nimport { CartContext } from '../context/CartContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestPlaceOrder = () => {\n  _s();\n  const {\n    calculateTotal,\n    cartItems,\n    clearCart\n  } = useContext(CartContext);\n  const [contactInfo, setContactInfo] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    birthdate: '' // Add birthdate to contactInfo\n  });\n  const [savedAddress, setSavedAddress] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [newAddress, setNewAddress] = useState('');\n  const inputRef = useRef(null); // Ref for the address input field\n\n  const navigate = useNavigate();\n  const subtotal = calculateTotal();\n  const taxRate = 0.17;\n  const estimatedTotal = subtotal + subtotal * taxRate;\n  useEffect(() => {\n    const address = localStorage.getItem('userAddress');\n    if (address) {\n      setSavedAddress(address);\n    }\n    const storedContactInfo = JSON.parse(localStorage.getItem('contactInfo'));\n    if (storedContactInfo) {\n      setContactInfo(storedContactInfo);\n    }\n  }, []);\n  useEffect(() => {\n    if (isEditing && inputRef.current) {\n      // Initialize Google Autocomplete\n      const autocomplete = new window.google.maps.places.Autocomplete(inputRef.current, {\n        types: ['geocode'] // Limit the suggestions to addresses\n      });\n\n      // Listen for place selection\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        if (place !== null && place !== void 0 && place.formatted_address) {\n          setNewAddress(place.formatted_address); // Update newAddress with the selected address\n        }\n      });\n    }\n  }, [isEditing]);\n  useEffect(() => {\n    localStorage.setItem('contactInfo', JSON.stringify(contactInfo));\n  }, [contactInfo]);\n  const handleSaveAddress = () => {\n    localStorage.setItem('userAddress', newAddress);\n    setSavedAddress(newAddress);\n    setIsEditing(false);\n  };\n  const formatBirthdate = value => {\n    const digits = value.replace(/\\D/g, ''); // Remove all non-digit characters\n    const parts = [digits.slice(0, 2), digits.slice(2, 4), digits.slice(4, 8)].filter(Boolean); // Keep only non-empty parts\n    return parts.join('/'); // Join with '/'\n  };\n  const handleBirthdateChange = e => {\n    const formattedValue = formatBirthdate(e.target.value);\n    setContactInfo({\n      ...contactInfo,\n      birthdate: formattedValue\n    });\n  };\n  const handlePlaceOrder = async () => {\n    var _cartItems$;\n    if (!contactInfo.firstName || !contactInfo.lastName || !contactInfo.email || !contactInfo.phone || !contactInfo.birthdate) {\n      alert('Please fill out all required fields.');\n      return;\n    }\n    if (!savedAddress) {\n      alert('Please add a delivery address.');\n      return;\n    }\n    const payload = {\n      phone: contactInfo.phone,\n      firstName: contactInfo.firstName,\n      lastName: contactInfo.lastName,\n      email: contactInfo.email,\n      birthday: contactInfo.birthdate,\n      totalAmount: estimatedTotal,\n      vendorId: (_cartItems$ = cartItems[0]) === null || _cartItems$ === void 0 ? void 0 : _cartItems$.vendorId,\n      orderDetails: {\n        type: 'DELIVERY',\n        order_source: 'ECOMMERCE',\n        order_status: 'AWAITING_PROCESSING',\n        delivery_address: savedAddress,\n        items: cartItems.map(item => ({\n          productId: item.productId || item._id,\n          name: item.name,\n          category: item.category,\n          quantity: item.quantity\n        }))\n      }\n    };\n    try {\n      const response = await fetch('http://localhost:5001/api/customer/create-order', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (response.ok) {\n        const result = await response.json();\n        navigate(`/order-confirmation/${result.order._id}`);\n        clearCart();\n      } else {\n        const error = await response.json();\n        alert(`Failed to place order: ${error.message}`);\n      }\n    } catch (error) {\n      console.error('Error placing order:', error);\n      alert('An error occurred. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"place-order-section py-4\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"g-4\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4\",\n            style: {\n              backgroundColor: '#EFEFEF'\n            },\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Delivery Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 19\n                }, this), isEditing ? /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    controlId: \"address\",\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Delivery Address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      ref: inputRef // Attach ref for Google Autocomplete\n                      ,\n                      value: newAddress,\n                      onChange: e => setNewAddress(e.target.value),\n                      placeholder: \"Enter your address\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"success\",\n                    onClick: handleSaveAddress,\n                    children: \"Save Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                    className: \"text-secondary text-sm\",\n                    children: savedAddress || 'N/A'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    onClick: () => {\n                      setNewAddress(savedAddress); // Pre-fill with saved address\n                      setIsEditing(true);\n                    },\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Contact Information\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(Row, {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"First Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 183,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"text\",\n                        value: contactInfo.firstName,\n                        onChange: e => setContactInfo({\n                          ...contactInfo,\n                          firstName: e.target.value\n                        }),\n                        required: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 184,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"Last Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 194,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"text\",\n                        value: contactInfo.lastName,\n                        onChange: e => setContactInfo({\n                          ...contactInfo,\n                          lastName: e.target.value\n                        }),\n                        required: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 195,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    className: \"mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"Email\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 207,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"email\",\n                        value: contactInfo.email,\n                        onChange: e => setContactInfo({\n                          ...contactInfo,\n                          email: e.target.value\n                        }),\n                        required: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 208,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    className: \"mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"Phone\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"text\",\n                        value: contactInfo.phone,\n                        placeholder: \"\",\n                        onChange: e => {\n                          const input = e.target.value.replace(/\\D/g, ''); // Remove non-digit characters\n                          let formattedInput = input;\n                          if (input.length > 3 && input.length <= 6) {\n                            formattedInput = `(${input.slice(0, 3)}) ${input.slice(3)}`;\n                          } else if (input.length > 6) {\n                            formattedInput = `(${input.slice(0, 3)}) ${input.slice(3, 6)}-${input.slice(6, 10)}`;\n                          }\n                          setContactInfo({\n                            ...contactInfo,\n                            phone: formattedInput\n                          });\n                        },\n                        maxLength: 14 // Ensure input doesn't exceed phone number length\n                        ,\n                        required: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 1\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    className: \"mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"Birthdate\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 245,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"text\",\n                        placeholder: \"MM/DD/YYYY\",\n                        value: contactInfo.birthdate,\n                        onChange: handleBirthdateChange,\n                        required: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 246,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4\",\n            style: {\n              backgroundColor: '#EFEFEF'\n            },\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Order Summary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 19\n                }, this), cartItems.length > 0 ? cartItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex justify-content-between align-items-center mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [item.quantity, \" x $\", item.price.toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 25\n                  }, this)]\n                }, item.productId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Your cart is empty.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex justify-content-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"$\", estimatedTotal.toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  className: \"w-100 mt-3\",\n                  onClick: handlePlaceOrder,\n                  children: \"Place Order\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(TestPlaceOrder, \"j69a6l/r7GSxSDvWHZSHKcZ1kHI=\", false, function () {\n  return [useNavigate];\n});\n_c = TestPlaceOrder;\nexport default TestPlaceOrder;\nvar _c;\n$RefreshReg$(_c, \"TestPlaceOrder\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useRef","useNavigate","Button","Row","Col","Form","Card","Container","CartContext","jsxDEV","_jsxDEV","TestPlaceOrder","_s","calculateTotal","cartItems","clearCart","contactInfo","setContactInfo","firstName","lastName","email","phone","birthdate","savedAddress","setSavedAddress","isEditing","setIsEditing","newAddress","setNewAddress","inputRef","navigate","subtotal","taxRate","estimatedTotal","address","localStorage","getItem","storedContactInfo","JSON","parse","current","autocomplete","window","google","maps","places","Autocomplete","types","addListener","place","getPlace","formatted_address","setItem","stringify","handleSaveAddress","formatBirthdate","value","digits","replace","parts","slice","filter","Boolean","join","handleBirthdateChange","e","formattedValue","target","handlePlaceOrder","_cartItems$","alert","payload","birthday","totalAmount","vendorId","orderDetails","type","order_source","order_status","delivery_address","items","map","item","productId","_id","name","category","quantity","response","fetch","method","headers","body","ok","result","json","order","error","message","console","children","fluid","className","lg","xs","style","backgroundColor","Body","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","ref","onChange","placeholder","required","variant","onClick","Text","input","formattedInput","length","maxLength","price","toFixed","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/PlaceOrder.js"],"sourcesContent":["import React, { useState, useContext, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, Row, Col, Form, Card, Container } from 'react-bootstrap';\nimport { CartContext } from '../context/CartContext';\n\nconst TestPlaceOrder = () => {\n  const { calculateTotal, cartItems, clearCart } = useContext(CartContext);\n\n  const [contactInfo, setContactInfo] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    birthdate: '', // Add birthdate to contactInfo\n  });\n\n  const [savedAddress, setSavedAddress] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [newAddress, setNewAddress] = useState('');\n  const inputRef = useRef(null); // Ref for the address input field\n\n  const navigate = useNavigate();\n\n  const subtotal = calculateTotal();\n  const taxRate = 0.17;\n  const estimatedTotal = subtotal + subtotal * taxRate;\n\n  useEffect(() => {\n    const address = localStorage.getItem('userAddress');\n    if (address) {\n      setSavedAddress(address);\n    }\n\n    const storedContactInfo = JSON.parse(localStorage.getItem('contactInfo'));\n    if (storedContactInfo) {\n      setContactInfo(storedContactInfo);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (isEditing && inputRef.current) {\n      // Initialize Google Autocomplete\n      const autocomplete = new window.google.maps.places.Autocomplete(inputRef.current, {\n        types: ['geocode'], // Limit the suggestions to addresses\n      });\n\n      // Listen for place selection\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        if (place?.formatted_address) {\n          setNewAddress(place.formatted_address); // Update newAddress with the selected address\n        }\n      });\n    }\n  }, [isEditing]);\n\n  useEffect(() => {\n    localStorage.setItem('contactInfo', JSON.stringify(contactInfo));\n  }, [contactInfo]);\n\n  const handleSaveAddress = () => {\n    localStorage.setItem('userAddress', newAddress);\n    setSavedAddress(newAddress);\n    setIsEditing(false);\n  };\n\n  const formatBirthdate = (value) => {\n    const digits = value.replace(/\\D/g, ''); // Remove all non-digit characters\n    const parts = [\n      digits.slice(0, 2),\n      digits.slice(2, 4),\n      digits.slice(4, 8),\n    ].filter(Boolean); // Keep only non-empty parts\n    return parts.join('/'); // Join with '/'\n  };\n\n  const handleBirthdateChange = (e) => {\n    const formattedValue = formatBirthdate(e.target.value);\n    setContactInfo({ ...contactInfo, birthdate: formattedValue });\n  };\n\n  const handlePlaceOrder = async () => {\n    if (!contactInfo.firstName || !contactInfo.lastName || !contactInfo.email || !contactInfo.phone || !contactInfo.birthdate) {\n      alert('Please fill out all required fields.');\n      return;\n    }\n    if (!savedAddress) {\n      alert('Please add a delivery address.');\n      return;\n    }\n\n    const payload = {\n      phone: contactInfo.phone,\n      firstName: contactInfo.firstName,\n      lastName: contactInfo.lastName,\n      email: contactInfo.email,\n      birthday: contactInfo.birthdate,\n      totalAmount: estimatedTotal,\n      vendorId: cartItems[0]?.vendorId,\n      orderDetails: {\n        type: 'DELIVERY',\n        order_source: 'ECOMMERCE',\n        order_status: 'AWAITING_PROCESSING',\n        delivery_address: savedAddress,\n        items: cartItems.map((item) => ({\n          productId: item.productId || item._id,\n          name: item.name,\n          category: item.category,\n          quantity: item.quantity,\n        })),\n      },\n    };\n\n    try {\n      const response = await fetch('http://localhost:5001/api/customer/create-order', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload),\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        navigate(`/order-confirmation/${result.order._id}`);\n        clearCart();\n      } else {\n        const error = await response.json();\n        alert(`Failed to place order: ${error.message}`);\n      }\n    } catch (error) {\n      console.error('Error placing order:', error);\n      alert('An error occurred. Please try again later.');\n    }\n  };\n\n  return (\n    <div>\n      <Container fluid className=\"place-order-section py-4\">\n        <Row className=\"g-4\">\n          {/* Left Container: Delivery Address and Contact Information */}\n          <Col lg={6} xs={12}>\n            <div className=\"p-4\" style={{ backgroundColor: '#EFEFEF' }}>\n              <Card>\n                <Card.Body>\n                  <h4>Delivery Address</h4>\n                  {isEditing ? (\n                    <Form>\n                      <Form.Group controlId=\"address\" className=\"mb-3\">\n                        <Form.Label>Delivery Address</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          ref={inputRef} // Attach ref for Google Autocomplete\n                          value={newAddress}\n                          onChange={(e) => setNewAddress(e.target.value)}\n                          placeholder=\"Enter your address\"\n                          required\n                        />\n                      </Form.Group>\n                      <Button variant=\"success\" onClick={handleSaveAddress}>\n                        Save Address\n                      </Button>\n                    </Form>\n                  ) : (\n                    <div>\n                      <Card.Text className=\"text-secondary text-sm\">\n                        {savedAddress || 'N/A'}\n                      </Card.Text>\n                      <Button\n                        variant=\"primary\"\n                        onClick={() => {\n                          setNewAddress(savedAddress); // Pre-fill with saved address\n                          setIsEditing(true);\n                        }}\n                      >\n                        Edit\n                      </Button>\n                    </div>\n                  )}\n                  <hr />\n                  <h4>Contact Information</h4>\n                  <Form>\n                    <Row className=\"mb-3\">\n                      <Col>\n                        <Form.Label>First Name</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          value={contactInfo.firstName}\n                          onChange={(e) =>\n                            setContactInfo({ ...contactInfo, firstName: e.target.value })\n                          }\n                          required\n                        />\n                      </Col>\n                      <Col>\n                        <Form.Label>Last Name</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          value={contactInfo.lastName}\n                          onChange={(e) =>\n                            setContactInfo({ ...contactInfo, lastName: e.target.value })\n                          }\n                          required\n                        />\n                      </Col>\n                    </Row>\n                    <Row className=\"mb-3\">\n                      <Col>\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control\n                          type=\"email\"\n                          value={contactInfo.email}\n                          onChange={(e) =>\n                            setContactInfo({ ...contactInfo, email: e.target.value })\n                          }\n                          required\n                        />\n                      </Col>\n                    </Row>\n                    <Row className=\"mb-3\">\n                      <Col>\n                      <Form.Label>Phone</Form.Label>\n<Form.Control\n  type=\"text\"\n  value={contactInfo.phone}\n  placeholder=\"\"\n  onChange={(e) => {\n    const input = e.target.value.replace(/\\D/g, ''); // Remove non-digit characters\n    let formattedInput = input;\n\n    if (input.length > 3 && input.length <= 6) {\n      formattedInput = `(${input.slice(0, 3)}) ${input.slice(3)}`;\n    } else if (input.length > 6) {\n      formattedInput = `(${input.slice(0, 3)}) ${input.slice(3, 6)}-${input.slice(6, 10)}`;\n    }\n\n    setContactInfo({ ...contactInfo, phone: formattedInput });\n  }}\n  maxLength={14} // Ensure input doesn't exceed phone number length\n  required\n/>\n\n                      </Col>\n                    </Row>\n                    <Row className=\"mb-3\">\n                      <Col>\n                        <Form.Label>Birthdate</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"MM/DD/YYYY\"\n                          value={contactInfo.birthdate}\n                          onChange={handleBirthdateChange}\n                          required\n                        />\n                      </Col>\n                    </Row>\n                  </Form>\n                </Card.Body>\n              </Card>\n            </div>\n          </Col>\n\n          {/* Right Container: Order Summary and Place Order */}\n          <Col lg={6} xs={12}>\n            <div className=\"p-4\" style={{ backgroundColor: '#EFEFEF' }}>\n              <Card>\n                <Card.Body>\n                  <h4>Order Summary</h4>\n                  {cartItems.length > 0 ? (\n                    cartItems.map((item) => (\n                      <div key={item.productId} className=\"d-flex justify-content-between align-items-center mb-3\">\n                        <div>{item.name}</div>\n                        <div>{item.quantity} x ${item.price.toFixed(2)}</div>\n                      </div>\n                    ))\n                  ) : (\n                    <p>Your cart is empty.</p>\n                  )}\n                  <hr />\n                  <div className=\"d-flex justify-content-between\">\n                    <strong>Total</strong>\n                    <span>${estimatedTotal.toFixed(2)}</span>\n                  </div>\n                  <Button\n                    variant=\"primary\"\n                    className=\"w-100 mt-3\"\n                    onClick={handlePlaceOrder}\n                  >\n                    Place Order\n                  </Button>\n                </Card.Body>\n              </Card>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default TestPlaceOrder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}