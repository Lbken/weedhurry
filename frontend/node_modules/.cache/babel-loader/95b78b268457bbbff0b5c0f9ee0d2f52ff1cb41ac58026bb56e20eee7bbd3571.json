{"ast":null,"code":"// Create a new file: coordinateUtils.js\n\nexport const extractCoordinate = coord => {\n  // Handle MongoDB $numberDouble format\n  if (coord && typeof coord === 'object' && coord.$numberDouble !== undefined) {\n    return parseFloat(coord.$numberDouble);\n  }\n  // Handle MongoDB $numberInt format\n  if (coord && typeof coord === 'object' && coord.$numberInt !== undefined) {\n    return parseFloat(coord.$numberInt);\n  }\n  // Handle plain number\n  if (typeof coord === 'number') {\n    return coord;\n  }\n  // Handle string\n  if (typeof coord === 'string') {\n    return parseFloat(coord);\n  }\n  return null;\n};\nexport const validateCoordinates = coords => {\n  if (!coords || !Array.isArray(coords)) {\n    return false;\n  }\n  const [lng, lat] = coords.map(extractCoordinate);\n  return lng !== null && lat !== null && !isNaN(lng) && !isNaN(lat) && lng >= -180 && lng <= 180 && lat >= -90 && lat <= 90;\n};\nexport const processVendorCoordinates = vendor => {\n  var _vendor$storefrontAdd;\n  if (!((_vendor$storefrontAdd = vendor.storefrontAddress) !== null && _vendor$storefrontAdd !== void 0 && _vendor$storefrontAdd.coordinates)) {\n    console.warn(`No coordinates found for vendor ${vendor.dispensaryName}`);\n    return null;\n  }\n  const coords = vendor.storefrontAddress.coordinates;\n  const [lng, lat] = coords.map(extractCoordinate);\n  if (!lng || !lat || isNaN(lng) || isNaN(lat)) {\n    console.warn(`Invalid coordinates for vendor ${vendor.dispensaryName}:`, {\n      lng,\n      lat\n    });\n    return null;\n  }\n  return [lng, lat];\n};","map":{"version":3,"names":["extractCoordinate","coord","$numberDouble","undefined","parseFloat","$numberInt","validateCoordinates","coords","Array","isArray","lng","lat","map","isNaN","processVendorCoordinates","vendor","_vendor$storefrontAdd","storefrontAddress","coordinates","console","warn","dispensaryName"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/utils/api.js"],"sourcesContent":["// Create a new file: coordinateUtils.js\n\nexport const extractCoordinate = (coord) => {\n  // Handle MongoDB $numberDouble format\n  if (coord && typeof coord === 'object' && coord.$numberDouble !== undefined) {\n    return parseFloat(coord.$numberDouble);\n  }\n  // Handle MongoDB $numberInt format\n  if (coord && typeof coord === 'object' && coord.$numberInt !== undefined) {\n    return parseFloat(coord.$numberInt);\n  }\n  // Handle plain number\n  if (typeof coord === 'number') {\n    return coord;\n  }\n  // Handle string\n  if (typeof coord === 'string') {\n    return parseFloat(coord);\n  }\n  return null;\n};\n\nexport const validateCoordinates = (coords) => {\n  if (!coords || !Array.isArray(coords)) {\n    return false;\n  }\n\n  const [lng, lat] = coords.map(extractCoordinate);\n\n  return (\n    lng !== null &&\n    lat !== null &&\n    !isNaN(lng) &&\n    !isNaN(lat) &&\n    lng >= -180 &&\n    lng <= 180 &&\n    lat >= -90 &&\n    lat <= 90\n  );\n};\n\nexport const processVendorCoordinates = (vendor) => {\n  if (!vendor.storefrontAddress?.coordinates) {\n    console.warn(`No coordinates found for vendor ${vendor.dispensaryName}`);\n    return null;\n  }\n\n  const coords = vendor.storefrontAddress.coordinates;\n  const [lng, lat] = coords.map(extractCoordinate);\n\n  if (!lng || !lat || isNaN(lng) || isNaN(lat)) {\n    console.warn(`Invalid coordinates for vendor ${vendor.dispensaryName}:`, { lng, lat });\n    return null;\n  }\n\n  return [lng, lat];\n};"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,iBAAiB,GAAIC,KAAK,IAAK;EAC1C;EACA,IAAIA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACC,aAAa,KAAKC,SAAS,EAAE;IAC3E,OAAOC,UAAU,CAACH,KAAK,CAACC,aAAa,CAAC;EACxC;EACA;EACA,IAAID,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACI,UAAU,KAAKF,SAAS,EAAE;IACxE,OAAOC,UAAU,CAACH,KAAK,CAACI,UAAU,CAAC;EACrC;EACA;EACA,IAAI,OAAOJ,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAOA,KAAK;EACd;EACA;EACA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAOG,UAAU,CAACH,KAAK,CAAC;EAC1B;EACA,OAAO,IAAI;AACb,CAAC;AAED,OAAO,MAAMK,mBAAmB,GAAIC,MAAM,IAAK;EAC7C,IAAI,CAACA,MAAM,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,MAAM,CAAC,EAAE;IACrC,OAAO,KAAK;EACd;EAEA,MAAM,CAACG,GAAG,EAAEC,GAAG,CAAC,GAAGJ,MAAM,CAACK,GAAG,CAACZ,iBAAiB,CAAC;EAEhD,OACEU,GAAG,KAAK,IAAI,IACZC,GAAG,KAAK,IAAI,IACZ,CAACE,KAAK,CAACH,GAAG,CAAC,IACX,CAACG,KAAK,CAACF,GAAG,CAAC,IACXD,GAAG,IAAI,CAAC,GAAG,IACXA,GAAG,IAAI,GAAG,IACVC,GAAG,IAAI,CAAC,EAAE,IACVA,GAAG,IAAI,EAAE;AAEb,CAAC;AAED,OAAO,MAAMG,wBAAwB,GAAIC,MAAM,IAAK;EAAA,IAAAC,qBAAA;EAClD,IAAI,GAAAA,qBAAA,GAACD,MAAM,CAACE,iBAAiB,cAAAD,qBAAA,eAAxBA,qBAAA,CAA0BE,WAAW,GAAE;IAC1CC,OAAO,CAACC,IAAI,CAAC,mCAAmCL,MAAM,CAACM,cAAc,EAAE,CAAC;IACxE,OAAO,IAAI;EACb;EAEA,MAAMd,MAAM,GAAGQ,MAAM,CAACE,iBAAiB,CAACC,WAAW;EACnD,MAAM,CAACR,GAAG,EAAEC,GAAG,CAAC,GAAGJ,MAAM,CAACK,GAAG,CAACZ,iBAAiB,CAAC;EAEhD,IAAI,CAACU,GAAG,IAAI,CAACC,GAAG,IAAIE,KAAK,CAACH,GAAG,CAAC,IAAIG,KAAK,CAACF,GAAG,CAAC,EAAE;IAC5CQ,OAAO,CAACC,IAAI,CAAC,kCAAkCL,MAAM,CAACM,cAAc,GAAG,EAAE;MAAEX,GAAG;MAAEC;IAAI,CAAC,CAAC;IACtF,OAAO,IAAI;EACb;EAEA,OAAO,CAACD,GAAG,EAAEC,GAAG,CAAC;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}