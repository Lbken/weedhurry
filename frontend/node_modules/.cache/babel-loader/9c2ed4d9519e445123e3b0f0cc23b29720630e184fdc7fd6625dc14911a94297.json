{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/PickupMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PickupMap = ({\n  dispensaries\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const markers = useRef([]);\n\n  // Function to load Google Maps script dynamically\n  const loadGoogleMapsScript = callback => {\n    const existingScript = document.getElementById('google-maps-script');\n    if (!existingScript) {\n      const script = document.createElement('script');\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`;\n      script.id = 'google-maps-script';\n      script.async = true;\n      script.defer = true;\n      script.onload = callback;\n      document.body.appendChild(script);\n    } else {\n      existingScript.onload = callback;\n    }\n  };\n\n  // Initialize map\n  const initializeMap = () => {\n    if (mapRef.current && !mapInstance.current) {\n      mapInstance.current = new window.google.maps.Map(mapRef.current, {\n        center: {\n          lat: 34.0522,\n          lng: -118.2437\n        },\n        // Default center (Los Angeles)\n        zoom: 12\n      });\n    }\n  };\n\n  // Add markers to the map\n  const addMarkers = () => {\n    if (!mapInstance.current || !dispensaries.length) return;\n\n    // Clear previous markers\n    markers.current.forEach(marker => marker.setMap(null));\n    markers.current = [];\n\n    // Add new markers\n    dispensaries.forEach(dispensary => {\n      var _dispensary$deliveryZ, _dispensary$businessA;\n      if (!((_dispensary$deliveryZ = dispensary.deliveryZone) !== null && _dispensary$deliveryZ !== void 0 && _dispensary$deliveryZ.coordinates)) return;\n      const [lng, lat] = dispensary.deliveryZone.coordinates;\n      const marker = new window.google.maps.Marker({\n        position: {\n          lat,\n          lng\n        },\n        map: mapInstance.current,\n        title: dispensary.dispensaryName\n      });\n      const infoWindow = new window.google.maps.InfoWindow({\n        content: `<div>\n          <h6>${dispensary.dispensaryName}</h6>\n          <p>${((_dispensary$businessA = dispensary.businessAddress) === null || _dispensary$businessA === void 0 ? void 0 : _dispensary$businessA.street) || 'Address not available'}</p>\n        </div>`\n      });\n      marker.addListener('click', () => {\n        infoWindow.open({\n          anchor: marker,\n          map: mapInstance.current,\n          shouldFocus: false\n        });\n      });\n      markers.current.push(marker);\n    });\n  };\n  useEffect(() => {\n    loadGoogleMapsScript(() => {\n      if (window.google) {\n        initializeMap();\n      } else {\n        console.error('Google Maps JavaScript API failed to load.');\n      }\n    });\n  }, []);\n  useEffect(() => {\n    addMarkers();\n  }, [dispensaries]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    style: {\n      width: '100%',\n      height: '500px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 10\n  }, this);\n};\n_s(PickupMap, \"kqgeY0ahYgTSmq+ElqqKk5HFgSw=\");\n_c = PickupMap;\nexport default PickupMap;\nvar _c;\n$RefreshReg$(_c, \"PickupMap\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","PickupMap","dispensaries","_s","mapRef","mapInstance","markers","loadGoogleMapsScript","callback","existingScript","document","getElementById","script","createElement","src","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","id","async","defer","onload","body","appendChild","initializeMap","current","window","google","maps","Map","center","lat","lng","zoom","addMarkers","length","forEach","marker","setMap","dispensary","_dispensary$deliveryZ","_dispensary$businessA","deliveryZone","coordinates","Marker","position","map","title","dispensaryName","infoWindow","InfoWindow","content","businessAddress","street","addListener","open","anchor","shouldFocus","push","console","error","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/PickupMap.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nconst PickupMap = ({ dispensaries }) => {\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const markers = useRef([]);\n\n  // Function to load Google Maps script dynamically\n  const loadGoogleMapsScript = (callback) => {\n    const existingScript = document.getElementById('google-maps-script');\n\n    if (!existingScript) {\n      const script = document.createElement('script');\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`;\n      script.id = 'google-maps-script';\n      script.async = true;\n      script.defer = true;\n      script.onload = callback;\n      document.body.appendChild(script);\n    } else {\n      existingScript.onload = callback;\n    }\n  };\n\n  // Initialize map\n  const initializeMap = () => {\n    if (mapRef.current && !mapInstance.current) {\n      mapInstance.current = new window.google.maps.Map(mapRef.current, {\n        center: { lat: 34.0522, lng: -118.2437 }, // Default center (Los Angeles)\n        zoom: 12,\n      });\n    }\n  };\n\n  // Add markers to the map\n  const addMarkers = () => {\n    if (!mapInstance.current || !dispensaries.length) return;\n\n    // Clear previous markers\n    markers.current.forEach((marker) => marker.setMap(null));\n    markers.current = [];\n\n    // Add new markers\n    dispensaries.forEach((dispensary) => {\n      if (!dispensary.deliveryZone?.coordinates) return;\n\n      const [lng, lat] = dispensary.deliveryZone.coordinates;\n\n      const marker = new window.google.maps.Marker({\n        position: { lat, lng },\n        map: mapInstance.current,\n        title: dispensary.dispensaryName,\n      });\n\n      const infoWindow = new window.google.maps.InfoWindow({\n        content: `<div>\n          <h6>${dispensary.dispensaryName}</h6>\n          <p>${dispensary.businessAddress?.street || 'Address not available'}</p>\n        </div>`\n      });\n\n      marker.addListener('click', () => {\n        infoWindow.open({\n          anchor: marker,\n          map: mapInstance.current,\n          shouldFocus: false,\n        });\n      });\n\n      markers.current.push(marker);\n    });\n  };\n\n  useEffect(() => {\n    loadGoogleMapsScript(() => {\n      if (window.google) {\n        initializeMap();\n      } else {\n        console.error('Google Maps JavaScript API failed to load.');\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    addMarkers();\n  }, [dispensaries]);\n\n  return <div ref={mapRef} style={{ width: '100%', height: '500px' }}></div>;\n};\n\nexport default PickupMap;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAMC,MAAM,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMO,WAAW,GAAGP,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMQ,OAAO,GAAGR,MAAM,CAAC,EAAE,CAAC;;EAE1B;EACA,MAAMS,oBAAoB,GAAIC,QAAQ,IAAK;IACzC,MAAMC,cAAc,GAAGC,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC;IAEpE,IAAI,CAACF,cAAc,EAAE;MACnB,MAAMG,MAAM,GAAGF,QAAQ,CAACG,aAAa,CAAC,QAAQ,CAAC;MAC/CD,MAAM,CAACE,GAAG,GAAG,+CAA+CC,OAAO,CAACC,GAAG,CAACC,6BAA6B,EAAE;MACvGL,MAAM,CAACM,EAAE,GAAG,oBAAoB;MAChCN,MAAM,CAACO,KAAK,GAAG,IAAI;MACnBP,MAAM,CAACQ,KAAK,GAAG,IAAI;MACnBR,MAAM,CAACS,MAAM,GAAGb,QAAQ;MACxBE,QAAQ,CAACY,IAAI,CAACC,WAAW,CAACX,MAAM,CAAC;IACnC,CAAC,MAAM;MACLH,cAAc,CAACY,MAAM,GAAGb,QAAQ;IAClC;EACF,CAAC;;EAED;EACA,MAAMgB,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIpB,MAAM,CAACqB,OAAO,IAAI,CAACpB,WAAW,CAACoB,OAAO,EAAE;MAC1CpB,WAAW,CAACoB,OAAO,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACzB,MAAM,CAACqB,OAAO,EAAE;QAC/DK,MAAM,EAAE;UAAEC,GAAG,EAAE,OAAO;UAAEC,GAAG,EAAE,CAAC;QAAS,CAAC;QAAE;QAC1CC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;EACF,CAAC;;EAED;EACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI,CAAC7B,WAAW,CAACoB,OAAO,IAAI,CAACvB,YAAY,CAACiC,MAAM,EAAE;;IAElD;IACA7B,OAAO,CAACmB,OAAO,CAACW,OAAO,CAAEC,MAAM,IAAKA,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC,CAAC;IACxDhC,OAAO,CAACmB,OAAO,GAAG,EAAE;;IAEpB;IACAvB,YAAY,CAACkC,OAAO,CAAEG,UAAU,IAAK;MAAA,IAAAC,qBAAA,EAAAC,qBAAA;MACnC,IAAI,GAAAD,qBAAA,GAACD,UAAU,CAACG,YAAY,cAAAF,qBAAA,eAAvBA,qBAAA,CAAyBG,WAAW,GAAE;MAE3C,MAAM,CAACX,GAAG,EAAED,GAAG,CAAC,GAAGQ,UAAU,CAACG,YAAY,CAACC,WAAW;MAEtD,MAAMN,MAAM,GAAG,IAAIX,MAAM,CAACC,MAAM,CAACC,IAAI,CAACgB,MAAM,CAAC;QAC3CC,QAAQ,EAAE;UAAEd,GAAG;UAAEC;QAAI,CAAC;QACtBc,GAAG,EAAEzC,WAAW,CAACoB,OAAO;QACxBsB,KAAK,EAAER,UAAU,CAACS;MACpB,CAAC,CAAC;MAEF,MAAMC,UAAU,GAAG,IAAIvB,MAAM,CAACC,MAAM,CAACC,IAAI,CAACsB,UAAU,CAAC;QACnDC,OAAO,EAAE;AACjB,gBAAgBZ,UAAU,CAACS,cAAc;AACzC,eAAe,EAAAP,qBAAA,GAAAF,UAAU,CAACa,eAAe,cAAAX,qBAAA,uBAA1BA,qBAAA,CAA4BY,MAAM,KAAI,uBAAuB;AAC5E;MACM,CAAC,CAAC;MAEFhB,MAAM,CAACiB,WAAW,CAAC,OAAO,EAAE,MAAM;QAChCL,UAAU,CAACM,IAAI,CAAC;UACdC,MAAM,EAAEnB,MAAM;UACdS,GAAG,EAAEzC,WAAW,CAACoB,OAAO;UACxBgC,WAAW,EAAE;QACf,CAAC,CAAC;MACJ,CAAC,CAAC;MAEFnD,OAAO,CAACmB,OAAO,CAACiC,IAAI,CAACrB,MAAM,CAAC;IAC9B,CAAC,CAAC;EACJ,CAAC;EAEDxC,SAAS,CAAC,MAAM;IACdU,oBAAoB,CAAC,MAAM;MACzB,IAAImB,MAAM,CAACC,MAAM,EAAE;QACjBH,aAAa,CAAC,CAAC;MACjB,CAAC,MAAM;QACLmC,OAAO,CAACC,KAAK,CAAC,4CAA4C,CAAC;MAC7D;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN/D,SAAS,CAAC,MAAM;IACdqC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAAChC,YAAY,CAAC,CAAC;EAElB,oBAAOF,OAAA;IAAK6D,GAAG,EAAEzD,MAAO;IAAC0D,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC5E,CAAC;AAACjE,EAAA,CAtFIF,SAAS;AAAAoE,EAAA,GAATpE,SAAS;AAwFf,eAAeA,SAAS;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}