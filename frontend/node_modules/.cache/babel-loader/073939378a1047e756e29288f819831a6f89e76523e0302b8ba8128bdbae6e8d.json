{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/TestTyping.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Typing from \"react-typing-animation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestTyping = () => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  // Array of content to display in the typing animation\n  const textData = [{\n    heading: \"Sign up for free\",\n    text: \"● Sell more weed.\"\n  }, {\n    heading: \"Easily add products\",\n    text: \"● Showcase your menu with just a few clicks using our product catalog.\"\n  }, {\n    heading: \"Customize your store\",\n    text: \"● Set logo, business hours, minimum order amount and daily promos.\"\n  }, {\n    heading: \"Receive text notifications\",\n    text: \"● When customers place orders for pickup or delivery.\"\n  }, {\n    heading: \"Track your growth\",\n    text: \"● Monitor daily page views and sale trends.\"\n  }];\n  useEffect(() => {\n    // Update the current index every few seconds to cycle through text\n    const interval = setInterval(() => {\n      setCurrentIndex(prevIndex => (prevIndex + 1) % textData.length);\n    }, 5000); // 5 seconds per cycle\n\n    return () => clearInterval(interval); // Cleanup interval on unmount\n  }, [textData.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    style: {\n      fontFamily: \"Poppins, sans-serif\",\n      marginTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"fw-bold\",\n      children: textData[currentIndex].heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typing, {\n      speed: 50,\n      cursorClassName: \"typing-cursor\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-3\",\n        style: {\n          fontWeight: \"400\"\n        },\n        children: textData[currentIndex].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, currentIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(TestTyping, \"tPjzCc9H5UuFdWNuAHYoD0K4UOk=\");\n_c = TestTyping;\nexport default TestTyping;\nvar _c;\n$RefreshReg$(_c, \"TestTyping\");","map":{"version":3,"names":["React","useState","useEffect","Typing","jsxDEV","_jsxDEV","TestTyping","_s","currentIndex","setCurrentIndex","textData","heading","text","interval","setInterval","prevIndex","length","clearInterval","className","style","fontFamily","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","speed","cursorClassName","fontWeight","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/TestTyping.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Typing from \"react-typing-animation\";\n\nconst TestTyping = () => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  // Array of content to display in the typing animation\n  const textData = [\n    { heading: \"Sign up for free\", text: \"● Sell more weed.\" },\n    { heading: \"Easily add products\", text: \"● Showcase your menu with just a few clicks using our product catalog.\" },\n    { heading: \"Customize your store\", text: \"● Set logo, business hours, minimum order amount and daily promos.\" },\n    { heading: \"Receive text notifications\", text: \"● When customers place orders for pickup or delivery.\" },\n    { heading: \"Track your growth\", text: \"● Monitor daily page views and sale trends.\" },\n  ];\n\n  useEffect(() => {\n    // Update the current index every few seconds to cycle through text\n    const interval = setInterval(() => {\n      setCurrentIndex((prevIndex) => (prevIndex + 1) % textData.length);\n    }, 5000); // 5 seconds per cycle\n\n    return () => clearInterval(interval); // Cleanup interval on unmount\n  }, [textData.length]);\n\n  return (\n    <div className=\"text-center\" style={{ fontFamily: \"Poppins, sans-serif\", marginTop: \"50px\" }}>\n      <h1 className=\"fw-bold\">{textData[currentIndex].heading}</h1>\n      <Typing key={currentIndex} speed={50} cursorClassName=\"typing-cursor\">\n        <p className=\"mt-3\" style={{ fontWeight: \"400\" }}>\n          {textData[currentIndex].text}\n        </p>\n      </Typing>\n    </div>\n  );\n};\n\nexport default TestTyping;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;;EAEnD;EACA,MAAMS,QAAQ,GAAG,CACf;IAAEC,OAAO,EAAE,kBAAkB;IAAEC,IAAI,EAAE;EAAoB,CAAC,EAC1D;IAAED,OAAO,EAAE,qBAAqB;IAAEC,IAAI,EAAE;EAAyE,CAAC,EAClH;IAAED,OAAO,EAAE,sBAAsB;IAAEC,IAAI,EAAE;EAAqE,CAAC,EAC/G;IAAED,OAAO,EAAE,4BAA4B;IAAEC,IAAI,EAAE;EAAwD,CAAC,EACxG;IAAED,OAAO,EAAE,mBAAmB;IAAEC,IAAI,EAAE;EAA8C,CAAC,CACtF;EAEDV,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCL,eAAe,CAAEM,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIL,QAAQ,CAACM,MAAM,CAAC;IACnE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAMC,aAAa,CAACJ,QAAQ,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,CAACH,QAAQ,CAACM,MAAM,CAAC,CAAC;EAErB,oBACEX,OAAA;IAAKa,SAAS,EAAC,aAAa;IAACC,KAAK,EAAE;MAAEC,UAAU,EAAE,qBAAqB;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC3FjB,OAAA;MAAIa,SAAS,EAAC,SAAS;MAAAI,QAAA,EAAEZ,QAAQ,CAACF,YAAY,CAAC,CAACG;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7DrB,OAAA,CAACF,MAAM;MAAoBwB,KAAK,EAAE,EAAG;MAACC,eAAe,EAAC,eAAe;MAAAN,QAAA,eACnEjB,OAAA;QAAGa,SAAS,EAAC,MAAM;QAACC,KAAK,EAAE;UAAEU,UAAU,EAAE;QAAM,CAAE;QAAAP,QAAA,EAC9CZ,QAAQ,CAACF,YAAY,CAAC,CAACI;MAAI;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B;IAAC,GAHOlB,YAAY;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACnB,EAAA,CA/BID,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAiChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}