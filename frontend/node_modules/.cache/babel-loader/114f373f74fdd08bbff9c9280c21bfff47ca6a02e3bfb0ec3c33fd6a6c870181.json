{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/UpdateDeliveryZoneComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MapComponent from './MapComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateDeliveryZoneComponent({\n  isLoaded,\n  loadError\n}) {\n  _s();\n  const [deliveryZone, setDeliveryZone] = useState(null);\n\n  // Fetch delivery zone on component mount\n  useEffect(() => {\n    const fetchDeliveryZone = async () => {\n      try {\n        var _result$deliveryZone;\n        const token = localStorage.getItem('token');\n        if (!token) {\n          console.error('Token is missing');\n          return;\n        }\n        const response = await fetch('/api/vendors/delivery-zone', {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          console.error('Failed to fetch delivery zone:', response.statusText);\n          return;\n        }\n        const result = await response.json();\n        if ((_result$deliveryZone = result.deliveryZone) !== null && _result$deliveryZone !== void 0 && _result$deliveryZone.coordinates) {\n          const [lng, lat] = result.deliveryZone.coordinates; // GeoJSON format\n          setDeliveryZone({\n            lat,\n            lng\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching delivery zone:', error);\n      }\n    };\n    fetchDeliveryZone();\n  }, []);\n  const handleUpdateDeliveryZone = async () => {\n    if (!deliveryZone || !deliveryZone.lat || !deliveryZone.lng) {\n      alert('Please select a valid delivery zone before updating.');\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        alert('You are not logged in. Please log in and try again.');\n        return;\n      }\n      const geoJsonDeliveryZone = {\n        type: 'Point',\n        coordinates: [deliveryZone.lng, deliveryZone.lat] // GeoJSON format\n      };\n      const response = await fetch('/api/vendors/delivery-zone', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          deliveryZone: geoJsonDeliveryZone\n        })\n      });\n      if (response.ok) {\n        alert('Delivery zone updated successfully!');\n      } else {\n        alert('Failed to update delivery zone');\n      }\n    } catch (error) {\n      console.error('Error updating delivery zone:', error);\n    }\n  };\n  if (loadError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error loading map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 25\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading map...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Set Delivery Zone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapComponent, {\n      onLocationChange: setDeliveryZone,\n      initialLocation: deliveryZone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdateDeliveryZone,\n      children: \"Update Delivery Zone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(UpdateDeliveryZoneComponent, \"WOoLY8rZwNTnY8U4IPLLTah+8gw=\");\n_c = UpdateDeliveryZoneComponent;\nexport default UpdateDeliveryZoneComponent;\nvar _c;\n$RefreshReg$(_c, \"UpdateDeliveryZoneComponent\");","map":{"version":3,"names":["React","useState","useEffect","MapComponent","jsxDEV","_jsxDEV","UpdateDeliveryZoneComponent","isLoaded","loadError","_s","deliveryZone","setDeliveryZone","fetchDeliveryZone","_result$deliveryZone","token","localStorage","getItem","console","error","response","fetch","method","headers","Authorization","ok","statusText","result","json","coordinates","lng","lat","handleUpdateDeliveryZone","alert","geoJsonDeliveryZone","type","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onLocationChange","initialLocation","onClick","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/UpdateDeliveryZoneComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MapComponent from './MapComponent';\n\nfunction UpdateDeliveryZoneComponent({ isLoaded, loadError }) {\n  const [deliveryZone, setDeliveryZone] = useState(null);\n\n  // Fetch delivery zone on component mount\n  useEffect(() => {\n    const fetchDeliveryZone = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          console.error('Token is missing');\n          return;\n        }\n\n        const response = await fetch('/api/vendors/delivery-zone', {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          console.error('Failed to fetch delivery zone:', response.statusText);\n          return;\n        }\n\n        const result = await response.json();\n        if (result.deliveryZone?.coordinates) {\n          const [lng, lat] = result.deliveryZone.coordinates; // GeoJSON format\n          setDeliveryZone({ lat, lng });\n        }\n      } catch (error) {\n        console.error('Error fetching delivery zone:', error);\n      }\n    };\n\n    fetchDeliveryZone();\n  }, []);\n\n  const handleUpdateDeliveryZone = async () => {\n    if (!deliveryZone || !deliveryZone.lat || !deliveryZone.lng) {\n      alert('Please select a valid delivery zone before updating.');\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        alert('You are not logged in. Please log in and try again.');\n        return;\n      }\n\n      const geoJsonDeliveryZone = {\n        type: 'Point',\n        coordinates: [deliveryZone.lng, deliveryZone.lat], // GeoJSON format\n      };\n\n      const response = await fetch('/api/vendors/delivery-zone', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({ deliveryZone: geoJsonDeliveryZone }),\n      });\n\n      if (response.ok) {\n        alert('Delivery zone updated successfully!');\n      } else {\n        alert('Failed to update delivery zone');\n      }\n    } catch (error) {\n      console.error('Error updating delivery zone:', error);\n    }\n  };\n\n  if (loadError) return <div>Error loading map</div>;\n  if (!isLoaded) return <div>Loading map...</div>;\n\n  return (\n    <div>\n      <h2>Set Delivery Zone</h2>\n      <MapComponent\n        onLocationChange={setDeliveryZone}\n        initialLocation={deliveryZone}\n      />\n      <button onClick={handleUpdateDeliveryZone}>Update Delivery Zone</button>\n    </div>\n  );\n}\n\nexport default UpdateDeliveryZoneComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}