{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [auth, setAuth] = useState(null); // Stores authentication state\n  const [loading, setLoading] = useState(true); // Manages loading state\n\n  /**\n   * Refreshes the access token using the refresh token.\n   * Stores updated tokens in both state and localStorage.\n   * Throws an error if the refresh process fails.\n   */\n  const refreshAccessToken = async () => {\n    try {\n      const storedAuth = JSON.parse(localStorage.getItem('auth'));\n      if (!(storedAuth !== null && storedAuth !== void 0 && storedAuth.refreshToken)) throw new Error('No refresh token available');\n\n      // Call the refresh token endpoint\n      const response = await axios.post('http://localhost:5001/api/auth/refresh-token', {}, {\n        headers: {\n          Authorization: `Bearer ${storedAuth.refreshToken}`\n        }\n      });\n\n      // Update auth state and localStorage with the new tokens\n      const updatedAuth = {\n        ...storedAuth,\n        token: response.data.accessToken,\n        refreshToken: response.data.refreshToken\n      };\n      setAuth(updatedAuth);\n      localStorage.setItem('auth', JSON.stringify(updatedAuth));\n      return updatedAuth.token;\n    } catch (error) {\n      console.error('Failed to refresh token:', error);\n      setAuth(null);\n      localStorage.removeItem('auth');\n      throw new Error('Unable to refresh token');\n    }\n  };\n\n  /**\n   * Initializes authentication state from localStorage on component mount.\n   */\n  useEffect(() => {\n    const initializeAuth = () => {\n      const storedAuth = JSON.parse(localStorage.getItem('auth'));\n      if (storedAuth) {\n        setAuth(storedAuth);\n      }\n      setLoading(false);\n    };\n    initializeAuth();\n  }, []);\n\n  /**\n   * Logs the user out by clearing auth state and localStorage.\n   */\n  const logout = () => {\n    setAuth(null);\n    localStorage.removeItem('auth');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth,\n      setAuth,\n      refreshAccessToken,\n      loading,\n      logout\n    },\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 24\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n// Create a custom hook for accessing the AuthContext\n_s(AuthProvider, \"1M3j6YOcUIG6FlGAoQ0D+5QxHCI=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","auth","setAuth","loading","setLoading","refreshAccessToken","storedAuth","JSON","parse","localStorage","getItem","refreshToken","Error","response","post","headers","Authorization","updatedAuth","token","data","accessToken","setItem","stringify","error","console","removeItem","initializeAuth","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [auth, setAuth] = useState(null); // Stores authentication state\n    const [loading, setLoading] = useState(true); // Manages loading state\n\n    /**\n     * Refreshes the access token using the refresh token.\n     * Stores updated tokens in both state and localStorage.\n     * Throws an error if the refresh process fails.\n     */\n    const refreshAccessToken = async () => {\n        try {\n            const storedAuth = JSON.parse(localStorage.getItem('auth'));\n            if (!storedAuth?.refreshToken) throw new Error('No refresh token available');\n\n            // Call the refresh token endpoint\n            const response = await axios.post('http://localhost:5001/api/auth/refresh-token', {}, {\n                headers: { Authorization: `Bearer ${storedAuth.refreshToken}` },\n            });\n\n            // Update auth state and localStorage with the new tokens\n            const updatedAuth = {\n                ...storedAuth,\n                token: response.data.accessToken,\n                refreshToken: response.data.refreshToken,\n            };\n\n            setAuth(updatedAuth);\n            localStorage.setItem('auth', JSON.stringify(updatedAuth));\n            return updatedAuth.token;\n        } catch (error) {\n            console.error('Failed to refresh token:', error);\n            setAuth(null);\n            localStorage.removeItem('auth');\n            throw new Error('Unable to refresh token');\n        }\n    };\n\n    /**\n     * Initializes authentication state from localStorage on component mount.\n     */\n    useEffect(() => {\n        const initializeAuth = () => {\n            const storedAuth = JSON.parse(localStorage.getItem('auth'));\n            if (storedAuth) {\n                setAuth(storedAuth);\n            }\n            setLoading(false);\n        };\n\n        initializeAuth();\n    }, []);\n\n    /**\n     * Logs the user out by clearing auth state and localStorage.\n     */\n    const logout = () => {\n        setAuth(null);\n        localStorage.removeItem('auth');\n    };\n\n    return (\n        <AuthContext.Provider value={{ auth, setAuth, refreshAccessToken, loading, logout }}>\n            {loading ? <div>Loading...</div> : children}\n        </AuthContext.Provider>\n    );\n};\n\n// Create a custom hook for accessing the AuthContext\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}