{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/PickupMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PickupMap = ({\n  dispensaries,\n  onMarkerClick\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const markers = useRef([]);\n\n  // Function to load Google Maps script dynamically\n  const loadGoogleMapsScript = () => {\n    return new Promise((resolve, reject) => {\n      if (window.google && window.google.maps) {\n        // Google Maps already loaded\n        resolve();\n      } else {\n        const existingScript = document.getElementById('google-maps-script');\n        if (existingScript) {\n          existingScript.onload = resolve;\n          existingScript.onerror = reject;\n        } else {\n          const script = document.createElement('script');\n          script.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}&libraries=places`;\n          script.id = 'google-maps-script';\n          script.async = true;\n          script.defer = true;\n          script.onload = resolve;\n          script.onerror = reject;\n          document.body.appendChild(script);\n        }\n      }\n    });\n  };\n\n  // Initialize map\n  const initializeMap = () => {\n    if (!mapRef.current || !window.google || !window.google.maps) return;\n    if (!mapInstance.current) {\n      mapInstance.current = new window.google.maps.Map(mapRef.current, {\n        center: {\n          lat: 34.0522,\n          lng: -118.2437\n        },\n        // Default center (Los Angeles)\n        zoom: 12\n      });\n    }\n  };\n\n  // Add markers to the map\n  const addMarkers = () => {\n    if (!mapInstance.current || !dispensaries.length) return;\n\n    // Clear previous markers\n    markers.current.forEach(marker => marker.setMap(null));\n    markers.current = [];\n\n    // Add new markers\n    dispensaries.forEach(dispensary => {\n      let coordinates = null;\n\n      // Check if storefrontAddress has valid coordinates\n      if (dispensary.storefrontAddress && Array.isArray(dispensary.storefrontAddress.coordinates) && dispensary.storefrontAddress.coordinates.length === 2) {\n        coordinates = dispensary.storefrontAddress.coordinates;\n      }\n\n      // Fallback to deliveryZone if storefrontAddress is invalid\n      if (!coordinates && dispensary.deliveryZone && Array.isArray(dispensary.deliveryZone.coordinates) && dispensary.deliveryZone.coordinates.length === 2) {\n        coordinates = dispensary.deliveryZone.coordinates;\n      }\n      if (!coordinates) return; // Skip if no valid coordinates\n\n      const [lng, lat] = coordinates;\n      const marker = new window.google.maps.Marker({\n        position: {\n          lat,\n          lng\n        },\n        map: mapInstance.current,\n        title: dispensary.dispensaryName\n      });\n      marker.addListener('click', () => {\n        if (onMarkerClick) onMarkerClick(dispensary);\n      });\n      markers.current.push(marker);\n    });\n  };\n  useEffect(() => {\n    loadGoogleMapsScript().then(() => {\n      initializeMap();\n      addMarkers();\n    }).catch(error => {\n      console.error('Error loading Google Maps script:', error);\n    });\n  }, [dispensaries]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    style: {\n      width: '100%',\n      height: '300px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 10\n  }, this);\n};\n_s(PickupMap, \"Qmv88944aa3hKhufWKyNxSMTxrI=\");\n_c = PickupMap;\nexport default PickupMap;\nvar _c;\n$RefreshReg$(_c, \"PickupMap\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","PickupMap","dispensaries","onMarkerClick","_s","mapRef","mapInstance","markers","loadGoogleMapsScript","Promise","resolve","reject","window","google","maps","existingScript","document","getElementById","onload","onerror","script","createElement","src","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","id","async","defer","body","appendChild","initializeMap","current","Map","center","lat","lng","zoom","addMarkers","length","forEach","marker","setMap","dispensary","coordinates","storefrontAddress","Array","isArray","deliveryZone","Marker","position","map","title","dispensaryName","addListener","push","then","catch","error","console","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/PickupMap.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nconst PickupMap = ({ dispensaries, onMarkerClick }) => {\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const markers = useRef([]);\n\n  // Function to load Google Maps script dynamically\n  const loadGoogleMapsScript = () => {\n    return new Promise((resolve, reject) => {\n      if (window.google && window.google.maps) {\n        // Google Maps already loaded\n        resolve();\n      } else {\n        const existingScript = document.getElementById('google-maps-script');\n        if (existingScript) {\n          existingScript.onload = resolve;\n          existingScript.onerror = reject;\n        } else {\n          const script = document.createElement('script');\n          script.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}&libraries=places`;\n          script.id = 'google-maps-script';\n          script.async = true;\n          script.defer = true;\n          script.onload = resolve;\n          script.onerror = reject;\n          document.body.appendChild(script);\n        }\n      }\n    });\n  };\n\n  // Initialize map\n  const initializeMap = () => {\n    if (!mapRef.current || !window.google || !window.google.maps) return;\n\n    if (!mapInstance.current) {\n      mapInstance.current = new window.google.maps.Map(mapRef.current, {\n        center: { lat: 34.0522, lng: -118.2437 }, // Default center (Los Angeles)\n        zoom: 12,\n      });\n    }\n  };\n\n  // Add markers to the map\n  const addMarkers = () => {\n    if (!mapInstance.current || !dispensaries.length) return;\n\n    // Clear previous markers\n    markers.current.forEach((marker) => marker.setMap(null));\n    markers.current = [];\n\n    // Add new markers\n    dispensaries.forEach((dispensary) => {\n        let coordinates = null;\n      \n        // Check if storefrontAddress has valid coordinates\n        if (\n          dispensary.storefrontAddress &&\n          Array.isArray(dispensary.storefrontAddress.coordinates) &&\n          dispensary.storefrontAddress.coordinates.length === 2\n        ) {\n          coordinates = dispensary.storefrontAddress.coordinates;\n        }\n      \n        // Fallback to deliveryZone if storefrontAddress is invalid\n        if (\n          !coordinates &&\n          dispensary.deliveryZone &&\n          Array.isArray(dispensary.deliveryZone.coordinates) &&\n          dispensary.deliveryZone.coordinates.length === 2\n        ) {\n          coordinates = dispensary.deliveryZone.coordinates;\n        }\n      \n        if (!coordinates) return; // Skip if no valid coordinates\n      \n        const [lng, lat] = coordinates;\n      \n        const marker = new window.google.maps.Marker({\n          position: { lat, lng },\n          map: mapInstance.current,\n          title: dispensary.dispensaryName,\n        });\n      \n        marker.addListener('click', () => {\n          if (onMarkerClick) onMarkerClick(dispensary);\n        });\n      \n        markers.current.push(marker);\n      });\n      \n  };\n\n  useEffect(() => {\n    loadGoogleMapsScript()\n      .then(() => {\n        initializeMap();\n        addMarkers();\n      })\n      .catch((error) => {\n        console.error('Error loading Google Maps script:', error);\n      });\n  }, [dispensaries]);\n\n  return <div ref={mapRef} style={{ width: '100%', height: '300px' }}></div>;\n};\n\nexport default PickupMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}