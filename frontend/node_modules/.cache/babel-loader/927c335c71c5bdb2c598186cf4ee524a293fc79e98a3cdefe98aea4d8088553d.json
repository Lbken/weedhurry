{"ast":null,"code":"const setAuth = authData => {\n  localStorage.setItem('auth', JSON.stringify(authData));\n  setState({\n    token: authData.token,\n    vendorId: authData.vendorId\n  });\n};\nconst loadAuth = () => {\n  const auth = JSON.parse(localStorage.getItem('auth'));\n  if (auth) {\n    setState(auth);\n  }\n};\n\n// Add vendorId to the initial state if available\nconst initialState = {\n  token: null,\n  vendorId: null,\n  ...JSON.parse(localStorage.getItem('auth') || '{}')\n};","map":{"version":3,"names":["setAuth","authData","localStorage","setItem","JSON","stringify","setState","token","vendorId","loadAuth","auth","parse","getItem","initialState"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/context/AuthContext.js"],"sourcesContent":["const setAuth = (authData) => {\n    localStorage.setItem('auth', JSON.stringify(authData));\n    setState({ token: authData.token, vendorId: authData.vendorId });\n};\n\nconst loadAuth = () => {\n    const auth = JSON.parse(localStorage.getItem('auth'));\n    if (auth) {\n        setState(auth);\n    }\n};\n\n// Add vendorId to the initial state if available\nconst initialState = {\n    token: null,\n    vendorId: null,\n    ...JSON.parse(localStorage.getItem('auth') || '{}'),\n};\n"],"mappings":"AAAA,MAAMA,OAAO,GAAIC,QAAQ,IAAK;EAC1BC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC,CAAC;EACtDK,QAAQ,CAAC;IAAEC,KAAK,EAAEN,QAAQ,CAACM,KAAK;IAAEC,QAAQ,EAAEP,QAAQ,CAACO;EAAS,CAAC,CAAC;AACpE,CAAC;AAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,MAAMC,IAAI,GAAGN,IAAI,CAACO,KAAK,CAACT,YAAY,CAACU,OAAO,CAAC,MAAM,CAAC,CAAC;EACrD,IAAIF,IAAI,EAAE;IACNJ,QAAQ,CAACI,IAAI,CAAC;EAClB;AACJ,CAAC;;AAED;AACA,MAAMG,YAAY,GAAG;EACjBN,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE,IAAI;EACd,GAAGJ,IAAI,CAACO,KAAK,CAACT,YAAY,CAACU,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI;AACtD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}