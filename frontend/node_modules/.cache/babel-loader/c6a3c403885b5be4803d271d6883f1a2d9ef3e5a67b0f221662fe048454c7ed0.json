{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/context/CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\n\n// Create a Context for the cart\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  // Load cart items from localStorage on initial load\n  const loadCartFromLocalStorage = () => {\n    const savedCartItems = JSON.parse(localStorage.getItem('cartItems'));\n    return savedCartItems ? savedCartItems : [];\n  };\n\n  // State to hold cart items, initialized from localStorage\n  const [cartItems, setCartItems] = useState(loadCartFromLocalStorage);\n\n  // Save cart items to localStorage whenever cartItems changes\n  useEffect(() => {\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  // Add product to the cart\n  const addToCart = product => {\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(item => item.productId === product.productId);\n      if (existingItem) {\n        return prevItems.map(item => item.productId === product.productId ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n      } else {\n        return [...prevItems, {\n          ...product,\n          quantity: 1\n        }];\n      }\n    });\n  };\n\n  // Remove product from the cart\n  const removeFromCart = productId => {\n    setCartItems(prevItems => prevItems.filter(item => item.productId !== productId));\n  };\n\n  // Increment quantity of a specific item in the cart\n  const incrementItem = productId => {\n    setCartItems(prevItems => prevItems.map(item => item.productId === productId ? {\n      ...item,\n      quantity: item.quantity + 1\n    } : item));\n  };\n\n  // Decrement quantity of a specific item in the cart\n  const decrementItem = productId => {\n    setCartItems(prevItems => prevItems.map(item => item.productId === productId && item.quantity > 1 ? {\n      ...item,\n      quantity: item.quantity - 1\n    } : item));\n  };\n\n  // Update quantity of a specific item in the cart manually\n  const updateItemQuantity = (productId, newQuantity) => {\n    setCartItems(prevItems => prevItems.map(item => item.productId === productId ? {\n      ...item,\n      quantity: newQuantity\n    } : item));\n  };\n\n  // Clear all items from the cart\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  // Calculate total price of items in the cart\n  const calculateTotal = () => {\n    return cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\n  };\n\n  // Get the total number of items in the cart (quantity, not unique items)\n  const getItemCount = () => {\n    return cartItems.reduce((acc, item) => acc + item.quantity, 0);\n  };\n\n  // Provide cart data and functions to the rest of the app\n  const value = {\n    cartItems,\n    addToCart,\n    removeFromCart,\n    incrementItem,\n    decrementItem,\n    updateItemQuantity,\n    clearCart,\n    calculateTotal,\n    getItemCount\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"xsbshZK9GGyuHrOSyb/Hz3NP2aY=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","loadCartFromLocalStorage","savedCartItems","JSON","parse","localStorage","getItem","cartItems","setCartItems","setItem","stringify","addToCart","product","prevItems","existingItem","find","item","productId","map","quantity","removeFromCart","filter","incrementItem","decrementItem","updateItemQuantity","newQuantity","clearCart","calculateTotal","reduce","acc","price","getItemCount","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\n// Create a Context for the cart\nexport const CartContext = createContext();\n\nexport const CartProvider = ({ children }) => {\n  \n  // Load cart items from localStorage on initial load\n  const loadCartFromLocalStorage = () => {\n    const savedCartItems = JSON.parse(localStorage.getItem('cartItems'));\n    return savedCartItems ? savedCartItems : [];\n  };\n\n  // State to hold cart items, initialized from localStorage\n  const [cartItems, setCartItems] = useState(loadCartFromLocalStorage);\n\n  // Save cart items to localStorage whenever cartItems changes\n  useEffect(() => {\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  // Add product to the cart\n  const addToCart = (product) => {\n    setCartItems((prevItems) => {\n      const existingItem = prevItems.find(item => item.productId === product.productId);\n      if (existingItem) {\n        return prevItems.map(item =>\n          item.productId === product.productId ? { ...item, quantity: item.quantity + 1 } : item\n        );\n      } else {\n        return [...prevItems, { ...product, quantity: 1 }];\n      }\n    });\n  };\n\n  // Remove product from the cart\n  const removeFromCart = (productId) => {\n    setCartItems((prevItems) =>\n      prevItems.filter(item => item.productId !== productId)\n    );\n  };\n\n  // Increment quantity of a specific item in the cart\n  const incrementItem = (productId) => {\n    setCartItems((prevItems) =>\n      prevItems.map(item =>\n        item.productId === productId ? { ...item, quantity: item.quantity + 1 } : item\n      )\n    );\n  };\n\n  // Decrement quantity of a specific item in the cart\n  const decrementItem = (productId) => {\n    setCartItems((prevItems) =>\n      prevItems.map(item =>\n        item.productId === productId && item.quantity > 1\n          ? { ...item, quantity: item.quantity - 1 }\n          : item\n      )\n    );\n  };\n\n  // Update quantity of a specific item in the cart manually\n  const updateItemQuantity = (productId, newQuantity) => {\n    setCartItems((prevItems) =>\n      prevItems.map(item =>\n        item.productId === productId ? { ...item, quantity: newQuantity } : item\n      )\n    );\n  };\n\n  // Clear all items from the cart\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  // Calculate total price of items in the cart\n  const calculateTotal = () => {\n    return cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\n  };\n\n  // Get the total number of items in the cart (quantity, not unique items)\n  const getItemCount = () => {\n    return cartItems.reduce((acc, item) => acc + item.quantity, 0);\n  };\n\n  // Provide cart data and functions to the rest of the app\n  const value = {\n    cartItems,\n    addToCart,\n    removeFromCart,\n    incrementItem,\n    decrementItem,\n    updateItemQuantity,\n    clearCart,\n    calculateTotal,\n    getItemCount,\n  };\n\n  return (\n    <CartContext.Provider value={value}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}