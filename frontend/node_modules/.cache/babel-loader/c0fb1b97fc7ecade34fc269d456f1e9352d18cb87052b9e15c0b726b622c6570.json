{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/AddressInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Form } from 'react-bootstrap';\nimport 'bootstrap-icons/font/bootstrap-icons.css'; // Ensure Bootstrap Icons are included\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddressInput = ({\n  onAddressUpdate\n}) => {\n  _s();\n  const [selectedAddress, setSelectedAddress] = useState('');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    if (window.google && inputRef.current) {\n      const autocomplete = new window.google.maps.places.Autocomplete(inputRef.current, {\n        types: ['geocode'],\n        // Suggest addresses only\n        componentRestrictions: {\n          country: 'us'\n        } // Restrict to US\n      });\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        if (place.geometry) {\n          const location = {\n            lat: place.geometry.location.lat(),\n            lng: place.geometry.location.lng(),\n            address: place.formatted_address\n          };\n          setSelectedAddress(location.address); // Update the placeholder\n          onAddressUpdate(location); // Pass location to parent\n        }\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"address-input-container\",\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"d-flex align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-geo-alt-fill text-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        ref: inputRef,\n        type: \"text\",\n        placeholder: selectedAddress || 'Enter delivery address',\n        className: \"rounded-pill ps-5\",\n        \"aria-label\": \"Enter your address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(AddressInput, \"MDrp8YQSVrUUBMfnYqbWrEVBX/s=\");\n_c = AddressInput;\nexport default AddressInput;\nvar _c;\n$RefreshReg$(_c, \"AddressInput\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Form","jsxDEV","_jsxDEV","AddressInput","onAddressUpdate","_s","selectedAddress","setSelectedAddress","inputRef","window","google","current","autocomplete","maps","places","Autocomplete","types","componentRestrictions","country","addListener","place","getPlace","geometry","location","lat","lng","address","formatted_address","className","children","Group","fileName","_jsxFileName","lineNumber","columnNumber","Control","ref","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/AddressInput.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Form } from 'react-bootstrap';\nimport 'bootstrap-icons/font/bootstrap-icons.css'; // Ensure Bootstrap Icons are included\n\nconst AddressInput = ({ onAddressUpdate }) => {\n  const [selectedAddress, setSelectedAddress] = useState('');\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    if (window.google && inputRef.current) {\n      const autocomplete = new window.google.maps.places.Autocomplete(inputRef.current, {\n        types: ['geocode'], // Suggest addresses only\n        componentRestrictions: { country: 'us' }, // Restrict to US\n      });\n\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        if (place.geometry) {\n          const location = {\n            lat: place.geometry.location.lat(),\n            lng: place.geometry.location.lng(),\n            address: place.formatted_address,\n          };\n\n          setSelectedAddress(location.address); // Update the placeholder\n          onAddressUpdate(location); // Pass location to parent\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"address-input-container\">\n      <Form.Group className=\"d-flex align-items-center\">\n        <div className=\"location-icon\">\n          <i className=\"bi bi-geo-alt-fill text-primary\"></i>\n        </div>\n        <Form.Control\n          ref={inputRef}\n          type=\"text\"\n          placeholder={selectedAddress || 'Enter delivery address'}\n          className=\"rounded-pill ps-5\"\n          aria-label=\"Enter your address\"\n        />\n      </Form.Group>\n    </div>\n  );\n};\n\nexport default AddressInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAO,0CAA0C,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMW,QAAQ,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE7BC,SAAS,CAAC,MAAM;IACd,IAAIU,MAAM,CAACC,MAAM,IAAIF,QAAQ,CAACG,OAAO,EAAE;MACrC,MAAMC,YAAY,GAAG,IAAIH,MAAM,CAACC,MAAM,CAACG,IAAI,CAACC,MAAM,CAACC,YAAY,CAACP,QAAQ,CAACG,OAAO,EAAE;QAChFK,KAAK,EAAE,CAAC,SAAS,CAAC;QAAE;QACpBC,qBAAqB,EAAE;UAAEC,OAAO,EAAE;QAAK,CAAC,CAAE;MAC5C,CAAC,CAAC;MAEFN,YAAY,CAACO,WAAW,CAAC,eAAe,EAAE,MAAM;QAC9C,MAAMC,KAAK,GAAGR,YAAY,CAACS,QAAQ,CAAC,CAAC;QACrC,IAAID,KAAK,CAACE,QAAQ,EAAE;UAClB,MAAMC,QAAQ,GAAG;YACfC,GAAG,EAAEJ,KAAK,CAACE,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,CAAC;YAClCC,GAAG,EAAEL,KAAK,CAACE,QAAQ,CAACC,QAAQ,CAACE,GAAG,CAAC,CAAC;YAClCC,OAAO,EAAEN,KAAK,CAACO;UACjB,CAAC;UAEDpB,kBAAkB,CAACgB,QAAQ,CAACG,OAAO,CAAC,CAAC,CAAC;UACtCtB,eAAe,CAACmB,QAAQ,CAAC,CAAC,CAAC;QAC7B;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACErB,OAAA;IAAK0B,SAAS,EAAC,yBAAyB;IAAAC,QAAA,eACtC3B,OAAA,CAACF,IAAI,CAAC8B,KAAK;MAACF,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBAC/C3B,OAAA;QAAK0B,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5B3B,OAAA;UAAG0B,SAAS,EAAC;QAAiC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACNhC,OAAA,CAACF,IAAI,CAACmC,OAAO;QACXC,GAAG,EAAE5B,QAAS;QACd6B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAEhC,eAAe,IAAI,wBAAyB;QACzDsB,SAAS,EAAC,mBAAmB;QAC7B,cAAW;MAAoB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA3CIF,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AA6ClB,eAAeA,YAAY;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}