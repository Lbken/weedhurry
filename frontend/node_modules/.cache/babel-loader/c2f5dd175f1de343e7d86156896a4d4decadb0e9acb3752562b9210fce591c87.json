{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/AddressInput.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loadGoogleMapsScript = callback => {\n  const existingScript = document.getElementById('googleMaps');\n  if (!existingScript) {\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyBpNm0WI_YNu8HKZMWZzfDZFwGuov7CUkY&libraries=places&loading=lazy`;\n    script.id = 'googleMaps';\n    script.async = true;\n    script.defer = true;\n    script.onload = () => {\n      if (callback) callback();\n    };\n    document.body.appendChild(script);\n  } else if (callback) {\n    callback();\n  }\n};\nconst AddressInput = ({\n  onAddressSelect\n}) => {\n  _s();\n  const inputRef = useRef(null);\n  useEffect(() => {\n    loadGoogleMapsScript(() => {\n      if (window.google) {\n        const autocomplete = new window.google.maps.places.Autocomplete(inputRef.current, {\n          types: ['geocode'],\n          // Restrict suggestions to addresses\n          componentRestrictions: {\n            country: 'us'\n          } // Restrict to US\n        });\n        autocomplete.addListener('place_changed', () => {\n          const place = autocomplete.getPlace();\n          if (place.geometry) {\n            const selectedAddress = {\n              lat: place.geometry.location.lat(),\n              lng: place.geometry.location.lng(),\n              address: place.formatted_address\n            };\n            console.log('Selected Address:', selectedAddress);\n            if (onAddressSelect) {\n              onAddressSelect(selectedAddress); // Pass the selected address to the parent component\n            }\n          }\n        });\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    ref: inputRef,\n    type: \"text\",\n    placeholder: \"Enter your address\",\n    style: {\n      width: '100%',\n      padding: '8px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n};\n_s(AddressInput, \"cBQ6FQ+sf5H+lvNONLKqtm4aeQ8=\");\n_c = AddressInput;\nexport default AddressInput;\nvar _c;\n$RefreshReg$(_c, \"AddressInput\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","loadGoogleMapsScript","callback","existingScript","document","getElementById","script","createElement","src","id","async","defer","onload","body","appendChild","AddressInput","onAddressSelect","_s","inputRef","window","google","autocomplete","maps","places","Autocomplete","current","types","componentRestrictions","country","addListener","place","getPlace","geometry","selectedAddress","lat","location","lng","address","formatted_address","console","log","ref","type","placeholder","style","width","padding","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/AddressInput.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nconst loadGoogleMapsScript = (callback) => {\n    const existingScript = document.getElementById('googleMaps');\n  \n    if (!existingScript) {\n      const script = document.createElement('script');\n      script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyBpNm0WI_YNu8HKZMWZzfDZFwGuov7CUkY&libraries=places&loading=lazy`;\n      script.id = 'googleMaps';\n      script.async = true;\n      script.defer = true;\n      script.onload = () => {\n        if (callback) callback();\n      };\n      document.body.appendChild(script);\n    } else if (callback) {\n      callback();\n    }\n};\n  \n\nconst AddressInput = ({ onAddressSelect }) => {\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    loadGoogleMapsScript(() => {\n      if (window.google) {\n        const autocomplete = new window.google.maps.places.Autocomplete(inputRef.current, {\n          types: ['geocode'], // Restrict suggestions to addresses\n          componentRestrictions: { country: 'us' }, // Restrict to US\n        });\n\n        autocomplete.addListener('place_changed', () => {\n          const place = autocomplete.getPlace();\n          if (place.geometry) {\n            const selectedAddress = {\n              lat: place.geometry.location.lat(),\n              lng: place.geometry.location.lng(),\n              address: place.formatted_address,\n            };\n            console.log('Selected Address:', selectedAddress);\n\n            if (onAddressSelect) {\n              onAddressSelect(selectedAddress); // Pass the selected address to the parent component\n            }\n          }\n        });\n      }\n    });\n  }, []);\n\n  return <input ref={inputRef} type=\"text\" placeholder=\"Enter your address\" style={{ width: '100%', padding: '8px' }} />;\n};\n\nexport default AddressInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,oBAAoB,GAAIC,QAAQ,IAAK;EACvC,MAAMC,cAAc,GAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;EAE5D,IAAI,CAACF,cAAc,EAAE;IACnB,MAAMG,MAAM,GAAGF,QAAQ,CAACG,aAAa,CAAC,QAAQ,CAAC;IAC/CD,MAAM,CAACE,GAAG,GAAG,mHAAmH;IAChIF,MAAM,CAACG,EAAE,GAAG,YAAY;IACxBH,MAAM,CAACI,KAAK,GAAG,IAAI;IACnBJ,MAAM,CAACK,KAAK,GAAG,IAAI;IACnBL,MAAM,CAACM,MAAM,GAAG,MAAM;MACpB,IAAIV,QAAQ,EAAEA,QAAQ,CAAC,CAAC;IAC1B,CAAC;IACDE,QAAQ,CAACS,IAAI,CAACC,WAAW,CAACR,MAAM,CAAC;EACnC,CAAC,MAAM,IAAIJ,QAAQ,EAAE;IACnBA,QAAQ,CAAC,CAAC;EACZ;AACJ,CAAC;AAGD,MAAMa,YAAY,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAMC,QAAQ,GAAGpB,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACdI,oBAAoB,CAAC,MAAM;MACzB,IAAIkB,MAAM,CAACC,MAAM,EAAE;QACjB,MAAMC,YAAY,GAAG,IAAIF,MAAM,CAACC,MAAM,CAACE,IAAI,CAACC,MAAM,CAACC,YAAY,CAACN,QAAQ,CAACO,OAAO,EAAE;UAChFC,KAAK,EAAE,CAAC,SAAS,CAAC;UAAE;UACpBC,qBAAqB,EAAE;YAAEC,OAAO,EAAE;UAAK,CAAC,CAAE;QAC5C,CAAC,CAAC;QAEFP,YAAY,CAACQ,WAAW,CAAC,eAAe,EAAE,MAAM;UAC9C,MAAMC,KAAK,GAAGT,YAAY,CAACU,QAAQ,CAAC,CAAC;UACrC,IAAID,KAAK,CAACE,QAAQ,EAAE;YAClB,MAAMC,eAAe,GAAG;cACtBC,GAAG,EAAEJ,KAAK,CAACE,QAAQ,CAACG,QAAQ,CAACD,GAAG,CAAC,CAAC;cAClCE,GAAG,EAAEN,KAAK,CAACE,QAAQ,CAACG,QAAQ,CAACC,GAAG,CAAC,CAAC;cAClCC,OAAO,EAAEP,KAAK,CAACQ;YACjB,CAAC;YACDC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEP,eAAe,CAAC;YAEjD,IAAIjB,eAAe,EAAE;cACnBA,eAAe,CAACiB,eAAe,CAAC,CAAC,CAAC;YACpC;UACF;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOjC,OAAA;IAAOyC,GAAG,EAAEvB,QAAS;IAACwB,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,oBAAoB;IAACC,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,OAAO,EAAE;IAAM;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxH,CAAC;AAACjC,EAAA,CA/BIF,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AAiClB,eAAeA,YAAY;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}