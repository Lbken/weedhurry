{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/PickupDeliveryToggle.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PickupDeliveryToggle.css'; // Import the updated CSS styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PickupDeliveryToggle = ({\n  onToggle\n}) => {\n  _s();\n  // Initialize the mode as 'Delivery'\n  const [mode, setMode] = useState('Delivery');\n\n  // Function to handle the toggle\n  const handleToggle = () => {\n    const newMode = mode === 'Delivery' ? 'Pickup' : 'Delivery';\n    setMode(newMode);\n    onToggle(newMode); // Call parent function to inform the mode change\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mb-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex toggle-container mt-3 w-75\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `toggle-switch ${mode === 'Pickup' ? 'pickup-mode' : 'delivery-mode'}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"toggle-button-text\",\n            children: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toggle-button\",\n          onClick: handleToggle,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: mode === 'Pickup' ? 'selected' : 'unselected',\n            children: \"Pickup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: mode === 'Delivery' ? 'selected' : 'unselected',\n            children: \"Delivery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(PickupDeliveryToggle, \"7+R3eSl0262XNQvHiX/neatv56o=\");\n_c = PickupDeliveryToggle;\nexport default PickupDeliveryToggle;\nvar _c;\n$RefreshReg$(_c, \"PickupDeliveryToggle\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PickupDeliveryToggle","onToggle","_s","mode","setMode","handleToggle","newMode","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/PickupDeliveryToggle.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './PickupDeliveryToggle.css'; // Import the updated CSS styles\n\nconst PickupDeliveryToggle = ({ onToggle }) => {\n  // Initialize the mode as 'Delivery'\n  const [mode, setMode] = useState('Delivery');\n\n  // Function to handle the toggle\n  const handleToggle = () => {\n    const newMode = mode === 'Delivery' ? 'Pickup' : 'Delivery';\n    setMode(newMode);\n    onToggle(newMode); // Call parent function to inform the mode change\n  }\n\n  return (\n    <div className=\"row mb-3\">\n      <div className=\"col-12 d-flex justify-content-center\">\n        <div className=\"d-flex toggle-container mt-3 w-75\">\n          {/* Toggle switch animation */}\n          <div className={`toggle-switch ${mode === 'Pickup' ? 'pickup-mode' : 'delivery-mode'}`}>\n            <span id=\"toggle-button-text\">{mode}</span>\n          </div>\n          \n          {/* Toggle button with selected and unselected states */}\n          <button className=\"toggle-button\" onClick={handleToggle}>\n            <span className={mode === 'Pickup' ? 'selected' : 'unselected'}>Pickup</span>\n            <span className={mode === 'Delivery' ? 'selected' : 'unselected'}>Delivery</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PickupDeliveryToggle;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,4BAA4B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,UAAU,CAAC;;EAE5C;EACA,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,OAAO,GAAGH,IAAI,KAAK,UAAU,GAAG,QAAQ,GAAG,UAAU;IAC3DC,OAAO,CAACE,OAAO,CAAC;IAChBL,QAAQ,CAACK,OAAO,CAAC,CAAC,CAAC;EACrB,CAAC;EAED,oBACEP,OAAA;IAAKQ,SAAS,EAAC,UAAU;IAAAC,QAAA,eACvBT,OAAA;MAAKQ,SAAS,EAAC,sCAAsC;MAAAC,QAAA,eACnDT,OAAA;QAAKQ,SAAS,EAAC,mCAAmC;QAAAC,QAAA,gBAEhDT,OAAA;UAAKQ,SAAS,EAAE,iBAAiBJ,IAAI,KAAK,QAAQ,GAAG,aAAa,GAAG,eAAe,EAAG;UAAAK,QAAA,eACrFT,OAAA;YAAMU,EAAE,EAAC,oBAAoB;YAAAD,QAAA,EAAEL;UAAI;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC,eAGNd,OAAA;UAAQQ,SAAS,EAAC,eAAe;UAACO,OAAO,EAAET,YAAa;UAAAG,QAAA,gBACtDT,OAAA;YAAMQ,SAAS,EAAEJ,IAAI,KAAK,QAAQ,GAAG,UAAU,GAAG,YAAa;YAAAK,QAAA,EAAC;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC7Ed,OAAA;YAAMQ,SAAS,EAAEJ,IAAI,KAAK,UAAU,GAAG,UAAU,GAAG,YAAa;YAAAK,QAAA,EAAC;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACX,EAAA,CA7BIF,oBAAoB;AAAAe,EAAA,GAApBf,oBAAoB;AA+B1B,eAAeA,oBAAoB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}