{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Form, Button, Alert, Container, Card } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const {\n    token\n  } = useParams(); // Extract token from URL\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    setLoading(true);\n    if (password !== confirmPassword) {\n      setError('Passwords do not match.');\n      setLoading(false);\n      return;\n    }\n    try {\n      var _response$data;\n      const response = await axios.post('http://localhost:5001/api/auth/reset-password', {\n        token,\n        password\n      });\n      if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.success) {\n        setSuccess('Password reset successfully. Redirecting to login...');\n        setTimeout(() => {\n          navigate('/login'); // Redirect to login page\n        }, 3000);\n      }\n    } catch (err) {\n      console.error('Error resetting password:', err);\n      setError('Failed to reset password. The link may have expired or is invalid.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5 d-flex justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        maxWidth: '400px'\n      },\n      className: \"shadow p-4\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center mb-4\",\n          children: \"Reset Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 31\n        }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"password\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Enter new password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"confirmPassword\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirm New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Confirm new password\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            className: \"w-100\",\n            disabled: loading,\n            children: loading ? 'Resetting Password...' : 'Reset Password'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPassword, \"AhCP8212yzp0hs3X1dSVRGQsW8E=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","Form","Button","Alert","Container","Card","axios","jsxDEV","_jsxDEV","ResetPassword","_s","token","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","loading","setLoading","navigate","handleSubmit","e","preventDefault","_response$data","response","post","data","setTimeout","err","console","className","children","style","maxWidth","Body","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","controlId","Label","Control","type","placeholder","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Form, Button, Alert, Container, Card } from 'react-bootstrap';\nimport axios from 'axios';\n\nconst ResetPassword = () => {\n    const { token } = useParams(); // Extract token from URL\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n    const [loading, setLoading] = useState(false);\n    const navigate = useNavigate();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setError('');\n        setSuccess('');\n        setLoading(true);\n\n        if (password !== confirmPassword) {\n            setError('Passwords do not match.');\n            setLoading(false);\n            return;\n        }\n\n        try {\n            const response = await axios.post('http://localhost:5001/api/auth/reset-password', {\n                token,\n                password,\n            });\n\n            if (response.data?.success) {\n                setSuccess('Password reset successfully. Redirecting to login...');\n                setTimeout(() => {\n                    navigate('/login'); // Redirect to login page\n                }, 3000);\n            }\n        } catch (err) {\n            console.error('Error resetting password:', err);\n            setError('Failed to reset password. The link may have expired or is invalid.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <Container className=\"mt-5 d-flex justify-content-center\">\n            <Card style={{ maxWidth: '400px' }} className=\"shadow p-4\">\n                <Card.Body>\n                    <h3 className=\"text-center mb-4\">Reset Your Password</h3>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    {success && <Alert variant=\"success\">{success}</Alert>}\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group controlId=\"password\" className=\"mb-3\">\n                            <Form.Label>New Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Enter new password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                                required\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"confirmPassword\" className=\"mb-3\">\n                            <Form.Label>Confirm New Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Confirm new password\"\n                                value={confirmPassword}\n                                onChange={(e) => setConfirmPassword(e.target.value)}\n                                required\n                            />\n                        </Form.Group>\n                        <Button\n                            variant=\"primary\"\n                            type=\"submit\"\n                            className=\"w-100\"\n                            disabled={loading}\n                        >\n                            {loading ? 'Resetting Password...' : 'Reset Password'}\n                        </Button>\n                    </Form>\n                </Card.Body>\n            </Card>\n        </Container>\n    );\n};\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}