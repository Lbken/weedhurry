{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/AuthTestButton.js\",\n  _s = $RefreshSig$();\n// File: src/components/AuthTestButton.js\n\nimport React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthTestButton = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState(null);\n  const handleAuthAndCheckCustomer = async () => {\n    setLoading(true);\n\n    // Treez POS API details\n    const baseUrl = 'https://api.treez.io/v2.0/dispensary/partnersandbox2';\n    const clientId = 'wNzewkHXh2P5GnfCFPX3AmeA'; // Replace with actual client_id\n    const apiKey = 'MTQ5Mjg2ODdjMDBmNTliZDUxZ'; // Replace with actual api_key\n    const phone = '5555551014'; // Hardcoded phone number for testing\n\n    try {\n      // Step 1: Get Bearer Token\n      const tokenResponse = await axios.post(`${baseUrl}/config/api/gettokens`, new URLSearchParams({\n        client_id: clientId,\n        apikey: apiKey\n      }), {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      const bearerToken = tokenResponse.data.access_token;\n\n      // Step 2: Check if customer exists\n      const customerResponse = await axios.get(`${baseUrl}/customer/phone/${phone}`, {\n        headers: {\n          Authorization: `Bearer ${bearerToken}`,\n          // Use the bearer token\n          'Content-Type': 'application/json',\n          client_id: clientId // Include client_id header\n        }\n      });\n      if (customerResponse.data.resultCode === 'SUCCESS' && customerResponse.data.data.length > 0) {\n        const customerData = customerResponse.data.data[0];\n        setResult(`Customer exists: ${JSON.stringify(customerData, null, 2)}`);\n        alert(`Customer exists:\\n${JSON.stringify(customerData, null, 2)}`);\n      } else {\n        setResult('Customer does not exist.');\n        alert('Customer does not exist.');\n      }\n    } catch (error) {\n      // Handle and display errors\n      setResult(`Error: ${error.message}`);\n      alert(`Error occurred:\\n${error.message}`);\n      console.error('Error details:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column align-items-center mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleAuthAndCheckCustomer,\n      disabled: loading,\n      className: \"test-auth-button\",\n      children: loading ? 'Processing...' : 'Check Customer'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          textAlign: 'left'\n        },\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthTestButton, \"xD5VpJquXOrtB3JXCukFDkpo7lk=\");\n_c = AuthTestButton;\nexport default AuthTestButton;\nvar _c;\n$RefreshReg$(_c, \"AuthTestButton\");","map":{"version":3,"names":["React","useState","Button","axios","jsxDEV","_jsxDEV","AuthTestButton","_s","loading","setLoading","result","setResult","handleAuthAndCheckCustomer","baseUrl","clientId","apiKey","phone","tokenResponse","post","URLSearchParams","client_id","apikey","headers","bearerToken","data","access_token","customerResponse","get","Authorization","resultCode","length","customerData","JSON","stringify","alert","error","message","console","className","children","variant","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/AuthTestButton.js"],"sourcesContent":["// File: src/components/AuthTestButton.js\n\nimport React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nconst AuthTestButton = () => {\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState(null);\n\n  const handleAuthAndCheckCustomer = async () => {\n    setLoading(true);\n\n    // Treez POS API details\n    const baseUrl = 'https://api.treez.io/v2.0/dispensary/partnersandbox2';\n    const clientId = 'wNzewkHXh2P5GnfCFPX3AmeA'; // Replace with actual client_id\n    const apiKey = 'MTQ5Mjg2ODdjMDBmNTliZDUxZ'; // Replace with actual api_key\n    const phone = '5555551014'; // Hardcoded phone number for testing\n\n    try {\n      // Step 1: Get Bearer Token\n      const tokenResponse = await axios.post(\n        `${baseUrl}/config/api/gettokens`,\n        new URLSearchParams({\n          client_id: clientId,\n          apikey: apiKey,\n        }),\n        {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n        }\n      );\n\n      const bearerToken = tokenResponse.data.access_token;\n\n      // Step 2: Check if customer exists\n      const customerResponse = await axios.get(`${baseUrl}/customer/phone/${phone}`, {\n        headers: {\n          Authorization: `Bearer ${bearerToken}`, // Use the bearer token\n          'Content-Type': 'application/json',\n          client_id: clientId, // Include client_id header\n        },\n      });\n\n      if (\n        customerResponse.data.resultCode === 'SUCCESS' &&\n        customerResponse.data.data.length > 0\n      ) {\n        const customerData = customerResponse.data.data[0];\n        setResult(`Customer exists: ${JSON.stringify(customerData, null, 2)}`);\n        alert(`Customer exists:\\n${JSON.stringify(customerData, null, 2)}`);\n      } else {\n        setResult('Customer does not exist.');\n        alert('Customer does not exist.');\n      }\n    } catch (error) {\n      // Handle and display errors\n      setResult(`Error: ${error.message}`);\n      alert(`Error occurred:\\n${error.message}`);\n      console.error('Error details:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"d-flex flex-column align-items-center mt-5\">\n      <Button\n        variant=\"primary\"\n        onClick={handleAuthAndCheckCustomer}\n        disabled={loading}\n        className=\"test-auth-button\"\n      >\n        {loading ? 'Processing...' : 'Check Customer'}\n      </Button>\n      {result && (\n        <div className=\"mt-3 text-center\">\n          <strong>Result:</strong>\n          <pre style={{ textAlign: 'left' }}>{result}</pre>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AuthTestButton;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,iBAAiB;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMW,0BAA0B,GAAG,MAAAA,CAAA,KAAY;IAC7CH,UAAU,CAAC,IAAI,CAAC;;IAEhB;IACA,MAAMI,OAAO,GAAG,sDAAsD;IACtE,MAAMC,QAAQ,GAAG,0BAA0B,CAAC,CAAC;IAC7C,MAAMC,MAAM,GAAG,2BAA2B,CAAC,CAAC;IAC5C,MAAMC,KAAK,GAAG,YAAY,CAAC,CAAC;;IAE5B,IAAI;MACF;MACA,MAAMC,aAAa,GAAG,MAAMd,KAAK,CAACe,IAAI,CACpC,GAAGL,OAAO,uBAAuB,EACjC,IAAIM,eAAe,CAAC;QAClBC,SAAS,EAAEN,QAAQ;QACnBO,MAAM,EAAEN;MACV,CAAC,CAAC,EACF;QACEO,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MAED,MAAMC,WAAW,GAAGN,aAAa,CAACO,IAAI,CAACC,YAAY;;MAEnD;MACA,MAAMC,gBAAgB,GAAG,MAAMvB,KAAK,CAACwB,GAAG,CAAC,GAAGd,OAAO,mBAAmBG,KAAK,EAAE,EAAE;QAC7EM,OAAO,EAAE;UACPM,aAAa,EAAE,UAAUL,WAAW,EAAE;UAAE;UACxC,cAAc,EAAE,kBAAkB;UAClCH,SAAS,EAAEN,QAAQ,CAAE;QACvB;MACF,CAAC,CAAC;MAEF,IACEY,gBAAgB,CAACF,IAAI,CAACK,UAAU,KAAK,SAAS,IAC9CH,gBAAgB,CAACF,IAAI,CAACA,IAAI,CAACM,MAAM,GAAG,CAAC,EACrC;QACA,MAAMC,YAAY,GAAGL,gBAAgB,CAACF,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;QAClDb,SAAS,CAAC,oBAAoBqB,IAAI,CAACC,SAAS,CAACF,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;QACtEG,KAAK,CAAC,qBAAqBF,IAAI,CAACC,SAAS,CAACF,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;MACrE,CAAC,MAAM;QACLpB,SAAS,CAAC,0BAA0B,CAAC;QACrCuB,KAAK,CAAC,0BAA0B,CAAC;MACnC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd;MACAxB,SAAS,CAAC,UAAUwB,KAAK,CAACC,OAAO,EAAE,CAAC;MACpCF,KAAK,CAAC,oBAAoBC,KAAK,CAACC,OAAO,EAAE,CAAC;MAC1CC,OAAO,CAACF,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC,CAAC,SAAS;MACR1B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKiC,SAAS,EAAC,4CAA4C;IAAAC,QAAA,gBACzDlC,OAAA,CAACH,MAAM;MACLsC,OAAO,EAAC,SAAS;MACjBC,OAAO,EAAE7B,0BAA2B;MACpC8B,QAAQ,EAAElC,OAAQ;MAClB8B,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAE3B/B,OAAO,GAAG,eAAe,GAAG;IAAgB;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,EACRpC,MAAM,iBACLL,OAAA;MAAKiC,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BlC,OAAA;QAAAkC,QAAA,EAAQ;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxBzC,OAAA;QAAK0C,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAO,CAAE;QAAAT,QAAA,EAAE7B;MAAM;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvC,EAAA,CA9EID,cAAc;AAAA2C,EAAA,GAAd3C,cAAc;AAgFpB,eAAeA,cAAc;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}