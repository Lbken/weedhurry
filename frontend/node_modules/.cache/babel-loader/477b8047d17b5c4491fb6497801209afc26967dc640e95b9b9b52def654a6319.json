{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/context/CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\n\n// Create a Context for the cart\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  // State to hold cart items\n  const [cartItems, setCartItems] = useState([]);\n\n  // Add product to the cart\n  const addToCart = product => {\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(item => item.id === product.id);\n      if (existingItem) {\n        return prevItems.map(item => item.id === product.id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n      } else {\n        return [...prevItems, {\n          ...product,\n          quantity: 1\n        }];\n      }\n    });\n  };\n\n  // Remove product from the cart\n  const removeFromCart = productId => {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== productId) // Filter out the product with the matching ID\n    );\n  };\n\n  // Increment quantity of a specific item in the cart\n  const incrementItem = productId => {\n    setCartItems(prevItems => prevItems.map(item => item.id === productId ? {\n      ...item,\n      quantity: item.quantity + 1\n    } : item));\n  };\n\n  // Decrement quantity of a specific item in the cart\n  const decrementItem = productId => {\n    setCartItems(prevItems => prevItems.map(item => item.id === productId && item.quantity > 1 ? {\n      ...item,\n      quantity: item.quantity - 1\n    } : item));\n  };\n\n  // Update quantity of a specific item in the cart manually\n  const updateItemQuantity = (productId, newQuantity) => {\n    setCartItems(prevItems => prevItems.map(item => item.id === productId ? {\n      ...item,\n      quantity: newQuantity\n    } : item));\n  };\n\n  // Clear all items from the cart\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  // Calculate total price of items in the cart\n  const calculateTotal = () => {\n    return cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\n  };\n\n  // Get the total number of items in the cart (quantity, not unique items)\n  const getItemCount = () => {\n    return cartItems.reduce((acc, item) => acc + item.quantity, 0);\n  };\n\n  // Save cart items to localStorage\n  const saveCartToLocalStorage = () => {\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n  };\n\n  // Load cart items from localStorage on initial load\n  const loadCartFromLocalStorage = () => {\n    const savedCartItems = JSON.parse(localStorage.getItem('cartItems'));\n    if (savedCartItems) {\n      setCartItems(savedCartItems);\n    }\n  };\n\n  // Automatically load the cart from localStorage when the component mounts\n  useEffect(() => {\n    loadCartFromLocalStorage();\n  }, []);\n\n  // Save cart to localStorage whenever the cartItems state changes\n  useEffect(() => {\n    saveCartToLocalStorage();\n  }, [cartItems]);\n\n  // Provide cart data and functions to the rest of the app\n  const value = {\n    cartItems,\n    addToCart,\n    removeFromCart,\n    incrementItem,\n    // Exposed increment function\n    decrementItem,\n    // Exposed decrement function\n    updateItemQuantity,\n    clearCart,\n    calculateTotal,\n    getItemCount\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"jdONvkEabzLc64SbXgqXBHRMg9M=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","addToCart","product","prevItems","existingItem","find","item","id","map","quantity","removeFromCart","productId","filter","incrementItem","decrementItem","updateItemQuantity","newQuantity","clearCart","calculateTotal","reduce","acc","price","getItemCount","saveCartToLocalStorage","localStorage","setItem","JSON","stringify","loadCartFromLocalStorage","savedCartItems","parse","getItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\n// Create a Context for the cart\nexport const CartContext = createContext();\n\nexport const CartProvider = ({ children }) => {\n  \n  // State to hold cart items\n  const [cartItems, setCartItems] = useState([]);\n\n  // Add product to the cart\n  const addToCart = (product) => {\n    setCartItems((prevItems) => {\n      const existingItem = prevItems.find(item => item.id === product.id);\n      if (existingItem) {\n        return prevItems.map(item =>\n          item.id === product.id ? { ...item, quantity: item.quantity + 1 } : item\n        );\n      } else {\n        return [...prevItems, { ...product, quantity: 1 }];\n      }\n    });\n  };\n\n  // Remove product from the cart\n  const removeFromCart = (productId) => {\n    setCartItems((prevItems) =>\n      prevItems.filter(item => item.id !== productId) // Filter out the product with the matching ID\n    );\n  };\n\n  // Increment quantity of a specific item in the cart\n  const incrementItem = (productId) => {\n    setCartItems((prevItems) =>\n      prevItems.map(item =>\n        item.id === productId ? { ...item, quantity: item.quantity + 1 } : item\n      )\n    );\n  };\n\n  // Decrement quantity of a specific item in the cart\n  const decrementItem = (productId) => {\n    setCartItems((prevItems) =>\n      prevItems.map(item =>\n        item.id === productId && item.quantity > 1\n          ? { ...item, quantity: item.quantity - 1 }\n          : item\n      )\n    );\n  };\n\n  // Update quantity of a specific item in the cart manually\n  const updateItemQuantity = (productId, newQuantity) => {\n    setCartItems((prevItems) =>\n      prevItems.map(item =>\n        item.id === productId ? { ...item, quantity: newQuantity } : item\n      )\n    );\n  };\n\n  // Clear all items from the cart\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  // Calculate total price of items in the cart\n  const calculateTotal = () => {\n    return cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\n  };\n\n  // Get the total number of items in the cart (quantity, not unique items)\n  const getItemCount = () => {\n    return cartItems.reduce((acc, item) => acc + item.quantity, 0);\n  };\n\n  // Save cart items to localStorage\n  const saveCartToLocalStorage = () => {\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n  };\n\n  // Load cart items from localStorage on initial load\n  const loadCartFromLocalStorage = () => {\n    const savedCartItems = JSON.parse(localStorage.getItem('cartItems'));\n    if (savedCartItems) {\n      setCartItems(savedCartItems);\n    }\n  };\n\n  // Automatically load the cart from localStorage when the component mounts\n  useEffect(() => {\n    loadCartFromLocalStorage();\n  }, []);\n\n  // Save cart to localStorage whenever the cartItems state changes\n  useEffect(() => {\n    saveCartToLocalStorage();\n  }, [cartItems]);\n\n  // Provide cart data and functions to the rest of the app\n  const value = {\n    cartItems,\n    addToCart,\n    removeFromCart,\n    incrementItem,    // Exposed increment function\n    decrementItem,    // Exposed decrement function\n    updateItemQuantity,\n    clearCart,\n    calculateTotal,\n    getItemCount,\n  };\n\n  return (\n    <CartContext.Provider value={value}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}