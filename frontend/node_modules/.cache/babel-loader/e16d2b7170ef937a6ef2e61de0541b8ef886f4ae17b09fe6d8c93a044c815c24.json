{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\nfunction MapComponent({\n  onLocationChange,\n  initialLocation\n}) {\n  _s();\n  // State for managing the current location (either passed or newly set)\n  const [location, setLocation] = useState(initialLocation || null);\n\n  // Update location state whenever initialLocation changes\n  useEffect(() => {\n    if (initialLocation) {\n      setLocation(initialLocation);\n    }\n  }, [initialLocation]);\n\n  // Handle map click to set a new marker\n  const handleMapClick = event => {\n    const newLocation = {\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng()\n    };\n    setLocation(newLocation); // Update the marker location\n    onLocationChange(newLocation); // Notify the parent component\n  };\n\n  // Handle marker drag and update its location\n  const handleMarkerDragEnd = event => {\n    const newLocation = {\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng()\n    };\n    setLocation(newLocation); // Update the marker location\n    onLocationChange(newLocation); // Notify the parent component\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: location || {\n      lat: 34.0522,\n      lng: -118.2437\n    } // Default center if no location\n    ,\n    zoom: 10,\n    onClick: handleMapClick // Add marker on map click\n    ,\n    children: location && /*#__PURE__*/_jsxDEV(Marker, {\n      position: location,\n      draggable: true,\n      onDragEnd: handleMarkerDragEnd // Allow marker to be moved\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(MapComponent, \"wnkNln1h+JRDqjPtiTCZm01wdyM=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","Marker","jsxDEV","_jsxDEV","containerStyle","width","height","MapComponent","onLocationChange","initialLocation","_s","location","setLocation","handleMapClick","event","newLocation","lat","latLng","lng","handleMarkerDragEnd","mapContainerStyle","center","zoom","onClick","children","position","draggable","onDragEnd","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/MapComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { GoogleMap, Marker } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '100%',\n  height: '400px',\n};\n\nfunction MapComponent({ onLocationChange, initialLocation }) {\n  // State for managing the current location (either passed or newly set)\n  const [location, setLocation] = useState(initialLocation || null);\n\n  // Update location state whenever initialLocation changes\n  useEffect(() => {\n    if (initialLocation) {\n      setLocation(initialLocation);\n    }\n  }, [initialLocation]);\n\n  // Handle map click to set a new marker\n  const handleMapClick = (event) => {\n    const newLocation = {\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng(),\n    };\n    setLocation(newLocation); // Update the marker location\n    onLocationChange(newLocation); // Notify the parent component\n  };\n\n  // Handle marker drag and update its location\n  const handleMarkerDragEnd = (event) => {\n    const newLocation = {\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng(),\n    };\n    setLocation(newLocation); // Update the marker location\n    onLocationChange(newLocation); // Notify the parent component\n  };\n\n  return (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={location || { lat: 34.0522, lng: -118.2437 }} // Default center if no location\n      zoom={10}\n      onClick={handleMapClick} // Add marker on map click\n    >\n      {/* Render marker if a location is set */}\n      {location && (\n        <Marker\n          position={location}\n          draggable\n          onDragEnd={handleMarkerDragEnd} // Allow marker to be moved\n        />\n      )}\n    </GoogleMap>\n  );\n}\n\nexport default MapComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,MAAM,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;AAED,SAASC,YAAYA,CAAC;EAAEC,gBAAgB;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAC3D;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAACW,eAAe,IAAI,IAAI,CAAC;;EAEjE;EACAV,SAAS,CAAC,MAAM;IACd,IAAIU,eAAe,EAAE;MACnBG,WAAW,CAACH,eAAe,CAAC;IAC9B;EACF,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;;EAErB;EACA,MAAMI,cAAc,GAAIC,KAAK,IAAK;IAChC,MAAMC,WAAW,GAAG;MAClBC,GAAG,EAAEF,KAAK,CAACG,MAAM,CAACD,GAAG,CAAC,CAAC;MACvBE,GAAG,EAAEJ,KAAK,CAACG,MAAM,CAACC,GAAG,CAAC;IACxB,CAAC;IACDN,WAAW,CAACG,WAAW,CAAC,CAAC,CAAC;IAC1BP,gBAAgB,CAACO,WAAW,CAAC,CAAC,CAAC;EACjC,CAAC;;EAED;EACA,MAAMI,mBAAmB,GAAIL,KAAK,IAAK;IACrC,MAAMC,WAAW,GAAG;MAClBC,GAAG,EAAEF,KAAK,CAACG,MAAM,CAACD,GAAG,CAAC,CAAC;MACvBE,GAAG,EAAEJ,KAAK,CAACG,MAAM,CAACC,GAAG,CAAC;IACxB,CAAC;IACDN,WAAW,CAACG,WAAW,CAAC,CAAC,CAAC;IAC1BP,gBAAgB,CAACO,WAAW,CAAC,CAAC,CAAC;EACjC,CAAC;EAED,oBACEZ,OAAA,CAACH,SAAS;IACRoB,iBAAiB,EAAEhB,cAAe;IAClCiB,MAAM,EAAEV,QAAQ,IAAI;MAAEK,GAAG,EAAE,OAAO;MAAEE,GAAG,EAAE,CAAC;IAAS,CAAE,CAAC;IAAA;IACtDI,IAAI,EAAE,EAAG;IACTC,OAAO,EAAEV,cAAe,CAAC;IAAA;IAAAW,QAAA,EAGxBb,QAAQ,iBACPR,OAAA,CAACF,MAAM;MACLwB,QAAQ,EAAEd,QAAS;MACnBe,SAAS;MACTC,SAAS,EAAER,mBAAoB,CAAC;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB;AAACrB,EAAA,CAhDQH,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAkDrB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}