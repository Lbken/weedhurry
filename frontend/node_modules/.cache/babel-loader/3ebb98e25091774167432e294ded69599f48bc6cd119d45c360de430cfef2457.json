{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [auth, setAuthState] = useState({\n    token: null,\n    vendorId: null,\n    vendorName: null\n  });\n  const [loading, setLoading] = useState(true); // Add loading state\n\n  const initializeAuth = async () => {\n    const storedAuth = JSON.parse(localStorage.getItem('auth'));\n    if (storedAuth !== null && storedAuth !== void 0 && storedAuth.token) {\n      try {\n        // Attempt to refresh the token\n        const response = await axios.post('/api/auth/refresh-token', {}, {\n          headers: {\n            Authorization: `Bearer ${storedAuth.token}`\n          },\n          withCredentials: true\n        });\n\n        // Update the auth state with the new token\n        const {\n          accessToken\n        } = response.data;\n        const updatedAuth = {\n          ...storedAuth,\n          token: accessToken\n        };\n        setAuth(updatedAuth);\n      } catch (error) {\n        console.error('Token refresh failed:', error);\n        handleLogout();\n      }\n    }\n    setLoading(false);\n  };\n  const setAuth = authData => {\n    localStorage.setItem('auth', JSON.stringify(authData));\n    setAuthState(authData);\n    axios.defaults.headers.common['Authorization'] = `Bearer ${authData.token}`;\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('auth');\n    setAuthState({\n      token: null,\n      vendorId: null,\n      vendorName: null\n    });\n    delete axios.defaults.headers.common['Authorization'];\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth,\n      setAuth,\n      logout: handleLogout,\n      loading\n    },\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 24\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"Yai0yE+1KZ4ZfGpD/wVCMbTlKpI=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = React.useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","auth","setAuthState","token","vendorId","vendorName","loading","setLoading","initializeAuth","storedAuth","JSON","parse","localStorage","getItem","response","post","headers","Authorization","withCredentials","accessToken","data","updatedAuth","setAuth","error","console","handleLogout","authData","setItem","stringify","defaults","common","removeItem","Provider","value","logout","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","useContext","Error","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [auth, setAuthState] = useState({\n        token: null,\n        vendorId: null,\n        vendorName: null,\n    });\n    const [loading, setLoading] = useState(true); // Add loading state\n\n    const initializeAuth = async () => {\n        const storedAuth = JSON.parse(localStorage.getItem('auth'));\n        if (storedAuth?.token) {\n            try {\n                // Attempt to refresh the token\n                const response = await axios.post(\n                    '/api/auth/refresh-token',\n                    {},\n                    {\n                        headers: { Authorization: `Bearer ${storedAuth.token}` },\n                        withCredentials: true,\n                    }\n                );\n    \n                // Update the auth state with the new token\n                const { accessToken } = response.data;\n                const updatedAuth = { ...storedAuth, token: accessToken };\n                setAuth(updatedAuth);\n            } catch (error) {\n                console.error('Token refresh failed:', error);\n                handleLogout();\n            }\n        }\n        setLoading(false);\n    };\n    \n\n    const setAuth = (authData) => {\n        localStorage.setItem('auth', JSON.stringify(authData));\n        setAuthState(authData);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${authData.token}`;\n    };\n\n    const handleLogout = () => {\n        localStorage.removeItem('auth');\n        setAuthState({ token: null, vendorId: null, vendorName: null });\n        delete axios.defaults.headers.common['Authorization'];\n    };\n\n    return (\n        <AuthContext.Provider value={{ auth, setAuth, logout: handleLogout, loading }}>\n            {loading ? <div>Loading...</div> : children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => {\n    const context = React.useContext(AuthContext);\n    if (!context) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}