{"ast":null,"code":"const handleUpdateDeliveryZone = async () => {\n  if (!deliveryZone) {\n    alert('Please select a delivery zone before updating.');\n    return;\n  }\n  try {\n    // Retrieve the token from local storage or context\n    const token = localStorage.getItem('token'); // Adjust based on where you store the token\n    if (!token) {\n      alert('You are not logged in. Please log in and try again.');\n      return;\n    }\n    const response = await fetch('/api/vendors/update-delivery-zone', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}` // Include the token in the Authorization header\n      },\n      body: JSON.stringify({\n        deliveryZone\n      })\n    });\n    const result = await response.json();\n    if (response.ok) {\n      alert('Delivery zone updated successfully!');\n    } else {\n      alert(`Failed to update delivery zone: ${result.message}`);\n    }\n  } catch (error) {\n    console.error('Error updating delivery zone:', error);\n    alert('An error occurred while updating the delivery zone.');\n  }\n};","map":{"version":3,"names":["handleUpdateDeliveryZone","deliveryZone","alert","token","localStorage","getItem","response","fetch","method","headers","Authorization","body","JSON","stringify","result","json","ok","message","error","console"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/UpdateDeliveryZoneComponent.js"],"sourcesContent":["const handleUpdateDeliveryZone = async () => {\n  if (!deliveryZone) {\n    alert('Please select a delivery zone before updating.');\n    return;\n  }\n\n  try {\n    // Retrieve the token from local storage or context\n    const token = localStorage.getItem('token'); // Adjust based on where you store the token\n    if (!token) {\n      alert('You are not logged in. Please log in and try again.');\n      return;\n    }\n\n    const response = await fetch('/api/vendors/update-delivery-zone', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`, // Include the token in the Authorization header\n      },\n      body: JSON.stringify({ deliveryZone }),\n    });\n\n    const result = await response.json();\n\n    if (response.ok) {\n      alert('Delivery zone updated successfully!');\n    } else {\n      alert(`Failed to update delivery zone: ${result.message}`);\n    }\n  } catch (error) {\n    console.error('Error updating delivery zone:', error);\n    alert('An error occurred while updating the delivery zone.');\n  }\n};\n"],"mappings":"AAAA,MAAMA,wBAAwB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI,CAACC,YAAY,EAAE;IACjBC,KAAK,CAAC,gDAAgD,CAAC;IACvD;EACF;EAEA,IAAI;IACF;IACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7C,IAAI,CAACF,KAAK,EAAE;MACVD,KAAK,CAAC,qDAAqD,CAAC;MAC5D;IACF;IAEA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MAChEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,UAAUP,KAAK,EAAE,CAAE;MACpC,CAAC;MACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEZ;MAAa,CAAC;IACvC,CAAC,CAAC;IAEF,MAAMa,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAEpC,IAAIT,QAAQ,CAACU,EAAE,EAAE;MACfd,KAAK,CAAC,qCAAqC,CAAC;IAC9C,CAAC,MAAM;MACLA,KAAK,CAAC,mCAAmCY,MAAM,CAACG,OAAO,EAAE,CAAC;IAC5D;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrDhB,KAAK,CAAC,qDAAqD,CAAC;EAC9D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}