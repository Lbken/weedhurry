{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/BusinessHoursComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BusinessHoursComponent = ({\n  initialHours = {},\n  onUpdate\n}) => {\n  _s();\n  const [businessHours, setBusinessHours] = useState({});\n  useEffect(() => {\n    if (initialHours && Object.keys(initialHours).length > 0) {\n      // Transform the initial hours to match component structure if needed\n      const formattedHours = {};\n      Object.keys(initialHours).forEach(day => {\n        if (initialHours[day]) {\n          formattedHours[day] = {\n            open: initialHours[day].open || '',\n            close: initialHours[day].close || ''\n          };\n        }\n      });\n      setBusinessHours(formattedHours);\n    }\n  }, [initialHours]);\n\n  // Helper function to generate time slots from 6:00 AM to 11:00 PM in 1-hour increments\n  const generateTimeSlots = () => {\n    const slots = [];\n    for (let hour = 6; hour <= 23; hour++) {\n      // From 6 AM to 11 PM\n      const period = hour < 12 ? 'AM' : 'PM';\n      const displayHour = hour % 12 === 0 ? 12 : hour % 12; // Convert to 12-hour format\n      slots.push({\n        display: `${displayHour}:00 ${period}`,\n        value: `${String(hour).padStart(2, '0')}:00`\n      });\n    }\n    return slots;\n  };\n  const availableTimes = generateTimeSlots();\n  const handleTimeChange = (day, field, value) => {\n    setBusinessHours(prev => ({\n      ...prev,\n      [day]: {\n        ...(prev[day] || {}),\n        [field]: value\n      }\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onUpdate(businessHours);\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    className: \"p-4 border rounded shadow-sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"mb-4\",\n      children: \"Business Hours\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'].map(day => {\n      var _businessHours$day, _businessHours$day2;\n      return /*#__PURE__*/_jsxDEV(Row, {\n        className: \"align-items-center mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 2,\n          className: \"text-capitalize fw-bold\",\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 5,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: ((_businessHours$day = businessHours[day]) === null || _businessHours$day === void 0 ? void 0 : _businessHours$day.open) || '',\n            onChange: e => handleTimeChange(day, 'open', e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Open\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), availableTimes.map(time => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: time.value,\n              children: time.display\n            }, time.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2,\n          md: 1,\n          className: \"text-center fw-bold\",\n          children: \"to\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 5,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: ((_businessHours$day2 = businessHours[day]) === null || _businessHours$day2 === void 0 ? void 0 : _businessHours$day2.close) || '',\n            onChange: e => handleTimeChange(day, 'close', e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), availableTimes.map(time => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: time.value,\n              children: time.display\n            }, time.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, day, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"mt-3 px-4 py-2\",\n        children: \"Update Hours\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(BusinessHoursComponent, \"YEkUhUWgjC2T9S8+UEsZrGP0eUY=\");\n_c = BusinessHoursComponent;\nexport default BusinessHoursComponent;\nvar _c;\n$RefreshReg$(_c, \"BusinessHoursComponent\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","Row","Col","jsxDEV","_jsxDEV","BusinessHoursComponent","initialHours","onUpdate","_s","businessHours","setBusinessHours","Object","keys","length","formattedHours","forEach","day","open","close","generateTimeSlots","slots","hour","period","displayHour","push","display","value","String","padStart","availableTimes","handleTimeChange","field","prev","handleSubmit","e","preventDefault","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_businessHours$day","_businessHours$day2","xs","md","Select","onChange","target","time","variant","type","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/BusinessHoursComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\n\nconst BusinessHoursComponent = ({ initialHours = {}, onUpdate }) => {\n  const [businessHours, setBusinessHours] = useState({});\n\n  useEffect(() => {\n    if (initialHours && Object.keys(initialHours).length > 0) {\n      // Transform the initial hours to match component structure if needed\n      const formattedHours = {};\n      Object.keys(initialHours).forEach(day => {\n        if (initialHours[day]) {\n          formattedHours[day] = {\n            open: initialHours[day].open || '',\n            close: initialHours[day].close || ''\n          };\n        }\n      });\n      setBusinessHours(formattedHours);\n    }\n  }, [initialHours]);\n\n  // Helper function to generate time slots from 6:00 AM to 11:00 PM in 1-hour increments\n  const generateTimeSlots = () => {\n    const slots = [];\n    for (let hour = 6; hour <= 23; hour++) { // From 6 AM to 11 PM\n      const period = hour < 12 ? 'AM' : 'PM';\n      const displayHour = hour % 12 === 0 ? 12 : hour % 12; // Convert to 12-hour format\n      slots.push({ display: `${displayHour}:00 ${period}`, value: `${String(hour).padStart(2, '0')}:00` });\n    }\n    return slots;\n  };\n\n  const availableTimes = generateTimeSlots();\n\n  const handleTimeChange = (day, field, value) => {\n    setBusinessHours(prev => ({\n      ...prev,\n      [day]: { ...prev[day] || {}, [field]: value }\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onUpdate(businessHours);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} className=\"p-4 border rounded shadow-sm\">\n      <h5 className=\"mb-4\">Business Hours</h5>\n      {['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'].map((day) => (\n        <Row key={day} className=\"align-items-center mb-3\">\n          <Col xs={12} md={2} className=\"text-capitalize fw-bold\">\n            {day}\n          </Col>\n          <Col xs={5} md={4}>\n            <Form.Select\n              value={businessHours[day]?.open || ''}\n              onChange={(e) => handleTimeChange(day, 'open', e.target.value)}\n            >\n              <option value=\"\">Open</option>\n              {availableTimes.map((time) => (\n                <option key={time.value} value={time.value}>\n                  {time.display}\n                </option>\n              ))}\n            </Form.Select>\n          </Col>\n          <Col xs={2} md={1} className=\"text-center fw-bold\">to</Col>\n          <Col xs={5} md={4}>\n            <Form.Select\n              value={businessHours[day]?.close || ''}\n              onChange={(e) => handleTimeChange(day, 'close', e.target.value)}\n            >\n              <option value=\"\">Close</option>\n              {availableTimes.map((time) => (\n                <option key={time.value} value={time.value}>\n                  {time.display}\n                </option>\n              ))}\n            </Form.Select>\n          </Col>\n        </Row>\n      ))}\n      <div className=\"d-flex justify-content-center\">\n        <Button variant=\"primary\" type=\"submit\" className=\"mt-3 px-4 py-2\">\n          Update Hours\n        </Button>\n      </div>\n    </Form>\n  );\n};\n\nexport default BusinessHoursComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}