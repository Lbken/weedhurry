{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/AddressInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddressInput = ({\n  onAddressSelect\n}) => {\n  _s();\n  const [input, setInput] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const handleInputChange = async e => {\n    setInput(e.target.value);\n    if (e.target.value.length > 2) {\n      // Fetch suggestions using Google Maps Autocomplete API\n      const response = await fetch(`https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${e.target.value}&key=AIzaSyBpNm0WI_YNu8HKZMWZzfDZFwGuov7CUkY`);\n      const data = await response.json();\n      setSuggestions(data.predictions);\n    } else {\n      setSuggestions([]);\n    }\n  };\n  const handleSuggestionClick = suggestion => {\n    setInput(suggestion.description);\n    setSuggestions([]);\n    onAddressSelect(suggestion.description);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: handleInputChange,\n      placeholder: \"Enter your address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: suggestions.map(suggestion => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSuggestionClick(suggestion),\n        children: [suggestion.description, \" >\"]\n      }, suggestion.place_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(AddressInput, \"PcnYS833aSH/+86GpOKM0k6P7og=\");\n_c = AddressInput;\nexport default AddressInput;\nvar _c;\n$RefreshReg$(_c, \"AddressInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddressInput","onAddressSelect","_s","input","setInput","suggestions","setSuggestions","handleInputChange","e","target","value","length","response","fetch","data","json","predictions","handleSuggestionClick","suggestion","description","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","place_id","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/AddressInput.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst AddressInput = ({ onAddressSelect }) => {\n  const [input, setInput] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n\n  const handleInputChange = async (e) => {\n    setInput(e.target.value);\n\n    if (e.target.value.length > 2) {\n      // Fetch suggestions using Google Maps Autocomplete API\n      const response = await fetch(\n        `https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${e.target.value}&key=AIzaSyBpNm0WI_YNu8HKZMWZzfDZFwGuov7CUkY`\n      );\n      const data = await response.json();\n      setSuggestions(data.predictions);\n    } else {\n      setSuggestions([]);\n    }\n  };\n\n  const handleSuggestionClick = (suggestion) => {\n    setInput(suggestion.description);\n    setSuggestions([]);\n    onAddressSelect(suggestion.description);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={handleInputChange}\n        placeholder=\"Enter your address\"\n      />\n      <ul>\n        {suggestions.map((suggestion) => (\n          <li key={suggestion.place_id} onClick={() => handleSuggestionClick(suggestion)}>\n            {suggestion.description} &gt;\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default AddressInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMU,iBAAiB,GAAG,MAAOC,CAAC,IAAK;IACrCJ,QAAQ,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAExB,IAAIF,CAAC,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MAC7B;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,sEAAsEL,CAAC,CAACC,MAAM,CAACC,KAAK,8CACtF,CAAC;MACD,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCT,cAAc,CAACQ,IAAI,CAACE,WAAW,CAAC;IAClC,CAAC,MAAM;MACLV,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;EAED,MAAMW,qBAAqB,GAAIC,UAAU,IAAK;IAC5Cd,QAAQ,CAACc,UAAU,CAACC,WAAW,CAAC;IAChCb,cAAc,CAAC,EAAE,CAAC;IAClBL,eAAe,CAACiB,UAAU,CAACC,WAAW,CAAC;EACzC,CAAC;EAED,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXX,KAAK,EAAEP,KAAM;MACbmB,QAAQ,EAAEf,iBAAkB;MAC5BgB,WAAW,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACF5B,OAAA;MAAAqB,QAAA,EACGf,WAAW,CAACuB,GAAG,CAAEV,UAAU,iBAC1BnB,OAAA;QAA8B8B,OAAO,EAAEA,CAAA,KAAMZ,qBAAqB,CAACC,UAAU,CAAE;QAAAE,QAAA,GAC5EF,UAAU,CAACC,WAAW,EAAC,IAC1B;MAAA,GAFSD,UAAU,CAACY,QAAQ;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAExB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACzB,EAAA,CA1CIF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AA4ClB,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}