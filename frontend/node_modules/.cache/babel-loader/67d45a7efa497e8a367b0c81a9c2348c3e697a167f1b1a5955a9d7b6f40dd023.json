{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/AddressInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\nimport 'bootstrap-icons/font/bootstrap-icons.css'; // Ensure Bootstrap Icons are included\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddressInput = ({\n  onAddressUpdate\n}) => {\n  _s();\n  const [selectedAddress, setSelectedAddress] = useState('');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    if (window.google && inputRef.current) {\n      const autocomplete = new window.google.maps.places.Autocomplete(inputRef.current, {\n        types: ['geocode'],\n        // Suggest addresses only\n        componentRestrictions: {\n          country: 'us'\n        } // Restrict to US\n      });\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        if (place.geometry) {\n          const location = {\n            lat: place.geometry.location.lat(),\n            lng: place.geometry.location.lng(),\n            address: place.formatted_address\n          };\n          setSelectedAddress(location.address); // Update the placeholder\n          onAddressUpdate(location); // Pass location to parent\n        }\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(InputGroup, {\n    className: \"rounded-pill shadow-sm mx-auto\",\n    style: {\n      maxWidth: '500px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n      className: \"bg-white border-0 rounded-start-pill\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bi bi-geo-alt-fill text-primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      ref: inputRef,\n      type: \"text\",\n      placeholder: selectedAddress || 'Enter delivery address',\n      className: \"rounded-end-pill border-0\",\n      \"aria-label\": \"Enter your address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(AddressInput, \"MDrp8YQSVrUUBMfnYqbWrEVBX/s=\");\n_c = AddressInput;\nexport default AddressInput;\nvar _c;\n$RefreshReg$(_c, \"AddressInput\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Form","InputGroup","jsxDEV","_jsxDEV","AddressInput","onAddressUpdate","_s","selectedAddress","setSelectedAddress","inputRef","window","google","current","autocomplete","maps","places","Autocomplete","types","componentRestrictions","country","addListener","place","getPlace","geometry","location","lat","lng","address","formatted_address","className","style","maxWidth","children","Text","fileName","_jsxFileName","lineNumber","columnNumber","Control","ref","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/AddressInput.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\nimport 'bootstrap-icons/font/bootstrap-icons.css'; // Ensure Bootstrap Icons are included\n\nconst AddressInput = ({ onAddressUpdate }) => {\n  const [selectedAddress, setSelectedAddress] = useState('');\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    if (window.google && inputRef.current) {\n      const autocomplete = new window.google.maps.places.Autocomplete(inputRef.current, {\n        types: ['geocode'], // Suggest addresses only\n        componentRestrictions: { country: 'us' }, // Restrict to US\n      });\n\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        if (place.geometry) {\n          const location = {\n            lat: place.geometry.location.lat(),\n            lng: place.geometry.location.lng(),\n            address: place.formatted_address,\n          };\n\n          setSelectedAddress(location.address); // Update the placeholder\n          onAddressUpdate(location); // Pass location to parent\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <InputGroup className=\"rounded-pill shadow-sm mx-auto\" style={{ maxWidth: '500px' }}>\n      <InputGroup.Text className=\"bg-white border-0 rounded-start-pill\">\n        <i className=\"bi bi-geo-alt-fill text-primary\"></i>\n      </InputGroup.Text>\n      <Form.Control\n        ref={inputRef}\n        type=\"text\"\n        placeholder={selectedAddress || 'Enter delivery address'}\n        className=\"rounded-end-pill border-0\"\n        aria-label=\"Enter your address\"\n      />\n    </InputGroup>\n  );\n};\n\nexport default AddressInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,IAAI,EAAEC,UAAU,QAAQ,iBAAiB;AAClD,OAAO,0CAA0C,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMY,QAAQ,GAAGX,MAAM,CAAC,IAAI,CAAC;EAE7BC,SAAS,CAAC,MAAM;IACd,IAAIW,MAAM,CAACC,MAAM,IAAIF,QAAQ,CAACG,OAAO,EAAE;MACrC,MAAMC,YAAY,GAAG,IAAIH,MAAM,CAACC,MAAM,CAACG,IAAI,CAACC,MAAM,CAACC,YAAY,CAACP,QAAQ,CAACG,OAAO,EAAE;QAChFK,KAAK,EAAE,CAAC,SAAS,CAAC;QAAE;QACpBC,qBAAqB,EAAE;UAAEC,OAAO,EAAE;QAAK,CAAC,CAAE;MAC5C,CAAC,CAAC;MAEFN,YAAY,CAACO,WAAW,CAAC,eAAe,EAAE,MAAM;QAC9C,MAAMC,KAAK,GAAGR,YAAY,CAACS,QAAQ,CAAC,CAAC;QACrC,IAAID,KAAK,CAACE,QAAQ,EAAE;UAClB,MAAMC,QAAQ,GAAG;YACfC,GAAG,EAAEJ,KAAK,CAACE,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,CAAC;YAClCC,GAAG,EAAEL,KAAK,CAACE,QAAQ,CAACC,QAAQ,CAACE,GAAG,CAAC,CAAC;YAClCC,OAAO,EAAEN,KAAK,CAACO;UACjB,CAAC;UAEDpB,kBAAkB,CAACgB,QAAQ,CAACG,OAAO,CAAC,CAAC,CAAC;UACtCtB,eAAe,CAACmB,QAAQ,CAAC,CAAC,CAAC;QAC7B;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACErB,OAAA,CAACF,UAAU;IAAC4B,SAAS,EAAC,gCAAgC;IAACC,KAAK,EAAE;MAAEC,QAAQ,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAClF7B,OAAA,CAACF,UAAU,CAACgC,IAAI;MAACJ,SAAS,EAAC,sCAAsC;MAAAG,QAAA,eAC/D7B,OAAA;QAAG0B,SAAS,EAAC;MAAiC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eAClBlC,OAAA,CAACH,IAAI,CAACsC,OAAO;MACXC,GAAG,EAAE9B,QAAS;MACd+B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAElC,eAAe,IAAI,wBAAyB;MACzDsB,SAAS,EAAC,2BAA2B;MACrC,cAAW;IAAoB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEjB,CAAC;AAAC/B,EAAA,CAzCIF,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AA2ClB,eAAeA,YAAY;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}