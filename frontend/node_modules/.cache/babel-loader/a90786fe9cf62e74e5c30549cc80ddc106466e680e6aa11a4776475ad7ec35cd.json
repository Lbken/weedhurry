{"ast":null,"code":"import React,{useEffect,useState,useRef}from'react';import VendorCard from'./VendorCard';import PickupMap from'./PickupMap';import Footer from'./Footer';import'./NearbyPickupPage.css';import api from'../api/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NearbyPickupPage=_ref=>{let{searchQuery}=_ref;const[vendors,setVendors]=useState([]);const[error,setError]=useState(null);const[loading,setLoading]=useState(false);const[isExpanded,setIsExpanded]=useState(false);const vendorCardsRef=useRef(null);const lastScrollPosition=useRef(0);const calculateDistance=(lat1,lng1,lat2,lng2)=>{const toRadians=degree=>degree*Math.PI/180;const R=3963;// Earth's radius in miles\nconst dLat=toRadians(lat2-lat1);const dLng=toRadians(lng2-lng1);const a=Math.sin(dLat/2)*Math.sin(dLat/2)+Math.cos(toRadians(lat1))*Math.cos(toRadians(lat2))*Math.sin(dLng/2)*Math.sin(dLng/2);const c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));return R*c;};// In NearbyPickupPage.js, update the fetchVendors function:\nconst fetchVendors=async()=>{try{const geocodeResponse=await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(localStorage.getItem('userAddress'))}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`);const geocodeData=await geocodeResponse.json();if(geocodeData.status!=='OK')throw new Error('Could not fetch location.');const{lat,lng}=geocodeData.results[0].geometry.location;console.log('Making API request with coordinates:',{lat,lng});// Add /api prefix to the endpoint\nconst{data:vendorsData}=await api.get('/api/vendors/nearby',{params:{lat,lng}});console.log('Raw vendors response:',vendorsData);if(!(vendorsData!==null&&vendorsData!==void 0&&vendorsData.vendors)||!vendorsData.vendors.length){throw new Error('No vendors found near your location.');}// Add debug logging for coordinate data\nvendorsData.vendors.forEach(vendor=>{var _vendor$storefrontAdd,_vendor$deliveryZone;console.log('Vendor coordinate data:',{name:vendor.dispensaryName,type:vendor.dispensaryType,storefrontCoords:(_vendor$storefrontAdd=vendor.storefrontAddress)===null||_vendor$storefrontAdd===void 0?void 0:_vendor$storefrontAdd.coordinates,deliveryCoords:(_vendor$deliveryZone=vendor.deliveryZone)===null||_vendor$deliveryZone===void 0?void 0:_vendor$deliveryZone.coordinates});});// Filter for Pickup and Pickup & Delivery vendors\nconst pickupVendors=vendorsData.vendors.filter(vendor=>['Pickup','Pickup & Delivery'].includes(vendor.dispensaryType));const enrichedVendors=pickupVendors.map(vendor=>{var _vendor$storefrontAdd2,_vendor$deliveryZone2;// Handle both possible coordinate locations\nlet coordinates=null;let source=null;if((_vendor$storefrontAdd2=vendor.storefrontAddress)!==null&&_vendor$storefrontAdd2!==void 0&&_vendor$storefrontAdd2.coordinates){coordinates=vendor.storefrontAddress.coordinates;source='storefront';}else if(vendor.dispensaryType==='Pickup & Delivery'&&(_vendor$deliveryZone2=vendor.deliveryZone)!==null&&_vendor$deliveryZone2!==void 0&&_vendor$deliveryZone2.coordinates){coordinates=vendor.deliveryZone.coordinates;source='delivery';}if(!coordinates||!Array.isArray(coordinates)||coordinates.length!==2){console.warn(`Vendor ${vendor.dispensaryName} has invalid coordinates:`,coordinates);return null;}// Handle potential MongoDB $numberDouble format\nconst[vLng,vLat]=coordinates.map(coord=>typeof coord==='object'?parseFloat(coord.$numberDouble):parseFloat(coord));if(isNaN(vLat)||isNaN(vLng)){console.warn(`Invalid coordinate values for vendor ${vendor.dispensaryName}:`,{vLat,vLng});return null;}return{...vendor,coordinates,coordinateSource:source,milesAway:parseFloat(calculateDistance(lat,lng,vLat,vLng).toFixed(1))};}).filter(Boolean);console.log('Processed vendors:',enrichedVendors);setVendors(enrichedVendors);}catch(error){var _error$response,_error$response2;console.error('Detailed error:',{message:error.message,response:(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data,status:(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status,stack:error.stack});setError(error.message||'Failed to load vendors.');}};const handleMarkerClick=vendor=>{setVendors(prevVendors=>{const filteredVendors=prevVendors.filter(v=>v._id!==vendor._id);return[vendor,...filteredVendors];// Bring clicked vendor to the top\n});};const filteredVendors=vendors.filter(vendor=>// Show both Pickup and Pickup & Delivery vendors\nvendor.dispensaryType==='Pickup'||vendor.dispensaryType==='Pickup & Delivery').map(vendor=>{var _vendor$products;const filteredProducts=(_vendor$products=vendor.products)===null||_vendor$products===void 0?void 0:_vendor$products.filter(product=>{var _product$name,_product$brand,_product$strain;const matchesProductName=(_product$name=product.name)===null||_product$name===void 0?void 0:_product$name.toLowerCase().includes(searchQuery.trim().toLowerCase());const matchesBrand=(_product$brand=product.brand)===null||_product$brand===void 0?void 0:_product$brand.toLowerCase().includes(searchQuery.trim().toLowerCase());const matchesStrain=(_product$strain=product.strain)===null||_product$strain===void 0?void 0:_product$strain.toLowerCase().includes(searchQuery.trim().toLowerCase());return matchesProductName||matchesBrand||matchesStrain;});// Include all vendors but limit products to matches\nreturn{...vendor,products:filteredProducts||[]};});useEffect(()=>{fetchVendors();},[]);const handleScroll=e=>{const currentScroll=e.target.scrollTop;const scrollingDown=currentScroll>lastScrollPosition.current;const scrollingUp=currentScroll<lastScrollPosition.current;// Expand when scrolling down\nif(scrollingDown&&!isExpanded&&currentScroll>10){setIsExpanded(true);}// Collapse when trying to scroll up at the top\nif(scrollingUp&&isExpanded&&currentScroll===0){// Only collapse if we're still trying to scroll up when already at the top\nconst scrollDelta=lastScrollPosition.current-currentScroll;if(scrollDelta>5){// Small threshold to prevent accidental collapse\nsetIsExpanded(false);}}lastScrollPosition.current=currentScroll;};const handleDragHandleClick=e=>{e.stopPropagation();// Prevent event from bubbling\nsetIsExpanded(!isExpanded);// Toggle expansion state\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid p-0 pickup-page-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:`map-container ${isExpanded?'expanded':''}`,children:/*#__PURE__*/_jsx(PickupMap,{dispensaries:vendors.map(vendor=>({...vendor,location:vendor.coordinates})),onMarkerClick:handleMarkerClick})}),/*#__PURE__*/_jsxs(\"div\",{className:`vendor-card-container ${isExpanded?'expanded':''}`,children:[/*#__PURE__*/_jsx(\"div\",{className:\"drag-handle\",onClick:handleDragHandleClick}),filteredVendors.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"vendor-cards-wrapper px-0\",ref:vendorCardsRef,onScroll:handleScroll,children:[filteredVendors.map(vendor=>/*#__PURE__*/_jsx(VendorCard,{vendor:vendor,orderType:\"Pickup\"},vendor._id)),/*#__PURE__*/_jsx(Footer,{})]}):/*#__PURE__*/_jsx(\"p\",{className:\"text-center text-muted my-4\",children:\"No products match your search query.\"})]})]});};export default NearbyPickupPage;","map":{"version":3,"names":["React","useEffect","useState","useRef","VendorCard","PickupMap","Footer","api","jsx","_jsx","jsxs","_jsxs","NearbyPickupPage","_ref","searchQuery","vendors","setVendors","error","setError","loading","setLoading","isExpanded","setIsExpanded","vendorCardsRef","lastScrollPosition","calculateDistance","lat1","lng1","lat2","lng2","toRadians","degree","Math","PI","R","dLat","dLng","a","sin","cos","c","atan2","sqrt","fetchVendors","geocodeResponse","fetch","encodeURIComponent","localStorage","getItem","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","geocodeData","json","status","Error","lat","lng","results","geometry","location","console","log","data","vendorsData","get","params","length","forEach","vendor","_vendor$storefrontAdd","_vendor$deliveryZone","name","dispensaryName","type","dispensaryType","storefrontCoords","storefrontAddress","coordinates","deliveryCoords","deliveryZone","pickupVendors","filter","includes","enrichedVendors","map","_vendor$storefrontAdd2","_vendor$deliveryZone2","source","Array","isArray","warn","vLng","vLat","coord","parseFloat","$numberDouble","isNaN","coordinateSource","milesAway","toFixed","Boolean","_error$response","_error$response2","message","response","stack","handleMarkerClick","prevVendors","filteredVendors","v","_id","_vendor$products","filteredProducts","products","product","_product$name","_product$brand","_product$strain","matchesProductName","toLowerCase","trim","matchesBrand","brand","matchesStrain","strain","handleScroll","e","currentScroll","target","scrollTop","scrollingDown","current","scrollingUp","scrollDelta","handleDragHandleClick","stopPropagation","className","children","dispensaries","onMarkerClick","onClick","ref","onScroll","orderType"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/NearbyPickupPage.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport VendorCard from './VendorCard';\nimport PickupMap from './PickupMap';\nimport Footer from './Footer';\nimport './NearbyPickupPage.css';\nimport api from '../api/api';\n\nconst NearbyPickupPage = ({ searchQuery }) => {\n  const [vendors, setVendors] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const vendorCardsRef = useRef(null);\n  const lastScrollPosition = useRef(0);\n\n  const calculateDistance = (lat1, lng1, lat2, lng2) => {\n    const toRadians = (degree) => (degree * Math.PI) / 180;\n    const R = 3963; // Earth's radius in miles\n    const dLat = toRadians(lat2 - lat1);\n    const dLng = toRadians(lng2 - lng1);\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(toRadians(lat1)) * Math.cos(toRadians(lat2)) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n  };\n  \n  // In NearbyPickupPage.js, update the fetchVendors function:\n\nconst fetchVendors = async () => {\n  try {\n    const geocodeResponse = await fetch(\n      `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(\n        localStorage.getItem('userAddress')\n      )}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`\n    );\n    const geocodeData = await geocodeResponse.json();\n    if (geocodeData.status !== 'OK') throw new Error('Could not fetch location.');\n\n    const { lat, lng } = geocodeData.results[0].geometry.location;\n    console.log('Making API request with coordinates:', { lat, lng });\n\n    // Add /api prefix to the endpoint\n    const { data: vendorsData } = await api.get('/api/vendors/nearby', {\n      params: { lat, lng }\n    });\n\n    console.log('Raw vendors response:', vendorsData);\n\n    if (!vendorsData?.vendors || !vendorsData.vendors.length) {\n      throw new Error('No vendors found near your location.');\n    }\n\n    // Add debug logging for coordinate data\n    vendorsData.vendors.forEach(vendor => {\n      console.log('Vendor coordinate data:', {\n        name: vendor.dispensaryName,\n        type: vendor.dispensaryType,\n        storefrontCoords: vendor.storefrontAddress?.coordinates,\n        deliveryCoords: vendor.deliveryZone?.coordinates\n      });\n    });\n\n    // Filter for Pickup and Pickup & Delivery vendors\n    const pickupVendors = vendorsData.vendors.filter(\n      vendor => ['Pickup', 'Pickup & Delivery'].includes(vendor.dispensaryType)\n    );\n\n    const enrichedVendors = pickupVendors.map((vendor) => {\n      // Handle both possible coordinate locations\n      let coordinates = null;\n      let source = null;\n\n      if (vendor.storefrontAddress?.coordinates) {\n        coordinates = vendor.storefrontAddress.coordinates;\n        source = 'storefront';\n      } else if (vendor.dispensaryType === 'Pickup & Delivery' && vendor.deliveryZone?.coordinates) {\n        coordinates = vendor.deliveryZone.coordinates;\n        source = 'delivery';\n      }\n\n      if (!coordinates || !Array.isArray(coordinates) || coordinates.length !== 2) {\n        console.warn(`Vendor ${vendor.dispensaryName} has invalid coordinates:`, coordinates);\n        return null;\n      }\n\n      // Handle potential MongoDB $numberDouble format\n      const [vLng, vLat] = coordinates.map(coord => \n        typeof coord === 'object' ? parseFloat(coord.$numberDouble) : parseFloat(coord)\n      );\n\n      if (isNaN(vLat) || isNaN(vLng)) {\n        console.warn(`Invalid coordinate values for vendor ${vendor.dispensaryName}:`, { vLat, vLng });\n        return null;\n      }\n\n      return {\n        ...vendor,\n        coordinates,\n        coordinateSource: source,\n        milesAway: parseFloat(calculateDistance(lat, lng, vLat, vLng).toFixed(1))\n      };\n    }).filter(Boolean);\n\n    console.log('Processed vendors:', enrichedVendors);\n    setVendors(enrichedVendors);\n  } catch (error) {\n    console.error('Detailed error:', {\n      message: error.message,\n      response: error.response?.data,\n      status: error.response?.status,\n      stack: error.stack\n    });\n    setError(error.message || 'Failed to load vendors.');\n  }\n};\n  \n\n  const handleMarkerClick = (vendor) => {\n    setVendors((prevVendors) => {\n      const filteredVendors = prevVendors.filter((v) => v._id !== vendor._id);\n      return [vendor, ...filteredVendors]; // Bring clicked vendor to the top\n    });\n  };\n\n  const filteredVendors = vendors\n    .filter((vendor) =>\n      // Show both Pickup and Pickup & Delivery vendors\n      vendor.dispensaryType === 'Pickup' || vendor.dispensaryType === 'Pickup & Delivery'\n    )\n    .map((vendor) => {\n      const filteredProducts = vendor.products?.filter((product) => {\n        const matchesProductName = product.name?.toLowerCase().includes(searchQuery.trim().toLowerCase());\n        const matchesBrand = product.brand?.toLowerCase().includes(searchQuery.trim().toLowerCase());\n        const matchesStrain = product.strain?.toLowerCase().includes(searchQuery.trim().toLowerCase());\n        return matchesProductName || matchesBrand || matchesStrain;\n      });\n\n      // Include all vendors but limit products to matches\n      return { ...vendor, products: filteredProducts || [] };\n    });\n\n  useEffect(() => {\n    fetchVendors();\n  }, []);\n\n  const handleScroll = (e) => {\n    const currentScroll = e.target.scrollTop;\n    const scrollingDown = currentScroll > lastScrollPosition.current;\n    const scrollingUp = currentScroll < lastScrollPosition.current;\n    \n    // Expand when scrolling down\n    if (scrollingDown && !isExpanded && currentScroll > 10) {\n      setIsExpanded(true);\n    }\n    \n    // Collapse when trying to scroll up at the top\n    if (scrollingUp && isExpanded && currentScroll === 0) {\n      // Only collapse if we're still trying to scroll up when already at the top\n      const scrollDelta = lastScrollPosition.current - currentScroll;\n      if (scrollDelta > 5) { // Small threshold to prevent accidental collapse\n        setIsExpanded(false);\n      }\n    }\n\n    lastScrollPosition.current = currentScroll;\n  };\n\n  const handleDragHandleClick = (e) => {\n    e.stopPropagation(); // Prevent event from bubbling\n    setIsExpanded(!isExpanded); // Toggle expansion state\n  };\n\n  return (\n    <div className=\"container-fluid p-0 pickup-page-container\">\n      <div className={`map-container ${isExpanded ? 'expanded' : ''}`}>\n        <PickupMap\n          dispensaries={vendors.map((vendor) => ({\n            ...vendor,\n            location: vendor.coordinates,\n          }))}\n          onMarkerClick={handleMarkerClick}\n        />\n      </div>\n\n      <div className={`vendor-card-container ${isExpanded ? 'expanded' : ''}`}>\n        <div\n          className=\"drag-handle\"\n          onClick={handleDragHandleClick}\n        />\n        {filteredVendors.length > 0 ? (\n          <div \n            className=\"vendor-cards-wrapper px-0\"\n            ref={vendorCardsRef}\n            onScroll={handleScroll}\n          >\n            {filteredVendors.map((vendor) => (\n              <VendorCard key={vendor._id} vendor={vendor} orderType=\"Pickup\" />\n            ))}\n            <Footer />\n          </div>\n          \n        ) : (\n          <p className=\"text-center text-muted my-4\">No products match your search query.</p>\n        )}\n      </div>\n      \n    </div>\n  );\n};\n\nexport default NearbyPickupPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}