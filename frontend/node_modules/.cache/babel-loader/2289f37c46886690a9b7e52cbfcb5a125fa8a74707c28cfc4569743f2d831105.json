{"ast":null,"code":"import axios from'axios';// Environment-based configuration\nconst ENV={development:'http://localhost:5001',production:'https://api.weedhurry.com'};// Get current environment\nconst isDevelopment=process.env.NODE_ENV==='development';const baseURL=isDevelopment?ENV.development:ENV.production;const api=axios.create({baseURL,withCredentials:true,timeout:10000// Add timeout for better error handling\n});// Interceptor to handle 401 errors and refresh tokens\napi.interceptors.response.use(response=>response,async error=>{var _error$response,_error$response2;const originalRequest=error.config;// Don't retry if it's a logout request or already retried\nif(originalRequest.url==='/auth/logout'||originalRequest._retry){return Promise.reject(error);}// Handle 401 Unauthorized errors\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){originalRequest._retry=true;try{var _refreshResponse$data;// Use environment-based URL for refresh token\nconst refreshURL=`${baseURL}/api/auth/refresh-token`;const refreshResponse=await axios.post(refreshURL,{},{withCredentials:true});if((_refreshResponse$data=refreshResponse.data)!==null&&_refreshResponse$data!==void 0&&_refreshResponse$data.success){return api(originalRequest);}else{handleAuthFailure();}}catch(refreshError){console.error('Token refresh failed:',refreshError);handleAuthFailure();return Promise.reject(refreshError);}}// Handle other common errors\nif(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===503){console.error('Service temporarily unavailable');}return Promise.reject(error);});// Enhanced helper function to handle authentication failures\nconst handleAuthFailure=()=>{const publicRoutes=['/','/nearby','/login','/register'];// Get the domain dynamically\nconst domain=isDevelopment?'localhost':'.weedhurry.com';// Clear cookies with environment-aware domain\nconst cookieOptions=`Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT; ${!isDevelopment?`Domain=${domain};`:''} ${!isDevelopment?'Secure; SameSite=None':''}`;document.cookie=`accessToken=; ${cookieOptions}`;document.cookie=`refreshToken=; ${cookieOptions}`;// Clear any local storage\nlocalStorage.removeItem('auth');sessionStorage.removeItem('auth');// Also clear session storage\n// Only redirect to login if not on a public route\nif(!publicRoutes.includes(window.location.pathname)){window.location.href='/login';}};// Add request interceptor for common headers\napi.interceptors.request.use(config=>{// Add timestamp to prevent caching\nconfig.params={...config.params,_t:Date.now()};return config;},error=>{return Promise.reject(error);});export default api;","map":{"version":3,"names":["axios","ENV","development","production","isDevelopment","process","env","NODE_ENV","baseURL","api","create","withCredentials","timeout","interceptors","response","use","error","_error$response","_error$response2","originalRequest","config","url","_retry","Promise","reject","status","_refreshResponse$data","refreshURL","refreshResponse","post","data","success","handleAuthFailure","refreshError","console","publicRoutes","domain","cookieOptions","document","cookie","localStorage","removeItem","sessionStorage","includes","window","location","pathname","href","request","params","_t","Date","now"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/api/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Environment-based configuration\nconst ENV = {\n    development: 'http://localhost:5001',\n    production: 'https://api.weedhurry.com'\n};\n\n// Get current environment\nconst isDevelopment = process.env.NODE_ENV === 'development';\nconst baseURL = isDevelopment ? ENV.development : ENV.production;\n\nconst api = axios.create({\n    baseURL,\n    withCredentials: true,\n    timeout: 10000, // Add timeout for better error handling\n});\n\n// Interceptor to handle 401 errors and refresh tokens\napi.interceptors.response.use(\n    (response) => response,\n    async (error) => {\n        const originalRequest = error.config;\n\n        // Don't retry if it's a logout request or already retried\n        if (originalRequest.url === '/auth/logout' || originalRequest._retry) {\n            return Promise.reject(error);\n        }\n\n        // Handle 401 Unauthorized errors\n        if (error.response?.status === 401) {\n            originalRequest._retry = true;\n            try {\n                // Use environment-based URL for refresh token\n                const refreshURL = `${baseURL}/api/auth/refresh-token`;\n                const refreshResponse = await axios.post(\n                    refreshURL,\n                    {},\n                    { withCredentials: true }\n                );\n\n                if (refreshResponse.data?.success) {\n                    return api(originalRequest);\n                } else {\n                    handleAuthFailure();\n                }\n            } catch (refreshError) {\n                console.error('Token refresh failed:', refreshError);\n                handleAuthFailure();\n                return Promise.reject(refreshError);\n            }\n        }\n\n        // Handle other common errors\n        if (error.response?.status === 503) {\n            console.error('Service temporarily unavailable');\n        }\n\n        return Promise.reject(error);\n    }\n);\n\n// Enhanced helper function to handle authentication failures\nconst handleAuthFailure = () => {\n    const publicRoutes = ['/', '/nearby', '/login', '/register'];\n    \n    // Get the domain dynamically\n    const domain = isDevelopment ? 'localhost' : '.weedhurry.com';\n    \n    // Clear cookies with environment-aware domain\n    const cookieOptions = `Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT; ${\n        !isDevelopment ? `Domain=${domain};` : ''\n    } ${!isDevelopment ? 'Secure; SameSite=None' : ''}`;\n    \n    document.cookie = `accessToken=; ${cookieOptions}`;\n    document.cookie = `refreshToken=; ${cookieOptions}`;\n    \n    // Clear any local storage\n    localStorage.removeItem('auth');\n    sessionStorage.removeItem('auth'); // Also clear session storage\n\n    // Only redirect to login if not on a public route\n    if (!publicRoutes.includes(window.location.pathname)) {\n        window.location.href = '/login';\n    }\n};\n\n// Add request interceptor for common headers\napi.interceptors.request.use(\n    (config) => {\n        // Add timestamp to prevent caching\n        config.params = {\n            ...config.params,\n            _t: Date.now()\n        };\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}