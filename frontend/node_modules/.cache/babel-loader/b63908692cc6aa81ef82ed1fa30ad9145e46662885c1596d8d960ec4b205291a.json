{"ast":null,"code":"import React,{useState,useEffect}from'react';import{GoogleMap,LoadScript,Marker,InfoWindow}from'@react-google-maps/api';import VendorCard from'./VendorCard';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const VendorMapNew=_ref=>{let{selectedVendorId,onVendorSelect}=_ref;const[vendors,setVendors]=useState([]);const[selectedVendor,setSelectedVendor]=useState(null);const[mapCenter,setMapCenter]=useState({lat:34.0522,lng:-118.2437});const mapStyles={height:\"70vh\",width:\"100%\"};const defaultOptions={panControl:true,zoomControl:true,mapTypeControl:true,scaleControl:true,streetViewControl:true,rotateControl:true,clickableIcons:true,keyboardShortcuts:true,scrollwheel:true,disableDoubleClickZoom:false,fullscreenControl:true};// Inside the fetchVendors function in VendorMapNew.js\nuseEffect(()=>{const fetchVendors=async()=>{try{const response=await fetch('/api/vendors/nearby');const data=await response.json();if(data.success&&data.vendors){const formattedVendors=data.vendors.filter(vendor=>{var _vendor$storefrontAdd,_vendor$storefrontAdd2;return vendor._id&&((_vendor$storefrontAdd=vendor.storefrontAddress)===null||_vendor$storefrontAdd===void 0?void 0:(_vendor$storefrontAdd2=_vendor$storefrontAdd.coordinates)===null||_vendor$storefrontAdd2===void 0?void 0:_vendor$storefrontAdd2.length)===2;}).map(vendor=>({...vendor,// Handle potential MongoDB Extended JSON format\n_id:typeof vendor._id==='object'?vendor._id.$oid||vendor._id.toString():vendor._id.toString(),coordinates:{lat:parseFloat(vendor.storefrontAddress.coordinates[1]),lng:parseFloat(vendor.storefrontAddress.coordinates[0])}}));setVendors(formattedVendors);}}catch(error){console.error('Error fetching vendors:',error);}};fetchVendors();},[]);useEffect(()=>{if(selectedVendorId){const vendor=vendors.find(v=>v._id===selectedVendorId);setSelectedVendor(vendor);if(vendor!==null&&vendor!==void 0&&vendor.coordinates){setMapCenter(vendor.coordinates);}}else{setSelectedVendor(null);}},[selectedVendorId,vendors]);const handleMarkerClick=vendor=>{onVendorSelect(vendor._id.toString());};return/*#__PURE__*/_jsx(\"div\",{className:\"w-full\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 bg-white rounded-lg shadow-md\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-semibold mb-4\",children:\"Vendor Locations\"}),/*#__PURE__*/_jsx(LoadScript,{googleMapsApiKey:process.env.REACT_APP_GOOGLE_MAPS_API_KEY,children:/*#__PURE__*/_jsxs(GoogleMap,{mapContainerStyle:mapStyles,zoom:11,center:mapCenter,options:defaultOptions,children:[vendors.map(vendor=>/*#__PURE__*/_jsx(Marker,{position:vendor.coordinates,onClick:()=>handleMarkerClick(vendor),icon:{url:vendor.logoUrl||'default-marker.png',scaledSize:new window.google.maps.Size(40,40)}},vendor._id)),selectedVendor&&/*#__PURE__*/_jsx(InfoWindow,{position:selectedVendor.coordinates,onCloseClick:()=>onVendorSelect(null),children:/*#__PURE__*/_jsx(\"div\",{className:\"p-4 bg-white rounded-lg max-w-md\",children:/*#__PURE__*/_jsx(VendorCard,{vendor:selectedVendor,orderType:selectedVendor.dispensaryType.toLowerCase(),isSelected:true,onClick:()=>onVendorSelect(selectedVendor._id)})})})]})})]})});};export default VendorMapNew;","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","LoadScript","Marker","InfoWindow","VendorCard","jsx","_jsx","jsxs","_jsxs","VendorMapNew","_ref","selectedVendorId","onVendorSelect","vendors","setVendors","selectedVendor","setSelectedVendor","mapCenter","setMapCenter","lat","lng","mapStyles","height","width","defaultOptions","panControl","zoomControl","mapTypeControl","scaleControl","streetViewControl","rotateControl","clickableIcons","keyboardShortcuts","scrollwheel","disableDoubleClickZoom","fullscreenControl","fetchVendors","response","fetch","data","json","success","formattedVendors","filter","vendor","_vendor$storefrontAdd","_vendor$storefrontAdd2","_id","storefrontAddress","coordinates","length","map","$oid","toString","parseFloat","error","console","find","v","handleMarkerClick","className","children","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","mapContainerStyle","zoom","center","options","position","onClick","icon","url","logoUrl","scaledSize","window","google","maps","Size","onCloseClick","orderType","dispensaryType","toLowerCase","isSelected"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/VendorMapNew.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport VendorCard from './VendorCard';\n\nconst VendorMapNew = ({ selectedVendorId, onVendorSelect }) => {\n  const [vendors, setVendors] = useState([]);\n  const [selectedVendor, setSelectedVendor] = useState(null);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 34.0522,\n    lng: -118.2437\n  });\n\n  const mapStyles = {\n    height: \"70vh\",\n    width: \"100%\"\n  };\n\n  const defaultOptions = {\n    panControl: true,\n    zoomControl: true,\n    mapTypeControl: true,\n    scaleControl: true,\n    streetViewControl: true,\n    rotateControl: true,\n    clickableIcons: true,\n    keyboardShortcuts: true,\n    scrollwheel: true,\n    disableDoubleClickZoom: false,\n    fullscreenControl: true,\n  };\n\n  // Inside the fetchVendors function in VendorMapNew.js\nuseEffect(() => {\n    const fetchVendors = async () => {\n      try {\n        const response = await fetch('/api/vendors/nearby');\n        const data = await response.json();\n        \n        if (data.success && data.vendors) {\n          const formattedVendors = data.vendors\n            .filter(vendor => \n              vendor._id && \n              vendor.storefrontAddress?.coordinates?.length === 2\n            )\n            .map(vendor => ({\n              ...vendor,\n              // Handle potential MongoDB Extended JSON format\n              _id: typeof vendor._id === 'object' ? \n                   vendor._id.$oid || vendor._id.toString() : \n                   vendor._id.toString(),\n              coordinates: {\n                lat: parseFloat(vendor.storefrontAddress.coordinates[1]),\n                lng: parseFloat(vendor.storefrontAddress.coordinates[0])\n              }\n            }));\n\n          setVendors(formattedVendors);\n        }\n      } catch (error) {\n        console.error('Error fetching vendors:', error);\n      }\n    };\n\n    fetchVendors();\n}, []);\n\n  useEffect(() => {\n    if (selectedVendorId) {\n      const vendor = vendors.find(v => v._id === selectedVendorId);\n      setSelectedVendor(vendor);\n      \n      if (vendor?.coordinates) {\n        setMapCenter(vendor.coordinates);\n      }\n    } else {\n      setSelectedVendor(null);\n    }\n  }, [selectedVendorId, vendors]);\n\n  const handleMarkerClick = (vendor) => {\n    onVendorSelect(vendor._id.toString());\n  };\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"p-4 bg-white rounded-lg shadow-md\">\n        <h2 className=\"text-2xl font-semibold mb-4\">Vendor Locations</h2>\n        <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}>\n          <GoogleMap\n            mapContainerStyle={mapStyles}\n            zoom={11}\n            center={mapCenter}\n            options={defaultOptions}\n          >\n            {vendors.map(vendor => (\n              <Marker\n                key={vendor._id}\n                position={vendor.coordinates}\n                onClick={() => handleMarkerClick(vendor)}\n                icon={{\n                  url: vendor.logoUrl || 'default-marker.png',\n                  scaledSize: new window.google.maps.Size(40, 40)\n                }}\n              />\n            ))}\n\n            {selectedVendor && (\n              <InfoWindow\n                position={selectedVendor.coordinates}\n                onCloseClick={() => onVendorSelect(null)}\n              >\n                <div className=\"p-4 bg-white rounded-lg max-w-md\">\n                  <VendorCard\n                    vendor={selectedVendor}\n                    orderType={selectedVendor.dispensaryType.toLowerCase()}\n                    isSelected={true}\n                    onClick={() => onVendorSelect(selectedVendor._id)}\n                  />\n                </div>\n              </InfoWindow>\n            )}\n          </GoogleMap>\n        </LoadScript>\n      </div>\n    </div>\n  );\n};\n\nexport default VendorMapNew;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}