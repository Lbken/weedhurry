{"ast":null,"code":"export const processCoordinates=coordinates=>{if(!coordinates||!Array.isArray(coordinates)){console.warn('Invalid coordinates format:',coordinates);return null;}return coordinates.map(coord=>{if(typeof coord==='object'){// Handle MongoDB extended JSON format\nif(coord.$numberDouble!==undefined){return parseFloat(coord.$numberDouble);}if(coord.$numberInt!==undefined){return parseFloat(coord.$numberInt);}}return parseFloat(coord);});};export const enrichVendor=(vendor,userLat,userLng)=>{let coordinates=null;let source=null;// Check vendor type first and use appropriate coordinates\nif(vendor.dispensaryType==='Delivery'){var _vendor$deliveryZone;// For delivery-only vendors, use delivery zone coordinates\nif((_vendor$deliveryZone=vendor.deliveryZone)!==null&&_vendor$deliveryZone!==void 0&&_vendor$deliveryZone.coordinates){coordinates=processCoordinates(vendor.deliveryZone.coordinates);source='delivery';}}else if(vendor.dispensaryType==='Pickup'){var _vendor$storefrontAdd;// For pickup-only vendors, use storefront coordinates\nif((_vendor$storefrontAdd=vendor.storefrontAddress)!==null&&_vendor$storefrontAdd!==void 0&&_vendor$storefrontAdd.coordinates){coordinates=processCoordinates(vendor.storefrontAddress.coordinates);source='storefront';}}else if(vendor.dispensaryType==='Pickup & Delivery'){var _vendor$storefrontAdd2,_vendor$deliveryZone2;// For pickup & delivery vendors, prefer storefront but fall back to delivery zone\nif((_vendor$storefrontAdd2=vendor.storefrontAddress)!==null&&_vendor$storefrontAdd2!==void 0&&_vendor$storefrontAdd2.coordinates){coordinates=processCoordinates(vendor.storefrontAddress.coordinates);source='storefront';}else if((_vendor$deliveryZone2=vendor.deliveryZone)!==null&&_vendor$deliveryZone2!==void 0&&_vendor$deliveryZone2.coordinates){coordinates=processCoordinates(vendor.deliveryZone.coordinates);source='delivery';}}if(!coordinates||coordinates.length!==2){console.warn(`Invalid coordinates for vendor ${vendor.dispensaryName}`,{type:vendor.dispensaryType,coordinates,source});return null;}const[vLng,vLat]=coordinates;// Calculate distance\nconst R=3963;// Earth's radius in miles\nconst dLat=(vLat-userLat)*Math.PI/180;const dLng=(vLng-userLng)*Math.PI/180;const a=Math.sin(dLat/2)*Math.sin(dLat/2)+Math.cos(userLat*Math.PI/180)*Math.cos(vLat*Math.PI/180)*Math.sin(dLng/2)*Math.sin(dLng/2);const c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));const distance=R*c;return{...vendor,coordinates:[vLng,vLat],coordinateSource:source,milesAway:parseFloat(distance.toFixed(1))};};","map":{"version":3,"names":["processCoordinates","coordinates","Array","isArray","console","warn","map","coord","$numberDouble","undefined","parseFloat","$numberInt","enrichVendor","vendor","userLat","userLng","source","dispensaryType","_vendor$deliveryZone","deliveryZone","_vendor$storefrontAdd","storefrontAddress","_vendor$storefrontAdd2","_vendor$deliveryZone2","length","dispensaryName","type","vLng","vLat","R","dLat","Math","PI","dLng","a","sin","cos","c","atan2","sqrt","distance","coordinateSource","milesAway","toFixed"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/utils/coordinateUtils.js"],"sourcesContent":["export const processCoordinates = (coordinates) => {\n  if (!coordinates || !Array.isArray(coordinates)) {\n    console.warn('Invalid coordinates format:', coordinates);\n    return null;\n  }\n\n  return coordinates.map(coord => {\n    if (typeof coord === 'object') {\n      // Handle MongoDB extended JSON format\n      if (coord.$numberDouble !== undefined) {\n        return parseFloat(coord.$numberDouble);\n      }\n      if (coord.$numberInt !== undefined) {\n        return parseFloat(coord.$numberInt);\n      }\n    }\n    return parseFloat(coord);\n  });\n};\n\nexport const enrichVendor = (vendor, userLat, userLng) => {\n  let coordinates = null;\n  let source = null;\n\n  // Check vendor type first and use appropriate coordinates\n  if (vendor.dispensaryType === 'Delivery') {\n    // For delivery-only vendors, use delivery zone coordinates\n    if (vendor.deliveryZone?.coordinates) {\n      coordinates = processCoordinates(vendor.deliveryZone.coordinates);\n      source = 'delivery';\n    }\n  } else if (vendor.dispensaryType === 'Pickup') {\n    // For pickup-only vendors, use storefront coordinates\n    if (vendor.storefrontAddress?.coordinates) {\n      coordinates = processCoordinates(vendor.storefrontAddress.coordinates);\n      source = 'storefront';\n    }\n  } else if (vendor.dispensaryType === 'Pickup & Delivery') {\n    // For pickup & delivery vendors, prefer storefront but fall back to delivery zone\n    if (vendor.storefrontAddress?.coordinates) {\n      coordinates = processCoordinates(vendor.storefrontAddress.coordinates);\n      source = 'storefront';\n    } else if (vendor.deliveryZone?.coordinates) {\n      coordinates = processCoordinates(vendor.deliveryZone.coordinates);\n      source = 'delivery';\n    }\n  }\n\n  if (!coordinates || coordinates.length !== 2) {\n    console.warn(`Invalid coordinates for vendor ${vendor.dispensaryName}`, {\n      type: vendor.dispensaryType,\n      coordinates,\n      source\n    });\n    return null;\n  }\n\n  const [vLng, vLat] = coordinates;\n\n  // Calculate distance\n  const R = 3963; // Earth's radius in miles\n  const dLat = (vLat - userLat) * Math.PI / 180;\n  const dLng = (vLng - userLng) * Math.PI / 180;\n  const a = \n    Math.sin(dLat/2) * Math.sin(dLat/2) +\n    Math.cos(userLat * Math.PI / 180) * Math.cos(vLat * Math.PI / 180) * \n    Math.sin(dLng/2) * Math.sin(dLng/2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n  const distance = R * c;\n\n  return {\n    ...vendor,\n    coordinates: [vLng, vLat],\n    coordinateSource: source,\n    milesAway: parseFloat(distance.toFixed(1))\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}