{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/context/VendorContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VendorContext = /*#__PURE__*/createContext();\nexport const VendorProvider = ({\n  vendorId,\n  children\n}) => {\n  _s();\n  const [vendor, setVendor] = useState(null); // Vendor profile data\n  const [products, setProducts] = useState([]); // Vendor products\n  const [loading, setLoading] = useState(true); // Loading state\n  const [error, setError] = useState(null); // Error state\n\n  // Function to fetch vendor profile and products\n  const fetchVendorAndProducts = useCallback(async id => {\n    setLoading(true);\n    setError(null);\n    try {\n      const [vendorResponse, productsResponse] = await Promise.all([axios.get(`http://localhost:5001/api/vendors/${id}`, {\n        withCredentials: true\n      }), axios.get(`http://localhost:5001/api/vendor/inventory/public/${id}`)]);\n      setVendor(vendorResponse.data.data || {});\n      setProducts(productsResponse.data.data || []);\n    } catch (err) {\n      console.error('Failed to fetch vendor data:', err.message);\n      setError('Failed to load vendor or products data.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Function to update vendor's minimum order\n  const updateMinOrder = async newMinOrder => {\n    try {\n      const response = await axios.put('http://localhost:5001/api/vendors/min-order', {\n        minOrder: newMinOrder\n      }, {\n        withCredentials: true\n      });\n      if (response.data.success) {\n        setVendor(prev => ({\n          ...prev,\n          minOrder: newMinOrder\n        }));\n        alert('Minimum order updated successfully!');\n      } else {\n        alert(response.data.message || 'Failed to update minimum order.');\n      }\n    } catch (err) {\n      console.error('Error updating minimum order:', err.message);\n      alert('An error occurred while updating minimum order.');\n    }\n  };\n\n  // Function to update business hours\n  const updateBusinessHours = async businessHours => {\n    try {\n      const response = await axios.put('http://localhost:5001/api/vendors/business-hours', {\n        businessHours\n      }, {\n        withCredentials: true\n      });\n      if (response.data.success) {\n        setVendor(prev => ({\n          ...prev,\n          businessHours\n        }));\n        alert('Business hours updated successfully!');\n      } else {\n        alert(response.data.message || 'Failed to update business hours.');\n      }\n    } catch (err) {\n      console.error('Error updating business hours:', err.message);\n      alert('An error occurred while updating business hours.');\n    }\n  };\n\n  // Function to refresh vendor data after updates\n  const refreshVendorData = async () => {\n    if (vendorId) {\n      await fetchVendorAndProducts(vendorId);\n    }\n  };\n  useEffect(() => {\n    if (vendorId) {\n      fetchVendorAndProducts(vendorId);\n    }\n  }, [vendorId, fetchVendorAndProducts]);\n  return /*#__PURE__*/_jsxDEV(VendorContext.Provider, {\n    value: {\n      vendor,\n      products,\n      loading,\n      error,\n      updateMinOrder,\n      updateBusinessHours,\n      refreshVendorData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(VendorProvider, \"K58xM8aAMSHAtg/6jJdUIUucu3M=\");\n_c = VendorProvider;\nvar _c;\n$RefreshReg$(_c, \"VendorProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","VendorContext","VendorProvider","vendorId","children","_s","vendor","setVendor","products","setProducts","loading","setLoading","error","setError","fetchVendorAndProducts","id","vendorResponse","productsResponse","Promise","all","get","withCredentials","data","err","console","message","updateMinOrder","newMinOrder","response","put","minOrder","success","prev","alert","updateBusinessHours","businessHours","refreshVendorData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/context/VendorContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\n\nexport const VendorContext = createContext();\n\nexport const VendorProvider = ({ vendorId, children }) => {\n  const [vendor, setVendor] = useState(null); // Vendor profile data\n  const [products, setProducts] = useState([]); // Vendor products\n  const [loading, setLoading] = useState(true); // Loading state\n  const [error, setError] = useState(null); // Error state\n\n  // Function to fetch vendor profile and products\n  const fetchVendorAndProducts = useCallback(async (id) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const [vendorResponse, productsResponse] = await Promise.all([\n        axios.get(`http://localhost:5001/api/vendors/${id}`, { withCredentials: true }),\n        axios.get(`http://localhost:5001/api/vendor/inventory/public/${id}`),\n      ]);\n\n      setVendor(vendorResponse.data.data || {});\n      setProducts(productsResponse.data.data || []);\n    } catch (err) {\n      console.error('Failed to fetch vendor data:', err.message);\n      setError('Failed to load vendor or products data.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Function to update vendor's minimum order\n  const updateMinOrder = async (newMinOrder) => {\n    try {\n      const response = await axios.put(\n        'http://localhost:5001/api/vendors/min-order',\n        { minOrder: newMinOrder },\n        { withCredentials: true }\n      );\n\n      if (response.data.success) {\n        setVendor((prev) => ({ ...prev, minOrder: newMinOrder }));\n        alert('Minimum order updated successfully!');\n      } else {\n        alert(response.data.message || 'Failed to update minimum order.');\n      }\n    } catch (err) {\n      console.error('Error updating minimum order:', err.message);\n      alert('An error occurred while updating minimum order.');\n    }\n  };\n\n  // Function to update business hours\n  const updateBusinessHours = async (businessHours) => {\n    try {\n      const response = await axios.put(\n        'http://localhost:5001/api/vendors/business-hours',\n        { businessHours },\n        { withCredentials: true }\n      );\n\n      if (response.data.success) {\n        setVendor((prev) => ({ ...prev, businessHours }));\n        alert('Business hours updated successfully!');\n      } else {\n        alert(response.data.message || 'Failed to update business hours.');\n      }\n    } catch (err) {\n      console.error('Error updating business hours:', err.message);\n      alert('An error occurred while updating business hours.');\n    }\n  };\n\n  // Function to refresh vendor data after updates\n  const refreshVendorData = async () => {\n    if (vendorId) {\n      await fetchVendorAndProducts(vendorId);\n    }\n  };\n\n  useEffect(() => {\n    if (vendorId) {\n      fetchVendorAndProducts(vendorId);\n    }\n  }, [vendorId, fetchVendorAndProducts]);\n\n  return (\n    <VendorContext.Provider\n      value={{\n        vendor,\n        products,\n        loading,\n        error,\n        updateMinOrder,\n        updateBusinessHours,\n        refreshVendorData,\n      }}\n    >\n      {children}\n    </VendorContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}