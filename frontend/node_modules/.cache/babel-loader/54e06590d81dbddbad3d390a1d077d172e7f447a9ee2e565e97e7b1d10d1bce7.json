{"ast":null,"code":"import React,{useEffect,useState,useCallback}from'react';import{useNavigate}from'react-router-dom';import DeliveryPickupWrapper from'../components/DeliveryPickupWrapper';import'./DeliveryPickupPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DeliveryPickupPage=()=>{const[vendors,setVendors]=useState([]);const[parsedAddress,setParsedAddress]=useState({street:'',city:'',stateAbbreviation:''});const[animate,setAnimate]=useState(false);const navigate=useNavigate();const BASE_URL=process.env.REACT_APP_API_BASE_URL||'https://api.weedhurry.com';useEffect(()=>{// Trigger slide-in animation on mount\nsetAnimate(true);// Parse the saved address from localStorage\nconst savedAddress=localStorage.getItem('userAddress');if(savedAddress){var _parts$,_parts$2,_parts$3;const parts=savedAddress.split(',');setParsedAddress({street:((_parts$=parts[0])===null||_parts$===void 0?void 0:_parts$.trim())||'',city:((_parts$2=parts[1])===null||_parts$2===void 0?void 0:_parts$2.trim())||'',stateAbbreviation:((_parts$3=parts[2])===null||_parts$3===void 0?void 0:_parts$3.trim().split(' ')[0])||''});}},[]);const calculateDistance=(lat1,lng1,lat2,lng2)=>{const toRadians=degree=>degree*Math.PI/180;const R=3958.8;// Radius of Earth in miles\nconst dLat=toRadians(lat2-lat1);const dLng=toRadians(lng2-lng1);const a=Math.sin(dLat/2)*Math.sin(dLat/2)+Math.cos(toRadians(lat1))*Math.cos(toRadians(lat2))*Math.sin(dLng/2)*Math.sin(dLng/2);const c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));return R*c;// Distance in miles\n};const fetchVendors=useCallback(async()=>{const address=localStorage.getItem('userAddress');if(!address)return;try{// Fetch coordinates of user's saved address\nconst geocodeResponse=await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(address)}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`);const geocodeData=await geocodeResponse.json();if(geocodeData.status!=='OK')return;const{lat,lng}=geocodeData.results[0].geometry.location;// Fetch vendors nearby\nconst vendorsResponse=await fetch(`${BASE_URL}/api/vendors/nearby?lat=${lat}&lng=${lng}`,{credentials:'include',headers:{'Content-Type':'application/json'}});const vendorsData=await vendorsResponse.json();if(!vendorsData.vendors||vendorsData.vendors.length===0)return;// Calculate distance for each vendor\n// In DeliveryPickupPage.js, update this section:\nconst vendorsWithDistance=vendorsData.vendors.map(vendor=>{var _vendor$deliveryZone,_vendor$storefrontAdd;// First get the appropriate coordinates\nlet coordinates=null;if((_vendor$deliveryZone=vendor.deliveryZone)!==null&&_vendor$deliveryZone!==void 0&&_vendor$deliveryZone.coordinates){coordinates=vendor.deliveryZone.coordinates;}else if((_vendor$storefrontAdd=vendor.storefrontAddress)!==null&&_vendor$storefrontAdd!==void 0&&_vendor$storefrontAdd.coordinates){coordinates=vendor.storefrontAddress.coordinates;}if(!coordinates||!Array.isArray(coordinates)||coordinates.length!==2){console.warn(`Vendor ${vendor.dispensaryName} has invalid coordinates`);return null;}// Handle potential MongoDB $numberDouble format\nconst[vLng,vLat]=coordinates.map(coord=>typeof coord==='object'?parseFloat(coord.$numberDouble):parseFloat(coord));if(isNaN(vLat)||isNaN(vLng)){console.warn(`Invalid coordinate values for vendor ${vendor.dispensaryName}`);return null;}const milesAway=calculateDistance(lat,lng,vLat,vLng);return{...vendor,coordinates:[vLng,vLat],milesAway:milesAway.toFixed(1)};}).filter(Boolean);// Remove any null entries\nsetVendors(vendorsWithDistance);setVendors(vendorsWithDistance);}catch(err){console.error('Error fetching vendors:',err);}},[BASE_URL]);useEffect(()=>{fetchVendors();},[fetchVendors]);if(!parsedAddress.street&&!parsedAddress.city&&!parsedAddress.stateAbbreviation){return/*#__PURE__*/_jsxs(\"p\",{className:\"mt-4\",children:[\"No address set. Please go back and \",/*#__PURE__*/_jsx(\"a\",{href:\"/\",children:\"enter your address\"}),\".\"]});}return/*#__PURE__*/_jsx(\"div\",{className:`delivery-pickup-page ${animate?'slide-in':''}`,style:{minHeight:'100vh',overflowX:'visible',backgroundColor:'#F8F9FA'},children:/*#__PURE__*/_jsx(DeliveryPickupWrapper,{vendors:vendors,onNavigate:navigate})});};export default DeliveryPickupPage;","map":{"version":3,"names":["React","useEffect","useState","useCallback","useNavigate","DeliveryPickupWrapper","jsx","_jsx","jsxs","_jsxs","DeliveryPickupPage","vendors","setVendors","parsedAddress","setParsedAddress","street","city","stateAbbreviation","animate","setAnimate","navigate","BASE_URL","process","env","REACT_APP_API_BASE_URL","savedAddress","localStorage","getItem","_parts$","_parts$2","_parts$3","parts","split","trim","calculateDistance","lat1","lng1","lat2","lng2","toRadians","degree","Math","PI","R","dLat","dLng","a","sin","cos","c","atan2","sqrt","fetchVendors","address","geocodeResponse","fetch","encodeURIComponent","REACT_APP_GOOGLE_MAPS_API_KEY","geocodeData","json","status","lat","lng","results","geometry","location","vendorsResponse","credentials","headers","vendorsData","length","vendorsWithDistance","map","vendor","_vendor$deliveryZone","_vendor$storefrontAdd","coordinates","deliveryZone","storefrontAddress","Array","isArray","console","warn","dispensaryName","vLng","vLat","coord","parseFloat","$numberDouble","isNaN","milesAway","toFixed","filter","Boolean","err","error","className","children","href","style","minHeight","overflowX","backgroundColor","onNavigate"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/pages/DeliveryPickupPage.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DeliveryPickupWrapper from '../components/DeliveryPickupWrapper';\nimport './DeliveryPickupPage.css';\n\nconst DeliveryPickupPage = () => {\n  const [vendors, setVendors] = useState([]);\n  const [parsedAddress, setParsedAddress] = useState({ street: '', city: '', stateAbbreviation: '' });\n  const [animate, setAnimate] = useState(false);\n\n  const navigate = useNavigate();\n  const BASE_URL = process.env.REACT_APP_API_BASE_URL || 'https://api.weedhurry.com';\n\n  useEffect(() => {\n    // Trigger slide-in animation on mount\n    setAnimate(true);\n\n    // Parse the saved address from localStorage\n    const savedAddress = localStorage.getItem('userAddress');\n    if (savedAddress) {\n      const parts = savedAddress.split(',');\n      setParsedAddress({\n        street: parts[0]?.trim() || '',\n        city: parts[1]?.trim() || '',\n        stateAbbreviation: parts[2]?.trim().split(' ')[0] || '',\n      });\n    }\n  }, []);\n\n  const calculateDistance = (lat1, lng1, lat2, lng2) => {\n    const toRadians = (degree) => (degree * Math.PI) / 180;\n    const R = 3958.8; // Radius of Earth in miles\n    const dLat = toRadians(lat2 - lat1);\n    const dLng = toRadians(lng2 - lng1);\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(toRadians(lat1)) * Math.cos(toRadians(lat2)) *\n      Math.sin(dLng / 2) * Math.sin(dLng / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c; // Distance in miles\n  };\n\n  const fetchVendors = useCallback(async () => {\n    const address = localStorage.getItem('userAddress');\n    if (!address) return;\n\n    try {\n      // Fetch coordinates of user's saved address\n      const geocodeResponse = await fetch(\n        `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(\n          address\n        )}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`\n      );\n      const geocodeData = await geocodeResponse.json();\n      if (geocodeData.status !== 'OK') return;\n\n      const { lat, lng } = geocodeData.results[0].geometry.location;\n\n      // Fetch vendors nearby\n      const vendorsResponse = await fetch(`${BASE_URL}/api/vendors/nearby?lat=${lat}&lng=${lng}`, {\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const vendorsData = await vendorsResponse.json();\n\n      if (!vendorsData.vendors || vendorsData.vendors.length === 0) return;\n\n      // Calculate distance for each vendor\n      // In DeliveryPickupPage.js, update this section:\nconst vendorsWithDistance = vendorsData.vendors.map((vendor) => {\n  // First get the appropriate coordinates\n  let coordinates = null;\n  if (vendor.deliveryZone?.coordinates) {\n    coordinates = vendor.deliveryZone.coordinates;\n  } else if (vendor.storefrontAddress?.coordinates) {\n    coordinates = vendor.storefrontAddress.coordinates;\n  }\n\n  if (!coordinates || !Array.isArray(coordinates) || coordinates.length !== 2) {\n    console.warn(`Vendor ${vendor.dispensaryName} has invalid coordinates`);\n    return null;\n  }\n\n  // Handle potential MongoDB $numberDouble format\n  const [vLng, vLat] = coordinates.map(coord => \n    typeof coord === 'object' ? parseFloat(coord.$numberDouble) : parseFloat(coord)\n  );\n\n  if (isNaN(vLat) || isNaN(vLng)) {\n    console.warn(`Invalid coordinate values for vendor ${vendor.dispensaryName}`);\n    return null;\n  }\n\n  const milesAway = calculateDistance(lat, lng, vLat, vLng);\n  return { \n    ...vendor, \n    coordinates: [vLng, vLat],\n    milesAway: milesAway.toFixed(1) \n  };\n}).filter(Boolean); // Remove any null entries\n\nsetVendors(vendorsWithDistance);\n\n      setVendors(vendorsWithDistance);\n    } catch (err) {\n      console.error('Error fetching vendors:', err);\n    }\n  }, [BASE_URL]);\n\n  useEffect(() => {\n    fetchVendors();\n  }, [fetchVendors]);\n\n  if (!parsedAddress.street && !parsedAddress.city && !parsedAddress.stateAbbreviation) {\n    return <p className='mt-4'>No address set. Please go back and <a href=\"/\">enter your address</a>.</p>;\n  }\n\n  return (\n    <div\n      className={`delivery-pickup-page ${animate ? 'slide-in' : ''}`}\n      style={{\n        minHeight: '100vh',\n        overflowX: 'visible',\n        backgroundColor: '#F8F9FA',\n      }}\n    >\n      <DeliveryPickupWrapper \n        vendors={vendors}\n        onNavigate={navigate}\n      />\n    </div>\n  );\n};\n\nexport default DeliveryPickupPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}