{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/context/VendorContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VendorContext = /*#__PURE__*/createContext();\nexport const VendorProvider = ({\n  vendorId,\n  children\n}) => {\n  _s();\n  const [vendor, setVendor] = useState(null); // Stores vendor details\n  const [products, setProducts] = useState([]); // Stores vendor products\n  const [error, setError] = useState(null); // Stores error messages\n  const [isLoading, setIsLoading] = useState(false); // Indicates loading state\n\n  // Function to fetch vendor data\n  const fetchVendorData = async id => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(`http://localhost:5001/api/vendors/${id}`);\n      const data = await response.json();\n      if (response.ok) {\n        setVendor(data.data); // Assuming vendor data is under data.data\n      } else {\n        throw new Error(data.message || \"Failed to load vendor data.\");\n      }\n    } catch (err) {\n      setError(err.message || \"Error fetching vendor data.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Function to fetch products for the specific vendor\n  const fetchProductsData = async id => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(`http://localhost:5001/api/products/vendor/${id}/products`);\n      const data = await response.json();\n      if (response.ok) {\n        setProducts(data.data.products); // Assuming products are under data.data.products\n      } else {\n        throw new Error(data.message || \"Failed to load products data.\");\n      }\n    } catch (err) {\n      setError(err.message || \"Error fetching products data.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Fetch data when vendorId changes\n  useEffect(() => {\n    if (vendorId) {\n      setError(null); // Reset any previous errors\n      fetchVendorData(vendorId);\n      fetchProductsData(vendorId);\n    }\n  }, [vendorId]);\n  return /*#__PURE__*/_jsxDEV(VendorContext.Provider, {\n    value: {\n      vendor,\n      products,\n      error,\n      isLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(VendorProvider, \"DBwxYT2YPoPXjLQsyvguUpXhL84=\");\n_c = VendorProvider;\nvar _c;\n$RefreshReg$(_c, \"VendorProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","VendorContext","VendorProvider","vendorId","children","_s","vendor","setVendor","products","setProducts","error","setError","isLoading","setIsLoading","fetchVendorData","id","response","fetch","data","json","ok","Error","message","err","fetchProductsData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/context/VendorContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const VendorContext = createContext();\n\nexport const VendorProvider = ({ vendorId, children }) => {\n  const [vendor, setVendor] = useState(null); // Stores vendor details\n  const [products, setProducts] = useState([]); // Stores vendor products\n  const [error, setError] = useState(null); // Stores error messages\n  const [isLoading, setIsLoading] = useState(false); // Indicates loading state\n\n  // Function to fetch vendor data\n  const fetchVendorData = async (id) => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(`http://localhost:5001/api/vendors/${id}`);\n      const data = await response.json();\n\n      if (response.ok) {\n        setVendor(data.data); // Assuming vendor data is under data.data\n      } else {\n        throw new Error(data.message || \"Failed to load vendor data.\");\n      }\n    } catch (err) {\n      setError(err.message || \"Error fetching vendor data.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Function to fetch products for the specific vendor\n  const fetchProductsData = async (id) => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(`http://localhost:5001/api/products/vendor/${id}/products`);\n      const data = await response.json();\n\n      if (response.ok) {\n        setProducts(data.data.products); // Assuming products are under data.data.products\n      } else {\n        throw new Error(data.message || \"Failed to load products data.\");\n      }\n    } catch (err) {\n      setError(err.message || \"Error fetching products data.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Fetch data when vendorId changes\n  useEffect(() => {\n    if (vendorId) {\n      setError(null); // Reset any previous errors\n      fetchVendorData(vendorId);\n      fetchProductsData(vendorId);\n    }\n  }, [vendorId]);\n\n  return (\n    <VendorContext.Provider value={{ vendor, products, error, isLoading }}>\n      {children}\n    </VendorContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,aAAa,gBAAGL,aAAa,CAAC,CAAC;AAE5C,OAAO,MAAMM,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnD;EACA,MAAMiB,eAAe,GAAG,MAAOC,EAAE,IAAK;IACpC,IAAI;MACFF,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqCF,EAAE,EAAE,CAAC;MACvE,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAIH,QAAQ,CAACI,EAAE,EAAE;QACfb,SAAS,CAACW,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;MACxB,CAAC,MAAM;QACL,MAAM,IAAIG,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,6BAA6B,CAAC;MAChE;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZZ,QAAQ,CAACY,GAAG,CAACD,OAAO,IAAI,6BAA6B,CAAC;IACxD,CAAC,SAAS;MACRT,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMW,iBAAiB,GAAG,MAAOT,EAAE,IAAK;IACtC,IAAI;MACFF,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6CF,EAAE,WAAW,CAAC;MACxF,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAIH,QAAQ,CAACI,EAAE,EAAE;QACfX,WAAW,CAACS,IAAI,CAACA,IAAI,CAACV,QAAQ,CAAC,CAAC,CAAC;MACnC,CAAC,MAAM;QACL,MAAM,IAAIa,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,+BAA+B,CAAC;MAClE;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZZ,QAAQ,CAACY,GAAG,CAACD,OAAO,IAAI,+BAA+B,CAAC;IAC1D,CAAC,SAAS;MACRT,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACAf,SAAS,CAAC,MAAM;IACd,IAAIK,QAAQ,EAAE;MACZQ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;MAChBG,eAAe,CAACX,QAAQ,CAAC;MACzBqB,iBAAiB,CAACrB,QAAQ,CAAC;IAC7B;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA,CAACC,aAAa,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,MAAM;MAAEE,QAAQ;MAAEE,KAAK;MAAEE;IAAU,CAAE;IAAAR,QAAA,EACnEA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACzB,EAAA,CA1DWH,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}