{"ast":null,"code":"// controllers/authController.js\nconst bcrypt = require('bcryptjs');\nconst jwt = require('jsonwebtoken');\nconst Vendor = require('../models/Vendor');\nconst registerVendor = async (req, res) => {\n  try {\n    const {\n      password,\n      ...vendorData\n    } = req.body;\n\n    // Hash the vendor's password before saving\n    const hashedPassword = await bcrypt.hash(password, 10);\n\n    // Create and save the new vendor with hashed password\n    const vendor = new Vendor({\n      ...vendorData,\n      password: hashedPassword\n    });\n    await vendor.save();\n\n    // Generate a JWT token for the newly registered vendor\n    const token = jwt.sign({\n      id: vendor._id\n    }, process.env.JWT_SECRET, {\n      expiresIn: '1h'\n    });\n    res.status(201).json({\n      success: true,\n      message: 'Vendor registered successfully',\n      token\n    });\n  } catch (error) {\n    console.error(\"Error registering vendor:\", error);\n    res.status(400).json({\n      success: false,\n      message: 'Error registering vendor',\n      error: error.message\n    });\n  }\n};\n\n// Example login function\nconst loginVendor = async (req, res) => {\n  try {\n    const {\n      email,\n      password\n    } = req.body;\n    const vendor = await Vendor.findOne({\n      email\n    });\n    if (!vendor) return res.status(400).json({\n      success: false,\n      message: 'Vendor not found'\n    });\n    const isPasswordValid = await bcrypt.compare(password, vendor.password);\n    if (!isPasswordValid) return res.status(400).json({\n      success: false,\n      message: 'Invalid password'\n    });\n    const token = jwt.sign({\n      id: vendor._id\n    }, process.env.JWT_SECRET, {\n      expiresIn: '1h'\n    });\n    res.status(200).json({\n      success: true,\n      token\n    });\n  } catch (error) {\n    console.error(\"Login error:\", error);\n    res.status(500).json({\n      success: false,\n      message: 'Login error',\n      error: error.message\n    });\n  }\n};\nmodule.exports = {\n  registerVendor,\n  loginVendor\n};","map":{"version":3,"names":["bcrypt","require","jwt","Vendor","registerVendor","req","res","password","vendorData","body","hashedPassword","hash","vendor","save","token","sign","id","_id","process","env","JWT_SECRET","expiresIn","status","json","success","message","error","console","loginVendor","email","findOne","isPasswordValid","compare","module","exports"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/AuthTestButton.js"],"sourcesContent":["// controllers/authController.js\nconst bcrypt = require('bcryptjs');\nconst jwt = require('jsonwebtoken');\nconst Vendor = require('../models/Vendor');\n\nconst registerVendor = async (req, res) => {\n    try {\n        const { password, ...vendorData } = req.body;\n\n        // Hash the vendor's password before saving\n        const hashedPassword = await bcrypt.hash(password, 10);\n\n        // Create and save the new vendor with hashed password\n        const vendor = new Vendor({ ...vendorData, password: hashedPassword });\n        await vendor.save();\n\n        // Generate a JWT token for the newly registered vendor\n        const token = jwt.sign({ id: vendor._id }, process.env.JWT_SECRET, { expiresIn: '1h' });\n\n        res.status(201).json({ success: true, message: 'Vendor registered successfully', token });\n    } catch (error) {\n        console.error(\"Error registering vendor:\", error);\n        res.status(400).json({ success: false, message: 'Error registering vendor', error: error.message });\n    }\n};\n\n// Example login function\nconst loginVendor = async (req, res) => {\n  try {\n      const { email, password } = req.body;\n      const vendor = await Vendor.findOne({ email });\n      if (!vendor) return res.status(400).json({ success: false, message: 'Vendor not found' });\n\n      const isPasswordValid = await bcrypt.compare(password, vendor.password);\n      if (!isPasswordValid) return res.status(400).json({ success: false, message: 'Invalid password' });\n\n      const token = jwt.sign({ id: vendor._id }, process.env.JWT_SECRET, { expiresIn: '1h' });\n      res.status(200).json({ success: true, token });\n  } catch (error) {\n      console.error(\"Login error:\", error);\n      res.status(500).json({ success: false, message: 'Login error', error: error.message });\n  }\n};\n\nmodule.exports = { registerVendor, loginVendor };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}