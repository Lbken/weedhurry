{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/TestButton.js\",\n  _s = $RefreshSig$();\n// File: src/components/TestButton.js\n\nimport React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestButton = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const baseUrl = 'https://api.treez.io/v2.0/dispensary/partnersandbox2';\n  const clientId = 'wNzewkHXh2P5GnfCFPX3AmeA'; // Replace with your actual client_id\n  const apiKey = 'MTQ5Mjg2ODdjMDBmNTliZDUxZ'; // Replace with your actual API key\n  const testPhone = '5556666558'; // Hardcoded test phone number for now\n\n  const handleTestClick = async () => {\n    setLoading(true);\n    try {\n      // Step 1: Get Bearer Token\n      const tokenResponse = await axios.post(`${baseUrl}/config/api/gettokens`, null, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        params: {\n          client_id: clientId,\n          apikey: apiKey\n        }\n      });\n      const bearerToken = tokenResponse.data.access_token;\n      if (!bearerToken) {\n        throw new Error('Failed to fetch bearer token.');\n      }\n\n      // Step 2: Check if Customer Exists\n      const customerResponse = await axios.get(`${baseUrl}/customer/phone/${testPhone}`, {\n        headers: {\n          Authorization: `Bearer ${bearerToken}`,\n          'Content-Type': 'application/json',\n          client_id: clientId\n        }\n      });\n      const statusCode = customerResponse.status;\n      const responseData = customerResponse.data;\n\n      // Display response and status code in a popup window\n      alert(`Status Code: ${statusCode}\\nResponse: ${JSON.stringify(responseData, null, 2)}`);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      // Handle and display errors in a popup window\n      alert(`Error occurred: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleTestClick,\n      disabled: loading,\n      className: \"test-api-button\",\n      children: loading ? 'Testing...' : 'Test API'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(TestButton, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n_c = TestButton;\nexport default TestButton;\nvar _c;\n$RefreshReg$(_c, \"TestButton\");","map":{"version":3,"names":["React","useState","Button","axios","jsxDEV","_jsxDEV","TestButton","_s","loading","setLoading","baseUrl","clientId","apiKey","testPhone","handleTestClick","tokenResponse","post","headers","params","client_id","apikey","bearerToken","data","access_token","Error","customerResponse","get","Authorization","statusCode","status","responseData","alert","JSON","stringify","error","_error$response","_error$response$data","response","message","className","children","variant","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/TestButton.js"],"sourcesContent":["// File: src/components/TestButton.js\n\nimport React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nconst TestButton = () => {\n  const [loading, setLoading] = useState(false);\n\n  const baseUrl = 'https://api.treez.io/v2.0/dispensary/partnersandbox2';\n  const clientId = 'wNzewkHXh2P5GnfCFPX3AmeA'; // Replace with your actual client_id\n  const apiKey = 'MTQ5Mjg2ODdjMDBmNTliZDUxZ'; // Replace with your actual API key\n  const testPhone = '5556666558'; // Hardcoded test phone number for now\n\n  const handleTestClick = async () => {\n    setLoading(true);\n\n    try {\n      // Step 1: Get Bearer Token\n      const tokenResponse = await axios.post(`${baseUrl}/config/api/gettokens`, null, {\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        params: { client_id: clientId, apikey: apiKey },\n      });\n\n      const bearerToken = tokenResponse.data.access_token;\n\n      if (!bearerToken) {\n        throw new Error('Failed to fetch bearer token.');\n      }\n\n      // Step 2: Check if Customer Exists\n      const customerResponse = await axios.get(`${baseUrl}/customer/phone/${testPhone}`, {\n        headers: {\n          Authorization: `Bearer ${bearerToken}`,\n          'Content-Type': 'application/json',\n          client_id: clientId,\n        },\n      });\n\n      const statusCode = customerResponse.status;\n      const responseData = customerResponse.data;\n\n      // Display response and status code in a popup window\n      alert(\n        `Status Code: ${statusCode}\\nResponse: ${JSON.stringify(responseData, null, 2)}`\n      );\n    } catch (error) {\n      // Handle and display errors in a popup window\n      alert(`Error occurred: ${error.response?.data?.message || error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"d-flex justify-content-center mt-5\">\n      <Button\n        variant=\"primary\"\n        onClick={handleTestClick}\n        disabled={loading}\n        className=\"test-api-button\"\n      >\n        {loading ? 'Testing...' : 'Test API'}\n      </Button>\n    </div>\n  );\n};\n\nexport default TestButton;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,iBAAiB;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMS,OAAO,GAAG,sDAAsD;EACtE,MAAMC,QAAQ,GAAG,0BAA0B,CAAC,CAAC;EAC7C,MAAMC,MAAM,GAAG,2BAA2B,CAAC,CAAC;EAC5C,MAAMC,SAAS,GAAG,YAAY,CAAC,CAAC;;EAEhC,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClCL,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF;MACA,MAAMM,aAAa,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,GAAGN,OAAO,uBAAuB,EAAE,IAAI,EAAE;QAC9EO,OAAO,EAAE;UAAE,cAAc,EAAE;QAAoC,CAAC;QAChEC,MAAM,EAAE;UAAEC,SAAS,EAAER,QAAQ;UAAES,MAAM,EAAER;QAAO;MAChD,CAAC,CAAC;MAEF,MAAMS,WAAW,GAAGN,aAAa,CAACO,IAAI,CAACC,YAAY;MAEnD,IAAI,CAACF,WAAW,EAAE;QAChB,MAAM,IAAIG,KAAK,CAAC,+BAA+B,CAAC;MAClD;;MAEA;MACA,MAAMC,gBAAgB,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,GAAGhB,OAAO,mBAAmBG,SAAS,EAAE,EAAE;QACjFI,OAAO,EAAE;UACPU,aAAa,EAAE,UAAUN,WAAW,EAAE;UACtC,cAAc,EAAE,kBAAkB;UAClCF,SAAS,EAAER;QACb;MACF,CAAC,CAAC;MAEF,MAAMiB,UAAU,GAAGH,gBAAgB,CAACI,MAAM;MAC1C,MAAMC,YAAY,GAAGL,gBAAgB,CAACH,IAAI;;MAE1C;MACAS,KAAK,CACH,gBAAgBH,UAAU,eAAeI,IAAI,CAACC,SAAS,CAACH,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,EAChF,CAAC;IACH,CAAC,CAAC,OAAOI,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACd;MACAL,KAAK,CAAC,mBAAmB,EAAAI,eAAA,GAAAD,KAAK,CAACG,QAAQ,cAAAF,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBb,IAAI,cAAAc,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAIJ,KAAK,CAACI,OAAO,EAAE,CAAC;IAC5E,CAAC,SAAS;MACR7B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKkC,SAAS,EAAC,oCAAoC;IAAAC,QAAA,eACjDnC,OAAA,CAACH,MAAM;MACLuC,OAAO,EAAC,SAAS;MACjBC,OAAO,EAAE5B,eAAgB;MACzB6B,QAAQ,EAAEnC,OAAQ;MAClB+B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAE1BhC,OAAO,GAAG,YAAY,GAAG;IAAU;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACxC,EAAA,CA5DID,UAAU;AAAA0C,EAAA,GAAV1C,UAAU;AA8DhB,eAAeA,UAAU;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}