{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/NearbyVendorsPage.js\",\n  _s = $RefreshSig$();\n// In NearbyVendorsPage.js\nimport React, { useEffect, useState } from 'react';\nimport VendorCard from './VendorCard';\nimport Footer from './Footer';\nimport api from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NearbyVendorsPage = ({\n  searchQuery\n}) => {\n  _s();\n  const [vendors, setVendors] = useState([]);\n  const [parsedAddress, setParsedAddress] = useState({\n    street: '',\n    city: '',\n    stateAbbreviation: ''\n  });\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const calculateDistance = (lat1, lng1, lat2, lng2) => {\n    const toRadians = degree => degree * Math.PI / 180;\n    const R = 3963; // Earth's radius in miles\n    const dLat = toRadians(lat2 - lat1);\n    const dLng = toRadians(lng2 - lng1);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(toRadians(lat1)) * Math.cos(toRadians(lat2)) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n  };\n  useEffect(() => {\n    const savedAddress = localStorage.getItem('userAddress');\n    if (savedAddress) {\n      var _parts$, _parts$2, _parts$3;\n      const parts = savedAddress.split(',');\n      setParsedAddress({\n        street: ((_parts$ = parts[0]) === null || _parts$ === void 0 ? void 0 : _parts$.trim()) || '',\n        city: ((_parts$2 = parts[1]) === null || _parts$2 === void 0 ? void 0 : _parts$2.trim()) || '',\n        stateAbbreviation: ((_parts$3 = parts[2]) === null || _parts$3 === void 0 ? void 0 : _parts$3.trim().split(' ')[0]) || ''\n      });\n    }\n  }, []);\n\n  // Update the vendor processing logic in fetchVendors function\n  const fetchVendors = async () => {\n    try {\n      const geocodeResponse = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(localStorage.getItem('userAddress'))}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`);\n      const geocodeData = await geocodeResponse.json();\n      if (geocodeData.status !== 'OK') throw new Error('Could not fetch location.');\n      const {\n        lat,\n        lng\n      } = geocodeData.results[0].geometry.location;\n      console.log('Making API request with coordinates:', {\n        lat,\n        lng\n      });\n      const {\n        data: vendorsData\n      } = await api.get('/api/vendors/nearby', {\n        params: {\n          lat,\n          lng\n        }\n      });\n      if (!(vendorsData !== null && vendorsData !== void 0 && vendorsData.vendors) || !Array.isArray(vendorsData.vendors)) {\n        throw new Error('No vendors found near your location.');\n      }\n\n      // Filter for Pickup and Pickup & Delivery vendors\n      const pickupVendors = vendorsData.vendors.filter(vendor => ['Pickup', 'Pickup & Delivery'].includes(vendor.dispensaryType));\n      const extractCoordinate = coord => {\n        if (!coord) return null;\n\n        // Handle $numberDouble format\n        if (coord.$numberDouble !== undefined) {\n          return parseFloat(coord.$numberDouble);\n        }\n        // Handle $numberInt format\n        if (coord.$numberInt !== undefined) {\n          return parseFloat(coord.$numberInt);\n        }\n        // Handle plain number format\n        if (typeof coord === 'number') {\n          return coord;\n        }\n        // Handle string format\n        if (typeof coord === 'string') {\n          return parseFloat(coord);\n        }\n        return null;\n      };\n      const enrichedVendors = pickupVendors.map(vendor => {\n        var _vendor$storefrontAdd;\n        let coordinates = null;\n\n        // Extract coordinates from storefrontAddress\n        if ((_vendor$storefrontAdd = vendor.storefrontAddress) !== null && _vendor$storefrontAdd !== void 0 && _vendor$storefrontAdd.coordinates) {\n          const coords = vendor.storefrontAddress.coordinates;\n          const lng = extractCoordinate(coords[0]);\n          const lat = extractCoordinate(coords[1]);\n          if (lng !== null && lat !== null && !isNaN(lng) && !isNaN(lat)) {\n            coordinates = [lng, lat];\n          }\n        }\n\n        // If no valid coordinates found, skip this vendor\n        if (!coordinates) {\n          console.warn(`No valid coordinates for vendor ${vendor.dispensaryName}`);\n          return null;\n        }\n\n        // Calculate distance\n        const milesAway = parseFloat(calculateDistance(lat, lng, coordinates[1],\n        // lat\n        coordinates[0] // lng\n        ).toFixed(1));\n        return {\n          ...vendor,\n          coordinates,\n          milesAway\n        };\n      }).filter(Boolean); // Remove null entries\n\n      console.log('Processed vendors:', enrichedVendors);\n      setVendors(enrichedVendors);\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error('Detailed error:', {\n        message: error.message,\n        response: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data,\n        status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status,\n        stack: error.stack\n      });\n      setError(error.message || 'Failed to load vendors.');\n    }\n  };\n  useEffect(() => {\n    const loadVendors = async () => {\n      setLoading(true);\n      try {\n        await fetchVendors();\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadVendors();\n  }, []);\n  const filteredVendors = vendors.filter(vendor => vendor.dispensaryType === 'Delivery' || vendor.dispensaryType === 'Pickup & Delivery').map(vendor => {\n    var _vendor$products;\n    const filteredProducts = (_vendor$products = vendor.products) === null || _vendor$products === void 0 ? void 0 : _vendor$products.filter(product => {\n      var _product$name, _product$brand, _product$strain;\n      const matchesProductName = (_product$name = product.name) === null || _product$name === void 0 ? void 0 : _product$name.toLowerCase().includes(searchQuery.trim().toLowerCase());\n      const matchesBrand = (_product$brand = product.brand) === null || _product$brand === void 0 ? void 0 : _product$brand.toLowerCase().includes(searchQuery.trim().toLowerCase());\n      const matchesStrain = (_product$strain = product.strain) === null || _product$strain === void 0 ? void 0 : _product$strain.toLowerCase().includes(searchQuery.trim().toLowerCase());\n      return matchesProductName || matchesBrand || matchesStrain;\n    });\n\n    // Preserve all vendor data including milesAway while filtering products\n    return {\n      ...vendor,\n      products: filteredProducts || []\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid p-0\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vendor-list\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading vendors...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this) : filteredVendors.length ? filteredVendors.map(vendor => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vendors-page vendor-card-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(VendorCard, {\n          vendor: vendor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this)\n      }, vendor._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(NearbyVendorsPage, \"IesVc7DW+LEZnTFlYMUmmBZ7AeM=\");\n_c = NearbyVendorsPage;\nexport default NearbyVendorsPage;\nvar _c;\n$RefreshReg$(_c, \"NearbyVendorsPage\");","map":{"version":3,"names":["React","useEffect","useState","VendorCard","Footer","api","jsxDEV","_jsxDEV","NearbyVendorsPage","searchQuery","_s","vendors","setVendors","parsedAddress","setParsedAddress","street","city","stateAbbreviation","error","setError","loading","setLoading","calculateDistance","lat1","lng1","lat2","lng2","toRadians","degree","Math","PI","R","dLat","dLng","a","sin","cos","c","atan2","sqrt","savedAddress","localStorage","getItem","_parts$","_parts$2","_parts$3","parts","split","trim","fetchVendors","geocodeResponse","fetch","encodeURIComponent","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","geocodeData","json","status","Error","lat","lng","results","geometry","location","console","log","data","vendorsData","get","params","Array","isArray","pickupVendors","filter","vendor","includes","dispensaryType","extractCoordinate","coord","$numberDouble","undefined","parseFloat","$numberInt","enrichedVendors","map","_vendor$storefrontAdd","coordinates","storefrontAddress","coords","isNaN","warn","dispensaryName","milesAway","toFixed","Boolean","_error$response","_error$response2","message","response","stack","loadVendors","filteredVendors","_vendor$products","filteredProducts","products","product","_product$name","_product$brand","_product$strain","matchesProductName","name","toLowerCase","matchesBrand","brand","matchesStrain","strain","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_id","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/NearbyVendorsPage.js"],"sourcesContent":["// In NearbyVendorsPage.js\nimport React, { useEffect, useState } from 'react';\nimport VendorCard from './VendorCard';\nimport Footer from './Footer';\nimport api from '../api/api';\n\nconst NearbyVendorsPage = ({ searchQuery }) => {\n  const [vendors, setVendors] = useState([]);\n  const [parsedAddress, setParsedAddress] = useState({ street: '', city: '', stateAbbreviation: '' });\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const calculateDistance = (lat1, lng1, lat2, lng2) => {\n    const toRadians = (degree) => (degree * Math.PI) / 180;\n    const R = 3963; // Earth's radius in miles\n    const dLat = toRadians(lat2 - lat1);\n    const dLng = toRadians(lng2 - lng1);\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(toRadians(lat1)) * Math.cos(toRadians(lat2)) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n  };\n\n  useEffect(() => {\n    const savedAddress = localStorage.getItem('userAddress');\n    if (savedAddress) {\n      const parts = savedAddress.split(',');\n      setParsedAddress({\n        street: parts[0]?.trim() || '',\n        city: parts[1]?.trim() || '',\n        stateAbbreviation: parts[2]?.trim().split(' ')[0] || '',\n      });\n    }\n  }, []);\n\n  // Update the vendor processing logic in fetchVendors function\nconst fetchVendors = async () => {\n  try {\n    const geocodeResponse = await fetch(\n      `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(\n        localStorage.getItem('userAddress')\n      )}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`\n    );\n    const geocodeData = await geocodeResponse.json();\n    if (geocodeData.status !== 'OK') throw new Error('Could not fetch location.');\n\n    const { lat, lng } = geocodeData.results[0].geometry.location;\n    console.log('Making API request with coordinates:', { lat, lng });\n\n    const { data: vendorsData } = await api.get('/api/vendors/nearby', {\n      params: { lat, lng }\n    });\n\n    if (!vendorsData?.vendors || !Array.isArray(vendorsData.vendors)) {\n      throw new Error('No vendors found near your location.');\n    }\n\n    // Filter for Pickup and Pickup & Delivery vendors\n    const pickupVendors = vendorsData.vendors.filter(\n      vendor => ['Pickup', 'Pickup & Delivery'].includes(vendor.dispensaryType)\n    );\n\n    const extractCoordinate = (coord) => {\n      if (!coord) return null;\n      \n      // Handle $numberDouble format\n      if (coord.$numberDouble !== undefined) {\n        return parseFloat(coord.$numberDouble);\n      }\n      // Handle $numberInt format\n      if (coord.$numberInt !== undefined) {\n        return parseFloat(coord.$numberInt);\n      }\n      // Handle plain number format\n      if (typeof coord === 'number') {\n        return coord;\n      }\n      // Handle string format\n      if (typeof coord === 'string') {\n        return parseFloat(coord);\n      }\n      return null;\n    };\n\n    const enrichedVendors = pickupVendors.map((vendor) => {\n      let coordinates = null;\n\n      // Extract coordinates from storefrontAddress\n      if (vendor.storefrontAddress?.coordinates) {\n        const coords = vendor.storefrontAddress.coordinates;\n        const lng = extractCoordinate(coords[0]);\n        const lat = extractCoordinate(coords[1]);\n        \n        if (lng !== null && lat !== null && !isNaN(lng) && !isNaN(lat)) {\n          coordinates = [lng, lat];\n        }\n      }\n\n      // If no valid coordinates found, skip this vendor\n      if (!coordinates) {\n        console.warn(`No valid coordinates for vendor ${vendor.dispensaryName}`);\n        return null;\n      }\n\n      // Calculate distance\n      const milesAway = parseFloat(calculateDistance(\n        lat, \n        lng, \n        coordinates[1], // lat\n        coordinates[0]  // lng\n      ).toFixed(1));\n\n      return {\n        ...vendor,\n        coordinates,\n        milesAway\n      };\n    }).filter(Boolean); // Remove null entries\n\n    console.log('Processed vendors:', enrichedVendors);\n    setVendors(enrichedVendors);\n\n  } catch (error) {\n    console.error('Detailed error:', {\n      message: error.message,\n      response: error.response?.data,\n      status: error.response?.status,\n      stack: error.stack\n    });\n    setError(error.message || 'Failed to load vendors.');\n  }\n};\n\n  useEffect(() => {\n    const loadVendors = async () => {\n      setLoading(true);\n      try {\n        await fetchVendors();\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n  \n    loadVendors();\n  }, []);\n\n  const filteredVendors = vendors\n    .filter((vendor) => \n      vendor.dispensaryType === 'Delivery' || vendor.dispensaryType === 'Pickup & Delivery'\n    )\n    .map((vendor) => {\n      const filteredProducts = vendor.products?.filter((product) => {\n        const matchesProductName = product.name?.toLowerCase().includes(searchQuery.trim().toLowerCase());\n        const matchesBrand = product.brand?.toLowerCase().includes(searchQuery.trim().toLowerCase());\n        const matchesStrain = product.strain?.toLowerCase().includes(searchQuery.trim().toLowerCase());\n        return matchesProductName || matchesBrand || matchesStrain;\n      });\n    \n      // Preserve all vendor data including milesAway while filtering products\n      return { ...vendor, products: filteredProducts || [] };\n    });\n\n  return (\n    <div className=\"container-fluid p-0\">\n      <div className=\"vendor-list\">\n        {loading ? (\n          <p>Loading vendors...</p>\n        ) : error ? (\n          <p className=\"text-danger\">{error}</p>\n        ) : filteredVendors.length ? (\n          filteredVendors.map((vendor) => (\n            <div key={vendor._id} className=\"vendors-page vendor-card-wrapper\">\n              <VendorCard vendor={vendor} />\n            </div>\n          ))\n        ) : (\n          <p></p>\n        )}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default NearbyVendorsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}