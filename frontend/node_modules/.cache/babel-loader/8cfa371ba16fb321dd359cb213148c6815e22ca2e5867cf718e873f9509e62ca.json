{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';// Create a Context for the cart\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const CartContext=/*#__PURE__*/createContext();export const CartProvider=_ref=>{let{children}=_ref;// Load cart items from localStorage on initial load\nconst loadCartFromLocalStorage=()=>{const savedCartItems=JSON.parse(localStorage.getItem('cartItems'));return savedCartItems?savedCartItems:[];};// State to hold cart items, initialized from localStorage\nconst[cartItems,setCartItems]=useState(loadCartFromLocalStorage);// Save cart items to localStorage whenever cartItems changes\nuseEffect(()=>{localStorage.setItem('cartItems',JSON.stringify(cartItems));},[cartItems]);// Function to get the dispensary name of the vendor from the cart\nconst getDispensaryName=()=>{return cartItems.length>0?cartItems[0].vendorName:null;};// Function to check if a product can be added to the cart\nconst canAddToCart=newProduct=>{if(cartItems.length===0){return true;// If the cart is empty, any product can be added\n}const existingVendor=cartItems[0].vendorId;return existingVendor===newProduct.vendorId;};const addToCart=product=>{console.log(\"Attempting to add product to cart:\",product);console.log(\"Current cart items before adding:\",cartItems);if(canAddToCart(product)){setCartItems(prevItems=>{const uniqueKey=`${product._id}-${product.strain}-${product.amount}`;const existingItem=prevItems.find(item=>`${item._id}-${item.strain}-${item.amount}`===uniqueKey);if(existingItem){console.log(\"Product already in cart, incrementing quantity:\",existingItem);return prevItems.map(item=>`${item._id}-${item.strain}-${item.amount}`===uniqueKey?{...item,quantity:item.quantity+1}:item);}else{var _product$vendorId,_product$_id,_product$_id2,_product$_id3;console.log(\"Product not in cart, adding new product:\",product);// Ensure vendorId is properly handled\nconst vendorId=((_product$vendorId=product.vendorId)===null||_product$vendorId===void 0?void 0:_product$vendorId.toString())||((_product$_id=product._id)===null||_product$_id===void 0?void 0:_product$_id.toString());return[...prevItems,{...product,quantity:1,productId:(_product$_id2=product._id)===null||_product$_id2===void 0?void 0:_product$_id2.toString(),// Ensure string conversion\nvendorId:vendorId,// Use consistent vendorId\nvendorName:product.dispensaryName||product.vendorName,// Handle both formats\nlogoUrl:product.logoUrl,orderType:product.orderType,_id:(_product$_id3=product._id)===null||_product$_id3===void 0?void 0:_product$_id3.toString()// Ensure _id is consistent\n}];}});}else{var _cartItems$,_cartItems$2;console.warn(`Cannot add product from different vendor (${product.vendorName}). Current vendor: ${(_cartItems$=cartItems[0])===null||_cartItems$===void 0?void 0:_cartItems$.vendorName}`);alert(`You can only add products from the same vendor (${(_cartItems$2=cartItems[0])===null||_cartItems$2===void 0?void 0:_cartItems$2.vendorName}). Please clear your cart to add items from a different vendor.`);}};// Remove product from the cart\nconst removeFromCart=productId=>{setCartItems(prevItems=>prevItems.filter(item=>item._id!==productId));};// Increment quantity of a specific item in the cart\nconst incrementItem=productId=>{setCartItems(prevItems=>prevItems.map(item=>item._id===productId?{...item,quantity:item.quantity+1}:item));};// Decrement quantity of a specific item in the cart\nconst decrementItem=productId=>{setCartItems(prevItems=>prevItems.map(item=>item._id===productId&&item.quantity>1?{...item,quantity:item.quantity-1}:item));};// Update quantity of a specific item in the cart manually\nconst updateItemQuantity=(productId,newQuantity)=>{setCartItems(prevItems=>prevItems.map(item=>item.productId===productId?{...item,quantity:newQuantity}:item));};// Clear all items from the cart\nconst clearCart=()=>{setCartItems([]);};// Calculate total price of items in the cart\nconst calculateTotal=()=>{return cartItems.reduce((acc,item)=>{const itemPrice=item.salePrice||item.price||0;// Fallback to 0 if undefined\nreturn acc+itemPrice*(item.quantity||1);// Fallback quantity to 1\n},0);};// Get the total number of items in the cart (quantity, not unique items)\nconst getItemCount=()=>{return cartItems.reduce((acc,item)=>acc+item.quantity,0);};// Provide cart data and functions to the rest of the app\nconst value={cartItems,addToCart,removeFromCart,incrementItem,decrementItem,updateItemQuantity,clearCart,calculateTotal,getItemCount,getDispensaryName};return/*#__PURE__*/_jsx(CartContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","jsx","_jsx","CartContext","CartProvider","_ref","children","loadCartFromLocalStorage","savedCartItems","JSON","parse","localStorage","getItem","cartItems","setCartItems","setItem","stringify","getDispensaryName","length","vendorName","canAddToCart","newProduct","existingVendor","vendorId","addToCart","product","console","log","prevItems","uniqueKey","_id","strain","amount","existingItem","find","item","map","quantity","_product$vendorId","_product$_id","_product$_id2","_product$_id3","toString","productId","dispensaryName","logoUrl","orderType","_cartItems$","_cartItems$2","warn","alert","removeFromCart","filter","incrementItem","decrementItem","updateItemQuantity","newQuantity","clearCart","calculateTotal","reduce","acc","itemPrice","salePrice","price","getItemCount","value","Provider"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\n// Create a Context for the cart\nexport const CartContext = createContext();\n\nexport const CartProvider = ({ children }) => {\n\n  // Load cart items from localStorage on initial load\n  const loadCartFromLocalStorage = () => {\n    const savedCartItems = JSON.parse(localStorage.getItem('cartItems'));\n    return savedCartItems ? savedCartItems : [];\n  };\n\n  // State to hold cart items, initialized from localStorage\n  const [cartItems, setCartItems] = useState(loadCartFromLocalStorage);\n\n  // Save cart items to localStorage whenever cartItems changes\n  useEffect(() => {\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  // Function to get the dispensary name of the vendor from the cart\n  const getDispensaryName = () => {\n    return cartItems.length > 0 ? cartItems[0].vendorName : null;\n  };\n\n  // Function to check if a product can be added to the cart\n  const canAddToCart = (newProduct) => {\n    if (cartItems.length === 0) {\n      return true; // If the cart is empty, any product can be added\n    }\n    const existingVendor = cartItems[0].vendorId;\n    return existingVendor === newProduct.vendorId;\n  };\n\n  const addToCart = (product) => {\n    console.log(\"Attempting to add product to cart:\", product);\n    console.log(\"Current cart items before adding:\", cartItems);\n  \n    if (canAddToCart(product)) {\n      setCartItems((prevItems) => {\n        const uniqueKey = `${product._id}-${product.strain}-${product.amount}`;\n        const existingItem = prevItems.find(\n          (item) => `${item._id}-${item.strain}-${item.amount}` === uniqueKey\n        );\n  \n        if (existingItem) {\n          console.log(\"Product already in cart, incrementing quantity:\", existingItem);\n          return prevItems.map((item) =>\n            `${item._id}-${item.strain}-${item.amount}` === uniqueKey\n              ? { ...item, quantity: item.quantity + 1 }\n              : item\n          );\n        } else {\n          console.log(\"Product not in cart, adding new product:\", product);\n          // Ensure vendorId is properly handled\n          const vendorId = product.vendorId?.toString() || product._id?.toString();\n          return [\n            ...prevItems,\n            {\n              ...product,\n              quantity: 1,\n              productId: product._id?.toString(),  // Ensure string conversion\n              vendorId: vendorId,  // Use consistent vendorId\n              vendorName: product.dispensaryName || product.vendorName, // Handle both formats\n              logoUrl: product.logoUrl,\n              orderType: product.orderType,\n              _id: product._id?.toString(),  // Ensure _id is consistent\n            },\n          ];\n        }\n      });\n    } else {\n      console.warn(\n        `Cannot add product from different vendor (${product.vendorName}). Current vendor: ${cartItems[0]?.vendorName}`\n      );\n      alert(\n        `You can only add products from the same vendor (${cartItems[0]?.vendorName}). Please clear your cart to add items from a different vendor.`\n      );\n    }\n  };\n  \n  \n  \n\n  // Remove product from the cart\n  const removeFromCart = (productId) => {\n    setCartItems((prevItems) =>\n      prevItems.filter(item => item._id !== productId)\n    );\n  };\n\n  // Increment quantity of a specific item in the cart\n  const incrementItem = (productId) => {\n    setCartItems((prevItems) =>\n      prevItems.map(item =>\n        item._id === productId ? { ...item, quantity: item.quantity + 1 } : item\n      )\n    );\n  };\n\n  // Decrement quantity of a specific item in the cart\n  const decrementItem = (productId) => {\n    setCartItems((prevItems) =>\n      prevItems.map(item =>\n        item._id === productId && item.quantity > 1\n          ? { ...item, quantity: item.quantity - 1 }\n          : item\n      )\n    );\n  };\n\n  // Update quantity of a specific item in the cart manually\n  const updateItemQuantity = (productId, newQuantity) => {\n    setCartItems((prevItems) =>\n      prevItems.map(item =>\n        item.productId === productId ? { ...item, quantity: newQuantity } : item\n      )\n    );\n  };\n\n  // Clear all items from the cart\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  // Calculate total price of items in the cart\n  const calculateTotal = () => {\n    return cartItems.reduce((acc, item) => {\n      const itemPrice = item.salePrice || item.price || 0; // Fallback to 0 if undefined\n      return acc + itemPrice * (item.quantity || 1); // Fallback quantity to 1\n    }, 0);\n  };\n  \n\n  // Get the total number of items in the cart (quantity, not unique items)\n  const getItemCount = () => {\n    return cartItems.reduce((acc, item) => acc + item.quantity, 0);\n  };\n\n  // Provide cart data and functions to the rest of the app\n  const value = {\n    cartItems,\n    addToCart,\n    removeFromCart,\n    incrementItem,\n    decrementItem,\n    updateItemQuantity,\n    clearCart,\n    calculateTotal,\n    getItemCount,\n    getDispensaryName,\n  };\n\n  return (\n    <CartContext.Provider value={value}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAEjE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,MAAO,MAAM,CAAAC,WAAW,cAAGL,aAAa,CAAC,CAAC,CAE1C,MAAO,MAAM,CAAAM,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAEvC;AACA,KAAM,CAAAE,wBAAwB,CAAGA,CAAA,GAAM,CACrC,KAAM,CAAAC,cAAc,CAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CACpE,MAAO,CAAAJ,cAAc,CAAGA,cAAc,CAAG,EAAE,CAC7C,CAAC,CAED;AACA,KAAM,CAACK,SAAS,CAAEC,YAAY,CAAC,CAAGf,QAAQ,CAACQ,wBAAwB,CAAC,CAEpE;AACAP,SAAS,CAAC,IAAM,CACdW,YAAY,CAACI,OAAO,CAAC,WAAW,CAAEN,IAAI,CAACO,SAAS,CAACH,SAAS,CAAC,CAAC,CAC9D,CAAC,CAAE,CAACA,SAAS,CAAC,CAAC,CAEf;AACA,KAAM,CAAAI,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,MAAO,CAAAJ,SAAS,CAACK,MAAM,CAAG,CAAC,CAAGL,SAAS,CAAC,CAAC,CAAC,CAACM,UAAU,CAAG,IAAI,CAC9D,CAAC,CAED;AACA,KAAM,CAAAC,YAAY,CAAIC,UAAU,EAAK,CACnC,GAAIR,SAAS,CAACK,MAAM,GAAK,CAAC,CAAE,CAC1B,MAAO,KAAI,CAAE;AACf,CACA,KAAM,CAAAI,cAAc,CAAGT,SAAS,CAAC,CAAC,CAAC,CAACU,QAAQ,CAC5C,MAAO,CAAAD,cAAc,GAAKD,UAAU,CAACE,QAAQ,CAC/C,CAAC,CAED,KAAM,CAAAC,SAAS,CAAIC,OAAO,EAAK,CAC7BC,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAEF,OAAO,CAAC,CAC1DC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAEd,SAAS,CAAC,CAE3D,GAAIO,YAAY,CAACK,OAAO,CAAC,CAAE,CACzBX,YAAY,CAAEc,SAAS,EAAK,CAC1B,KAAM,CAAAC,SAAS,CAAG,GAAGJ,OAAO,CAACK,GAAG,IAAIL,OAAO,CAACM,MAAM,IAAIN,OAAO,CAACO,MAAM,EAAE,CACtE,KAAM,CAAAC,YAAY,CAAGL,SAAS,CAACM,IAAI,CAChCC,IAAI,EAAK,GAAGA,IAAI,CAACL,GAAG,IAAIK,IAAI,CAACJ,MAAM,IAAII,IAAI,CAACH,MAAM,EAAE,GAAKH,SAC5D,CAAC,CAED,GAAII,YAAY,CAAE,CAChBP,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAEM,YAAY,CAAC,CAC5E,MAAO,CAAAL,SAAS,CAACQ,GAAG,CAAED,IAAI,EACxB,GAAGA,IAAI,CAACL,GAAG,IAAIK,IAAI,CAACJ,MAAM,IAAII,IAAI,CAACH,MAAM,EAAE,GAAKH,SAAS,CACrD,CAAE,GAAGM,IAAI,CAAEE,QAAQ,CAAEF,IAAI,CAACE,QAAQ,CAAG,CAAE,CAAC,CACxCF,IACN,CAAC,CACH,CAAC,IAAM,KAAAG,iBAAA,CAAAC,YAAA,CAAAC,aAAA,CAAAC,aAAA,CACLf,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAEF,OAAO,CAAC,CAChE;AACA,KAAM,CAAAF,QAAQ,CAAG,EAAAe,iBAAA,CAAAb,OAAO,CAACF,QAAQ,UAAAe,iBAAA,iBAAhBA,iBAAA,CAAkBI,QAAQ,CAAC,CAAC,KAAAH,YAAA,CAAId,OAAO,CAACK,GAAG,UAAAS,YAAA,iBAAXA,YAAA,CAAaG,QAAQ,CAAC,CAAC,EACxE,MAAO,CACL,GAAGd,SAAS,CACZ,CACE,GAAGH,OAAO,CACVY,QAAQ,CAAE,CAAC,CACXM,SAAS,EAAAH,aAAA,CAAEf,OAAO,CAACK,GAAG,UAAAU,aAAA,iBAAXA,aAAA,CAAaE,QAAQ,CAAC,CAAC,CAAG;AACrCnB,QAAQ,CAAEA,QAAQ,CAAG;AACrBJ,UAAU,CAAEM,OAAO,CAACmB,cAAc,EAAInB,OAAO,CAACN,UAAU,CAAE;AAC1D0B,OAAO,CAAEpB,OAAO,CAACoB,OAAO,CACxBC,SAAS,CAAErB,OAAO,CAACqB,SAAS,CAC5BhB,GAAG,EAAAW,aAAA,CAAEhB,OAAO,CAACK,GAAG,UAAAW,aAAA,iBAAXA,aAAA,CAAaC,QAAQ,CAAC,CAAI;AACjC,CAAC,CACF,CACH,CACF,CAAC,CAAC,CACJ,CAAC,IAAM,KAAAK,WAAA,CAAAC,YAAA,CACLtB,OAAO,CAACuB,IAAI,CACV,6CAA6CxB,OAAO,CAACN,UAAU,uBAAA4B,WAAA,CAAsBlC,SAAS,CAAC,CAAC,CAAC,UAAAkC,WAAA,iBAAZA,WAAA,CAAc5B,UAAU,EAC/G,CAAC,CACD+B,KAAK,CACH,oDAAAF,YAAA,CAAmDnC,SAAS,CAAC,CAAC,CAAC,UAAAmC,YAAA,iBAAZA,YAAA,CAAc7B,UAAU,iEAC7E,CAAC,CACH,CACF,CAAC,CAKD;AACA,KAAM,CAAAgC,cAAc,CAAIR,SAAS,EAAK,CACpC7B,YAAY,CAAEc,SAAS,EACrBA,SAAS,CAACwB,MAAM,CAACjB,IAAI,EAAIA,IAAI,CAACL,GAAG,GAAKa,SAAS,CACjD,CAAC,CACH,CAAC,CAED;AACA,KAAM,CAAAU,aAAa,CAAIV,SAAS,EAAK,CACnC7B,YAAY,CAAEc,SAAS,EACrBA,SAAS,CAACQ,GAAG,CAACD,IAAI,EAChBA,IAAI,CAACL,GAAG,GAAKa,SAAS,CAAG,CAAE,GAAGR,IAAI,CAAEE,QAAQ,CAAEF,IAAI,CAACE,QAAQ,CAAG,CAAE,CAAC,CAAGF,IACtE,CACF,CAAC,CACH,CAAC,CAED;AACA,KAAM,CAAAmB,aAAa,CAAIX,SAAS,EAAK,CACnC7B,YAAY,CAAEc,SAAS,EACrBA,SAAS,CAACQ,GAAG,CAACD,IAAI,EAChBA,IAAI,CAACL,GAAG,GAAKa,SAAS,EAAIR,IAAI,CAACE,QAAQ,CAAG,CAAC,CACvC,CAAE,GAAGF,IAAI,CAAEE,QAAQ,CAAEF,IAAI,CAACE,QAAQ,CAAG,CAAE,CAAC,CACxCF,IACN,CACF,CAAC,CACH,CAAC,CAED;AACA,KAAM,CAAAoB,kBAAkB,CAAGA,CAACZ,SAAS,CAAEa,WAAW,GAAK,CACrD1C,YAAY,CAAEc,SAAS,EACrBA,SAAS,CAACQ,GAAG,CAACD,IAAI,EAChBA,IAAI,CAACQ,SAAS,GAAKA,SAAS,CAAG,CAAE,GAAGR,IAAI,CAAEE,QAAQ,CAAEmB,WAAY,CAAC,CAAGrB,IACtE,CACF,CAAC,CACH,CAAC,CAED;AACA,KAAM,CAAAsB,SAAS,CAAGA,CAAA,GAAM,CACtB3C,YAAY,CAAC,EAAE,CAAC,CAClB,CAAC,CAED;AACA,KAAM,CAAA4C,cAAc,CAAGA,CAAA,GAAM,CAC3B,MAAO,CAAA7C,SAAS,CAAC8C,MAAM,CAAC,CAACC,GAAG,CAAEzB,IAAI,GAAK,CACrC,KAAM,CAAA0B,SAAS,CAAG1B,IAAI,CAAC2B,SAAS,EAAI3B,IAAI,CAAC4B,KAAK,EAAI,CAAC,CAAE;AACrD,MAAO,CAAAH,GAAG,CAAGC,SAAS,EAAI1B,IAAI,CAACE,QAAQ,EAAI,CAAC,CAAC,CAAE;AACjD,CAAC,CAAE,CAAC,CAAC,CACP,CAAC,CAGD;AACA,KAAM,CAAA2B,YAAY,CAAGA,CAAA,GAAM,CACzB,MAAO,CAAAnD,SAAS,CAAC8C,MAAM,CAAC,CAACC,GAAG,CAAEzB,IAAI,GAAKyB,GAAG,CAAGzB,IAAI,CAACE,QAAQ,CAAE,CAAC,CAAC,CAChE,CAAC,CAED;AACA,KAAM,CAAA4B,KAAK,CAAG,CACZpD,SAAS,CACTW,SAAS,CACT2B,cAAc,CACdE,aAAa,CACbC,aAAa,CACbC,kBAAkB,CAClBE,SAAS,CACTC,cAAc,CACdM,YAAY,CACZ/C,iBACF,CAAC,CAED,mBACEf,IAAA,CAACC,WAAW,CAAC+D,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAA3D,QAAA,CAChCA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}