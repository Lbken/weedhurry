{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/TestMenu.js\",\n  _s = $RefreshSig$();\n// TestMenu.js\nimport React, { useState, useEffect } from 'react';\nimport { Container, ButtonGroup, Button } from 'react-bootstrap';\nimport ProductRow from './ProductRow'; // Assuming ProductRow is in the same directory\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst customCategoryOrder = ['Flower', 'Pre-roll', 'Vape', 'Edible', 'Extract', 'Topical', 'Merch'];\nconst TestMenu = ({\n  products\n}) => {\n  _s();\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('All');\n  useEffect(() => {\n    setFilteredProducts(products);\n  }, [products]);\n  const handleCategoryChange = category => {\n    setSelectedCategory(category);\n    setFilteredProducts(category === 'All' ? products : products.filter(product => product.category === category));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"my-4\",\n      children: \"Vendor Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      className: \"d-flex overflow-auto mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-secondary\",\n        onClick: () => handleCategoryChange('All'),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), customCategoryOrder.map(category => /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-secondary\",\n        onClick: () => handleCategoryChange(category),\n        children: category\n      }, category, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), customCategoryOrder.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-4\",\n      children: (selectedCategory === 'All' || selectedCategory === category) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this), filteredProducts.filter(product => product.category === category).map(product => /*#__PURE__*/_jsxDEV(ProductRow, {\n          product: product\n        }, product.productId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 37\n        }, this))]\n      }, void 0, true)\n    }, category, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(TestMenu, \"1SgJqQVY5B/0LjEVU2C+lNGoqWI=\");\n_c = TestMenu;\nexport default TestMenu;\nvar _c;\n$RefreshReg$(_c, \"TestMenu\");","map":{"version":3,"names":["React","useState","useEffect","Container","ButtonGroup","Button","ProductRow","jsxDEV","_jsxDEV","Fragment","_Fragment","customCategoryOrder","TestMenu","products","_s","filteredProducts","setFilteredProducts","selectedCategory","setSelectedCategory","handleCategoryChange","category","filter","product","children","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","map","productId","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/components/TestMenu.js"],"sourcesContent":["// TestMenu.js\nimport React, { useState, useEffect } from 'react';\nimport { Container, ButtonGroup, Button } from 'react-bootstrap';\nimport ProductRow from './ProductRow'; // Assuming ProductRow is in the same directory\n\nconst customCategoryOrder = ['Flower', 'Pre-roll', 'Vape', 'Edible', 'Extract', 'Topical', 'Merch'];\n\nconst TestMenu = ({ products }) => {\n    const [filteredProducts, setFilteredProducts] = useState([]);\n    const [selectedCategory, setSelectedCategory] = useState('All');\n\n    useEffect(() => {\n        setFilteredProducts(products);\n    }, [products]);\n\n    const handleCategoryChange = (category) => {\n        setSelectedCategory(category);\n        setFilteredProducts(\n            category === 'All'\n                ? products\n                : products.filter(product => product.category === category)\n        );\n    };\n\n    return (\n        <Container>\n            <h2 className=\"my-4\">Vendor Menu</h2>\n            <ButtonGroup className=\"d-flex overflow-auto mb-3\">\n                <Button variant=\"outline-secondary\" onClick={() => handleCategoryChange('All')}>All</Button>\n                {customCategoryOrder.map((category) => (\n                    <Button key={category} variant=\"outline-secondary\" onClick={() => handleCategoryChange(category)}>\n                        {category}\n                    </Button>\n                ))}\n            </ButtonGroup>\n            {customCategoryOrder.map((category) => (\n                <div key={category} className=\"my-4\">\n                    {(selectedCategory === 'All' || selectedCategory === category) && (\n                        <>\n                            <h4>{category}</h4>\n                            {filteredProducts\n                                .filter(product => product.category === category)\n                                .map((product) => (\n                                    <ProductRow key={product.productId} product={product} />\n                                ))}\n                        </>\n                    )}\n                </div>\n            ))}\n        </Container>\n    );\n};\n\nexport default TestMenu;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}