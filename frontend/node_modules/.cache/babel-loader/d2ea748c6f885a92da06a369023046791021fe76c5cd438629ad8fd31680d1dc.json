{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/weedhurry-platform/v1/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [auth, setAuthState] = useState({\n    token: null,\n    vendorId: null\n  });\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const storedAuth = JSON.parse(localStorage.getItem('auth'));\n      if (storedAuth !== null && storedAuth !== void 0 && storedAuth.refreshToken) {\n        try {\n          // Use the refresh token to get a new access token\n          const response = await axios.post('/api/auth/refresh-token', {}, {\n            headers: {\n              Authorization: `Bearer ${storedAuth.refreshToken}`\n            }\n          });\n          const updatedAuth = {\n            token: response.data.accessToken,\n            refreshToken: response.data.refreshToken,\n            vendorId: storedAuth.vendorId\n          };\n          setAuth(updatedAuth);\n          localStorage.setItem('auth', JSON.stringify(updatedAuth)); // Save new tokens\n        } catch (error) {\n          console.error('Token refresh failed:', error);\n          handleLogout();\n        }\n      } else {\n        handleLogout(); // No valid refresh token\n      }\n      setLoading(false); // Auth process completed\n    };\n    initializeAuth();\n  }, []);\n  const setAuth = authData => {\n    localStorage.setItem('auth', JSON.stringify(authData));\n    setAuthState(authData);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('auth');\n    setAuthState({\n      token: null,\n      vendorId: null\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth,\n      setAuth,\n      logout: handleLogout,\n      loading\n    },\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 24\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"NT6dFEeIk8nmXxgAhUEox035u2M=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","auth","setAuthState","token","vendorId","loading","setLoading","initializeAuth","storedAuth","JSON","parse","localStorage","getItem","refreshToken","response","post","headers","Authorization","updatedAuth","data","accessToken","setAuth","setItem","stringify","error","console","handleLogout","authData","removeItem","Provider","value","logout","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [auth, setAuthState] = useState({ token: null, vendorId: null });\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const initializeAuth = async () => {\n            const storedAuth = JSON.parse(localStorage.getItem('auth'));\n            if (storedAuth?.refreshToken) {\n                try {\n                    // Use the refresh token to get a new access token\n                    const response = await axios.post('/api/auth/refresh-token', {}, {\n                        headers: { Authorization: `Bearer ${storedAuth.refreshToken}` },\n                    });\n    \n                    const updatedAuth = {\n                        token: response.data.accessToken,\n                        refreshToken: response.data.refreshToken,\n                        vendorId: storedAuth.vendorId,\n                    };\n    \n                    setAuth(updatedAuth);\n                    localStorage.setItem('auth', JSON.stringify(updatedAuth)); // Save new tokens\n                } catch (error) {\n                    console.error('Token refresh failed:', error);\n                    handleLogout();\n                }\n            } else {\n                handleLogout(); // No valid refresh token\n            }\n            setLoading(false); // Auth process completed\n        };\n        initializeAuth();\n    }, []);\n    \n\n    const setAuth = (authData) => {\n        localStorage.setItem('auth', JSON.stringify(authData));\n        setAuthState(authData);\n    };\n\n    const handleLogout = () => {\n        localStorage.removeItem('auth');\n        setAuthState({ token: null, vendorId: null });\n    };\n\n    return (\n        <AuthContext.Provider value={{ auth, setAuth, logout: handleLogout, loading }}>\n            {loading ? <div>Loading...</div> : children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (!context) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}