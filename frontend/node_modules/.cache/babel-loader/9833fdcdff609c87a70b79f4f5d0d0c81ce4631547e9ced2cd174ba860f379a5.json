{"ast":null,"code":"import axios from'axios';// Environment-based configuration\nconst isDevelopment=process.env.NODE_ENV==='development';const baseURL=isDevelopment?'http://localhost:5001/api':'https://api.weedhurry.com/api';const api=axios.create({baseURL,withCredentials:true,timeout:30000,// Increased timeout for image uploads\nheaders:{'Content-Type':'application/json','Accept':'application/json, text/plain, */*'},retry:3,retryDelay:retryCount=>retryCount*1000});// Request interceptor\napi.interceptors.request.use(config=>{// For multipart/form-data requests, remove Content-Type header\n// to let browser set it with boundary\nif(config.data instanceof FormData){delete config.headers['Content-Type'];}// Add timestamp to prevent caching\nconfig.params={...config.params,_t:Date.now()};return config;},error=>Promise.reject(error));// Response interceptor\napi.interceptors.response.use(response=>response,async error=>{var _error$response;const originalRequest=error.config;// Don't retry if it's already been retried or is a logout request\nif(originalRequest._retry||originalRequest.url==='/auth/logout'){return Promise.reject(error);}// Handle 401 Unauthorized errors\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401&&!originalRequest._retry){originalRequest._retry=true;try{var _response$data;const response=await api.post('/auth/refresh-token');if((_response$data=response.data)!==null&&_response$data!==void 0&&_response$data.success){return api(originalRequest);}}catch(refreshError){console.error('Token refresh failed:',refreshError);handleAuthFailure();return Promise.reject(refreshError);}}// Handle network errors\nif(error.message==='Network Error'){console.error('Network error occurred:',error);// Optionally show user-friendly error message\n// toast.error('Connection error. Please check your internet connection.');\n}return Promise.reject(error);});const handleAuthFailure=()=>{const publicRoutes=['/','/nearby','/login','/register'];const domain=isDevelopment?'localhost':'.weedhurry.com';// Clear cookies\nconst cookieOptions=`Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT; ${!isDevelopment?`Domain=${domain};`:''} ${!isDevelopment?'Secure; SameSite=None':''}`;document.cookie=`accessToken=; ${cookieOptions}`;document.cookie=`refreshToken=; ${cookieOptions}`;// Clear storage\nlocalStorage.removeItem('auth');sessionStorage.removeItem('auth');// Only redirect if not on a public route\nif(!publicRoutes.includes(window.location.pathname)){window.location.href='/login';}};export default api;","map":{"version":3,"names":["axios","isDevelopment","process","env","NODE_ENV","baseURL","api","create","withCredentials","timeout","headers","retry","retryDelay","retryCount","interceptors","request","use","config","data","FormData","params","_t","Date","now","error","Promise","reject","response","_error$response","originalRequest","_retry","url","status","_response$data","post","success","refreshError","console","handleAuthFailure","message","publicRoutes","domain","cookieOptions","document","cookie","localStorage","removeItem","sessionStorage","includes","window","location","pathname","href"],"sources":["/Users/home/Desktop/weedhurry-platform/v1/frontend/src/api/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Environment-based configuration\nconst isDevelopment = process.env.NODE_ENV === 'development';\nconst baseURL = isDevelopment \n    ? 'http://localhost:5001/api'\n    : 'https://api.weedhurry.com/api';\n\nconst api = axios.create({\n    baseURL,\n    withCredentials: true,\n    timeout: 30000, // Increased timeout for image uploads\n    headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json, text/plain, */*'\n    },\n    retry: 3,\n    retryDelay: (retryCount) => retryCount * 1000\n});\n\n// Request interceptor\napi.interceptors.request.use(\n    (config) => {\n        // For multipart/form-data requests, remove Content-Type header\n        // to let browser set it with boundary\n        if (config.data instanceof FormData) {\n            delete config.headers['Content-Type'];\n        }\n        \n        // Add timestamp to prevent caching\n        config.params = {\n            ...config.params,\n            _t: Date.now()\n        };\n        return config;\n    },\n    (error) => Promise.reject(error)\n);\n\n// Response interceptor\napi.interceptors.response.use(\n    (response) => response,\n    async (error) => {\n        const originalRequest = error.config;\n\n        // Don't retry if it's already been retried or is a logout request\n        if (originalRequest._retry || originalRequest.url === '/auth/logout') {\n            return Promise.reject(error);\n        }\n\n        // Handle 401 Unauthorized errors\n        if (error.response?.status === 401 && !originalRequest._retry) {\n            originalRequest._retry = true;\n            try {\n                const response = await api.post('/auth/refresh-token');\n                if (response.data?.success) {\n                    return api(originalRequest);\n                }\n            } catch (refreshError) {\n                console.error('Token refresh failed:', refreshError);\n                handleAuthFailure();\n                return Promise.reject(refreshError);\n            }\n        }\n\n        // Handle network errors\n        if (error.message === 'Network Error') {\n            console.error('Network error occurred:', error);\n            // Optionally show user-friendly error message\n            // toast.error('Connection error. Please check your internet connection.');\n        }\n\n        return Promise.reject(error);\n    }\n);\n\nconst handleAuthFailure = () => {\n    const publicRoutes = ['/', '/nearby', '/login', '/register'];\n    const domain = isDevelopment ? 'localhost' : '.weedhurry.com';\n    \n    // Clear cookies\n    const cookieOptions = `Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT; ${\n        !isDevelopment ? `Domain=${domain};` : ''\n    } ${!isDevelopment ? 'Secure; SameSite=None' : ''}`;\n    \n    document.cookie = `accessToken=; ${cookieOptions}`;\n    document.cookie = `refreshToken=; ${cookieOptions}`;\n    \n    // Clear storage\n    localStorage.removeItem('auth');\n    sessionStorage.removeItem('auth');\n\n    // Only redirect if not on a public route\n    if (!publicRoutes.includes(window.location.pathname)) {\n        window.location.href = '/login';\n    }\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}